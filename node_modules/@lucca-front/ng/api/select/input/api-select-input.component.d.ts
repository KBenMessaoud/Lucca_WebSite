import { Overlay } from '@angular/cdk/overlay';
import { AfterViewInit, ChangeDetectorRef, ElementRef, Renderer2, ViewContainerRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { ILuOptionItem, LuOptionComparer, LuOptionPickerAdvancedComponent } from '@lucca-front/ng/option';
import { ALuSelectInputComponent } from '@lucca-front/ng/select';
import * as i0 from "@angular/core";
export declare class LuApiSelectInputComponent<T extends import('../../api.model').ILuApiItem = import('../../api.model').ILuApiItem> extends ALuSelectInputComponent<T, LuOptionPickerAdvancedComponent<T, ILuOptionItem<T>>> implements ControlValueAccessor, AfterViewInit {
    protected _changeDetectorRef: ChangeDetectorRef;
    protected _overlay: Overlay;
    protected _elementRef: ElementRef<HTMLElement>;
    protected _viewContainerRef: ViewContainerRef;
    protected _renderer: Renderer2;
    standard: 'v3' | 'v4';
    api: string;
    /**
     * only works with standard="v3"
     */
    fields: string;
    filters: string[];
    /**
     * only works with standard="v3", otherwise use sort
     */
    orderBy: string;
    /**
     * only works with standard="v4", otherwise use orderBy
     */
    sort: string;
    byId: LuOptionComparer<T>;
    constructor(_changeDetectorRef: ChangeDetectorRef, _overlay: Overlay, _elementRef: ElementRef<HTMLElement>, _viewContainerRef: ViewContainerRef, _renderer: Renderer2);
    static ɵfac: i0.ɵɵFactoryDeclaration<LuApiSelectInputComponent<any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<LuApiSelectInputComponent<any>, "lu-api-select", never, { "standard": { "alias": "standard"; "required": false; }; "api": { "alias": "api"; "required": false; }; "fields": { "alias": "fields"; "required": false; }; "filters": { "alias": "filters"; "required": false; }; "orderBy": { "alias": "orderBy"; "required": false; }; "sort": { "alias": "sort"; "required": false; }; }, {}, never, never, true, never>;
}

import { ElementRef, OnInit } from '@angular/core';
import { FormControl } from '@angular/forms';
import { LuApiHybridService } from '../../service/index';
import { ALuApiOptionPagedSearcher, ALuApiOptionSearcher } from './api-searcher.model';
import * as i0 from "@angular/core";
export declare class LuApiSearcherComponent<T extends import('../../api.model').ILuApiItem = import('../../api.model').ILuApiItem> extends ALuApiOptionSearcher<T, LuApiHybridService<T>> implements OnInit {
    searchInput: ElementRef<HTMLElement>;
    set standard(standard: 'v3' | 'v4');
    set api(api: string);
    set fields(fields: string);
    set filters(filters: string[]);
    set orderBy(orderBy: string);
    set sort(sort: string);
    debounceTime: number;
    clueControl: FormControl;
    constructor(hostService: LuApiHybridService<T>, selfService: LuApiHybridService<T>);
    ngOnInit(): void;
    onOpen(): void;
    resetClue(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<LuApiSearcherComponent<any>, [{ optional: true; skipSelf: true; }, { self: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<LuApiSearcherComponent<any>, "lu-api-searcher", never, { "standard": { "alias": "standard"; "required": false; }; "api": { "alias": "api"; "required": false; }; "fields": { "alias": "fields"; "required": false; }; "filters": { "alias": "filters"; "required": false; }; "orderBy": { "alias": "orderBy"; "required": false; }; "sort": { "alias": "sort"; "required": false; }; "debounceTime": { "alias": "debounceTime"; "required": false; }; }, {}, never, never, true, never>;
}
export declare class LuApiPagedSearcherComponent<T extends import('../../api.model').ILuApiItem = import('../../api.model').ILuApiItem> extends ALuApiOptionPagedSearcher<T, LuApiHybridService<T>> implements OnInit {
    searchInput: ElementRef<HTMLElement>;
    set standard(standard: 'v3' | 'v4');
    set api(api: string);
    set fields(fields: string);
    set filters(filters: string[]);
    set orderBy(orderBy: string);
    set sort(sort: string);
    debounceTime: number;
    clueControl: FormControl;
    constructor(hostService: LuApiHybridService<T>, selfService: LuApiHybridService<T>);
    ngOnInit(): void;
    onOpen(): void;
    resetClue(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<LuApiPagedSearcherComponent<any>, [{ optional: true; skipSelf: true; }, { self: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<LuApiPagedSearcherComponent<any>, "lu-api-paged-searcher", never, { "standard": { "alias": "standard"; "required": false; }; "api": { "alias": "api"; "required": false; }; "fields": { "alias": "fields"; "required": false; }; "filters": { "alias": "filters"; "required": false; }; "orderBy": { "alias": "orderBy"; "required": false; }; "sort": { "alias": "sort"; "required": false; }; "debounceTime": { "alias": "debounceTime"; "required": false; }; }, {}, never, never, true, never>;
}

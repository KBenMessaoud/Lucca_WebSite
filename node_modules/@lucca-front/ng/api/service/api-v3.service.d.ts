import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';
import { ILuApiItem } from '../api.model';
import { ALuApiService } from './api-service.model';
import * as i0 from "@angular/core";
export declare class LuApiV3Service<T extends ILuApiItem = ILuApiItem> extends ALuApiService<T> {
    protected _http: HttpClient;
    protected _api: string;
    set api(api: string);
    protected _fields: string;
    set fields(fields: string);
    protected _filters: string[];
    set filters(filters: string[]);
    protected _orderBy: string;
    set orderBy(orderBy: string);
    get url(): string;
    constructor(_http: HttpClient);
    getAll(filters?: string[]): Observable<T[]>;
    getPaged(page: number, filters?: string[]): Observable<T[]>;
    searchAll(clue: string, filters?: string[]): Observable<T[]>;
    searchPaged(clue: string, page: number, filters?: string[]): Observable<T[]>;
    protected _get(url: string): Observable<T[]>;
    protected _clueFilter(clue: string): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<LuApiV3Service<any>, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<LuApiV3Service<any>>;
}

import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';
import { ILuApiItem } from '../api.model';
import { ALuApiService } from './api-service.model';
import * as i0 from "@angular/core";
export declare class LuApiHybridService<T extends ILuApiItem = ILuApiItem> extends ALuApiService<T> {
    private _http;
    private _v3Service;
    private _v4Service;
    private _standard;
    set standard(std: 'v3' | 'v4');
    set api(api: string);
    set filters(filters: string[]);
    set fields(fields: string);
    set orderBy(orderBy: string);
    set sort(sort: string);
    private get _service();
    constructor(_http: HttpClient);
    getAll(filters?: string[]): Observable<T[]>;
    getPaged(page: number, filters?: string[]): Observable<T[]>;
    searchAll(clue: string, filters?: string[]): Observable<T[]>;
    searchPaged(clue: string, page: number, filters?: string[]): Observable<T[]>;
    static ɵfac: i0.ɵɵFactoryDeclaration<LuApiHybridService<any>, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<LuApiHybridService<any>>;
}

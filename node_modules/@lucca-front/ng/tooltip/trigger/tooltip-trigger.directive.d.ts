import { Overlay, OverlayRef } from '@angular/cdk/overlay';
import { ComponentPortal } from '@angular/cdk/portal';
import { AfterViewInit, ElementRef, EventEmitter, OnDestroy, ViewContainerRef } from '@angular/core';
import { SafeHtml } from '@angular/platform-browser';
import { ALuPopoverTrigger, LuPopoverPosition, LuPopoverScrollStrategy, LuPopoverTarget } from '@lucca-front/ng/popover';
import { LuTooltipPanelComponent } from '../panel/tooltip-panel.component';
import * as i0 from "@angular/core";
export declare class LuTooltipTriggerDirective extends ALuPopoverTrigger<LuTooltipPanelComponent, LuPopoverTarget> implements AfterViewInit, OnDestroy {
    protected _overlay: Overlay;
    protected _elementRef: ElementRef<HTMLElement>;
    protected _viewContainerRef: ViewContainerRef;
    set tooltipContent(c: string | SafeHtml);
    /** when trigger = hover, delay before the popover panel appears, default 300ms */
    set inputEnterDelay(d: number);
    /** when trigger = hover, delay before the popover panel disappears, default 100ms */
    set inputLeaveDelay(d: number);
    /** disable popover apparition */
    set inputDisabled(d: boolean);
    set inputPosition(pos: LuPopoverPosition);
    set inputWhenEllipsis(we: boolean);
    /** Event emitted when the associated popover is opened. */
    onOpen: EventEmitter<void>;
    /** Event emitted when the associated popover is closed. */
    onClose: EventEmitter<void>;
    onMouseEnter(): void;
    onMouseLeave(): void;
    onFocus(): void;
    onBlur(): void;
    private _handleTabindex;
    /** accessibility attribute - dont override */
    get _attrId(): string;
    /** accessibility attribute - dont override */
    get _attrAriaDescribedBy(): string;
    protected _portal: ComponentPortal<LuTooltipPanelComponent>;
    protected _tooltipContent: string | SafeHtml;
    constructor(_overlay: Overlay, _elementRef: ElementRef<HTMLElement>, _viewContainerRef: ViewContainerRef);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    protected _emitOpen(): void;
    protected _emitClose(): void;
    protected _createOverlay(): OverlayRef;
    protected _attachPortalToOverlay(): void;
    protected _getPanelScrollStrategy(): LuPopoverScrollStrategy;
    private _shouldHandleTabindex;
    private _setTabindex;
    static ɵfac: i0.ɵɵFactoryDeclaration<LuTooltipTriggerDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<LuTooltipTriggerDirective, "[luTooltip]", never, { "tooltipContent": { "alias": "luTooltip"; "required": false; }; "inputEnterDelay": { "alias": "luTooltipEnterDelay"; "required": false; }; "inputLeaveDelay": { "alias": "luTooltipLeaveDelay"; "required": false; }; "inputDisabled": { "alias": "luTooltipDisabled"; "required": false; }; "inputPosition": { "alias": "luTooltipPosition"; "required": false; }; "inputWhenEllipsis": { "alias": "luTooltipWhenEllipsis"; "required": false; }; }, { "onOpen": "luTooltipOnOpen"; "onClose": "luTooltipOnClose"; }, never, never, true, never>;
}

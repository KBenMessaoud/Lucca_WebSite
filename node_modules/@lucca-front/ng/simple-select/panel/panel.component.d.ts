import { AfterViewInit, ElementRef, QueryList } from '@angular/core';
import { LuSelectPanelRef, ɵLuOptionComponent } from '@lucca-front/ng/core-select';
import { ILuSimpleSelectPanelData } from '../select.model';
import * as i0 from "@angular/core";
export declare class LuSelectPanelComponent<T> implements AfterViewInit {
    protected panelData: ILuSimpleSelectPanelData<T>;
    panelRef: LuSelectPanelRef<T, T>;
    selectId: number;
    intl: import("../select.translate").ILuSimpleSelectLabel;
    options$: import("rxjs").Observable<T[]>;
    loading$: import("rxjs").Observable<boolean>;
    optionComparer: (option1: T, option2: T) => boolean;
    initialValue: T | undefined;
    optionTpl: import("@angular/core").Type<unknown> | import("@angular/core").TemplateRef<import("@lucca-front/ng/core-select").LuOptionContext<T>>;
    searchable: boolean;
    set searchInput(input: ElementRef<HTMLInputElement> | undefined);
    optionsQL: QueryList<ɵLuOptionComponent<T>>;
    private keyManager;
    search: string | null;
    get selected(): T | undefined;
    onScroll(evt: Event): void;
    ngAfterViewInit(): void;
    onKeyDown($event: KeyboardEvent): void;
    updateClue(clue: string | null): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<LuSelectPanelComponent<any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<LuSelectPanelComponent<any>, "lu-select-panel", never, {}, {}, never, never, true, never>;
}

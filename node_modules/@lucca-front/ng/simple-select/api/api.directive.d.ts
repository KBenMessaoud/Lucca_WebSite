import { OnDestroy, OnInit } from '@angular/core';
import { ALuSelectInputComponent } from '@lucca-front/ng/core-select';
import { BehaviorSubject, Observable, Subject } from 'rxjs';
import * as i0 from "@angular/core";
export declare const MAGIC_PAGE_SIZE = 20;
export declare const MAGIC_DEBOUNCE_DURATION = 250;
export declare abstract class ALuSimpleSelectApiDirective<TOption, TParams = Record<string, string | number | boolean>> implements OnDestroy, OnInit {
    protected destroy$: Subject<void>;
    protected pageSize: number;
    protected debounceDuration: number;
    protected select: ALuSelectInputComponent<TOption, unknown>;
    protected page$: Observable<number>;
    protected clue$: Observable<string>;
    /**
     * Create an object that will be used as params for the api call
     */
    protected abstract params$: Observable<TParams>;
    /**
     * Compare two options to know if they are the same. For example, compare by id or by JSON
     */
    protected abstract optionComparer: (a: TOption, b: TOption) => boolean;
    /**
     * Return the options for the given params and page
     */
    protected abstract getOptions(params: TParams, page: number): Observable<TOption[]>;
    protected loading$: BehaviorSubject<boolean>;
    ngOnInit(): void;
    protected buildOptions(): Observable<TOption[]>;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ALuSimpleSelectApiDirective<any, any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ALuSimpleSelectApiDirective<any, any>, never, never, {}, {}, never, never, false, never>;
}

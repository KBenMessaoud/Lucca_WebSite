import { HttpClient } from '@angular/common/http';
import { ILuApiItem } from '@lucca-front/ng/api';
import { BehaviorSubject, Observable, ReplaySubject } from 'rxjs';
import { ALuSimpleSelectApiDirective } from './api.directive';
import * as i0 from "@angular/core";
export declare class LuSimpleSelectApiV4Directive<T extends ILuApiItem> extends ALuSimpleSelectApiDirective<T> {
    set apiV4(value: string);
    set sort(value: string | null);
    set filters(value: Record<string, string | number | boolean>);
    protected url$: ReplaySubject<string>;
    protected sort$: BehaviorSubject<string>;
    protected filters$: BehaviorSubject<Record<string, string | number | boolean>>;
    protected httpClient: HttpClient;
    protected params$: Observable<{
        search?: string;
        sort?: string;
    }>;
    protected getOptions(params: Record<string, string | number | boolean>, page: number): Observable<T[]>;
    protected optionComparer: (a: T, b: T) => boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<LuSimpleSelectApiV4Directive<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<LuSimpleSelectApiV4Directive<any>, "lu-simple-select[apiV4],lu-multi-select[apiV4]", never, { "apiV4": { "alias": "apiV4"; "required": false; }; "sort": { "alias": "sort"; "required": false; }; "filters": { "alias": "filters"; "required": false; }; }, {}, never, never, true, never>;
}

import { ComponentType, Overlay } from '@angular/cdk/overlay';
import { Injector } from '@angular/core';
import { ILuPopupConfig } from './popup-config.model';
import { ALuPopupRef, ILuPopupRefFactory } from './popup-ref.model';
import * as i0 from "@angular/core";
export declare class LuPopupRef<T = unknown, D = unknown, R = unknown> extends ALuPopupRef<T, D, R> {
    protected _overlay: Overlay;
    protected _injector: Injector;
    protected _component: ComponentType<T>;
    protected _config: ILuPopupConfig;
    constructor(_overlay: Overlay, _injector: Injector, _component: ComponentType<T>, _config: ILuPopupConfig);
}
export declare class LuPopupRefFactory implements ILuPopupRefFactory {
    protected _overlay: Overlay;
    protected _injector: Injector;
    constructor(_overlay: Overlay, _injector: Injector);
    forge<T, D, R>(component: ComponentType<T>, config: ILuPopupConfig): LuPopupRef<T, D, R>;
    static ɵfac: i0.ɵɵFactoryDeclaration<LuPopupRefFactory, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<LuPopupRefFactory>;
}

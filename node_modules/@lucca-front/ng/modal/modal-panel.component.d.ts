import { DoCheck, ElementRef, Injector, OnDestroy, Renderer2, Type, ViewContainerRef } from '@angular/core';
import { Observable, ReplaySubject, Subject } from 'rxjs';
import { LuModalClasses } from './modal-config.model';
import { ALuModalRef } from './modal-ref.model';
import { ILuModalContent } from './modal.model';
import * as i0 from "@angular/core";
export declare abstract class ALuModalPanelComponent<T extends ILuModalContent> implements OnDestroy, DoCheck {
    protected _ref: ALuModalRef<T>;
    protected _containerRef: ViewContainerRef;
    protected _componentInstance: ILuModalContent;
    protected doCheck$: ReplaySubject<void>;
    intl: import("./modal.translate").ILuModalLabel;
    protected title$: Observable<string>;
    protected submitLabel$: Observable<string>;
    protected cancelLabel$: Observable<string>;
    protected submitCounter$: Observable<number>;
    protected submitDisabled$: Observable<boolean>;
    protected hasSubmitCounter$: Observable<boolean>;
    protected closeLabel: string;
    get isSubmitHidden(): boolean;
    get submitPalette(): string;
    submitClass$: Subject<unknown>;
    error$: Subject<unknown>;
    readonly modalId: number;
    private _subs;
    modalClasses: LuModalClasses;
    constructor(_ref: ALuModalRef<T>, _elementRef: ElementRef<HTMLElement>, _renderer: Renderer2);
    ngDoCheck(): void;
    attachInnerComponent(componentType: Type<T>, injector: Injector): import("@angular/core").ComponentRef<T>;
    ngOnDestroy(): void;
    dismiss(): void;
    submit(): void;
    private listenComponentValue;
    static ɵfac: i0.ɵɵFactoryDeclaration<ALuModalPanelComponent<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ALuModalPanelComponent<any>, never, never, {}, {}, never, never, false, never>;
}
export declare class LuModalPanelComponent<T extends ILuModalContent = ILuModalContent> extends ALuModalPanelComponent<T> {
    class: boolean;
    constructor(_ref: ALuModalRef<T>, _elementRef: ElementRef<HTMLElement>, _renderer: Renderer2);
    static ɵfac: i0.ɵɵFactoryDeclaration<LuModalPanelComponent<any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<LuModalPanelComponent<any>, "lu-modal-panel", never, {}, {}, never, never, true, never>;
}
export declare class LuModalPanelComponentDefaultCD<T extends ILuModalContent = ILuModalContent> extends ALuModalPanelComponent<T> {
    class: boolean;
    constructor(_ref: ALuModalRef<T>, _elementRef: ElementRef<HTMLElement>, _renderer: Renderer2);
    static ɵfac: i0.ɵɵFactoryDeclaration<LuModalPanelComponentDefaultCD<any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<LuModalPanelComponentDefaultCD<any>, "lu-modal-panel-default", never, {}, {}, never, never, true, never>;
}

import { ComponentType, Overlay } from '@angular/cdk/overlay';
import { ApplicationRef, ComponentRef, Injector } from '@angular/core';
import { ILuPopupRefFactory } from '@lucca-front/ng/popup';
import { LuModalConfig } from './modal-config.model';
import { ALuModalPanelComponent } from './modal-panel.component';
import { ALuModalRef, ILuModalRef } from './modal-ref.model';
import { ILuModalContent } from './modal.model';
import * as i0 from "@angular/core";
declare class LuModalRef<T extends ILuModalContent = ILuModalContent, D = unknown, R = unknown, C extends LuModalConfig = LuModalConfig> extends ALuModalRef<T, D, R, C> implements ILuModalRef<D, R> {
    protected _overlay: Overlay;
    protected _injector: Injector;
    protected _component: ComponentType<T>;
    protected _config: C;
    protected _applicationRef: ApplicationRef;
    protected _containerRef: ComponentRef<ALuModalPanelComponent<T>>;
    constructor(_overlay: Overlay, _injector: Injector, _component: ComponentType<T>, _config: C, _applicationRef: ApplicationRef);
    protected _openPopup(data?: D): void;
    protected _closePopup(): void;
    protected _getOverlayPanelClasses(): string[];
}
export declare class LuModalRefFactory implements ILuPopupRefFactory<ILuModalContent, LuModalConfig> {
    protected _overlay: Overlay;
    protected _injector: Injector;
    protected _applicationRef: ApplicationRef;
    constructor(_overlay: Overlay, _injector: Injector);
    forge<T extends ILuModalContent, C extends LuModalConfig, D, R>(component: ComponentType<T>, config: C): LuModalRef<T, D, R, LuModalConfig>;
    static ɵfac: i0.ɵɵFactoryDeclaration<LuModalRefFactory, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<LuModalRefFactory>;
}
export {};

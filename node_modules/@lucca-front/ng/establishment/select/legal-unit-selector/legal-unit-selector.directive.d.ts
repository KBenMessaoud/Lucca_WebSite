import { OnDestroy } from '@angular/core';
import { ILuOptionSelector } from '@lucca-front/ng/option';
import { Subject } from 'rxjs';
import { ILuEstablishment, ILuLegalUnit } from '../../establishment.model';
import { LuEstablishmentService } from '../../service/index';
import * as i0 from "@angular/core";
export declare class LuLegalUnitSelectorDirective implements ILuOptionSelector<ILuEstablishment>, OnDestroy {
    multiple: boolean;
    onSelectValue: Subject<ILuEstablishment[]>;
    private _values;
    private _service;
    private _subs;
    legalUnit: ILuLegalUnit;
    set filters(filters: string[]);
    set appInstanceId(appId: number);
    set operations(ops: number[]);
    constructor(hostService: LuEstablishmentService, selfService: LuEstablishmentService);
    onClick(): void;
    setValue(values: ILuEstablishment[]): void;
    ngOnDestroy(): void;
    private shouldAdd;
    static ɵfac: i0.ɵɵFactoryDeclaration<LuLegalUnitSelectorDirective, [{ optional: true; skipSelf: true; }, { self: true; }]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<LuLegalUnitSelectorDirective, "[luLegalUnitSelector]", never, { "legalUnit": { "alias": "luLegalUnitSelector"; "required": false; }; "filters": { "alias": "luLegalUnitSelectorFilters"; "required": false; }; "appInstanceId": { "alias": "luLegalUnitSelectorAppInstanceId"; "required": false; }; "operations": { "alias": "luLegalUnitSelectorOperations"; "required": false; }; }, {}, never, never, true, never>;
}

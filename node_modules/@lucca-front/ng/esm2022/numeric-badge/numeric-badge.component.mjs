import { ChangeDetectionStrategy, Component, inject, Input, numberAttribute } from '@angular/core';
import { NgClazz } from '@lucca-front/ng/core';
import * as i0 from "@angular/core";
import * as i1 from "@lucca-front/ng/core";
class NumericBadgeComponent {
    constructor() {
        this.#ngClass = inject(NgClazz);
        this.palette = 'none';
    }
    #ngClass;
    ngOnChanges(changes) {
        if (changes['palette']?.currentValue || changes['size']?.currentValue) {
            this.#ngClass.ngClass = ['numericBadge', `palette-${this.palette}`, `mod-${this.size}`];
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: NumericBadgeComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.3", type: NumericBadgeComponent, isStandalone: true, selector: "lu-numeric-badge", inputs: { value: ["value", "value", numberAttribute], size: "size", palette: "palette" }, usesOnChanges: true, hostDirectives: [{ directive: i1.NgClazz }], ngImport: i0, template: "{{value}}\n", styles: [".numericBadge{--components-numericBadge-background: var(--palettes-200, var(--palettes-grey-200));--components-numericBadge-color: var(--palettes-800, var(--palettes-grey-700));--components-numericBadge-size: 1.5rem;--components-numericBadge-fontSize: var(--sizes-S-fontSize);--components-numericBadge-lineHeight: var(--sizes-S-lineHeight);--components-numericBadge-borderRadius: var(--commons-borderRadius-L);display:inline-flex;align-items:center;justify-content:center;height:var(--components-numericBadge-size);min-width:var(--components-numericBadge-size);padding:var(--spacings-XXS);font-size:var(--components-numericBadge-fontSize);line-height:var(--components-numericBadge-lineHeight);font-weight:600;background-color:var(--components-numericBadge-background);color:var(--components-numericBadge-color);border-radius:var(--components-numericBadge-borderRadius);transition-property:background-color,color;transition-duration:var(--commons-animations-durations-fast);transition-timing-function:ease}.numericBadge.mod-S{--components-numericBadge-size: 1.25rem;--components-numericBadge-borderRadius: 6px;--components-numericBadge-fontSize: var(--sizes-XS-fontSize);--components-numericBadge-lineHeight: var(--sizes-XS-lineHeight)}.numericBadge.mod-XS{--components-numericBadge-size: 1rem;--components-numericBadge-borderRadius: var(--commons-borderRadius-M);--components-numericBadge-fontSize: var(--sizes-XS-fontSize);--components-numericBadge-lineHeight: var(--sizes-XS-lineHeight)}:host{display:inline-flex}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { NumericBadgeComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: NumericBadgeComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lu-numeric-badge', standalone: true, changeDetection: ChangeDetectionStrategy.OnPush, hostDirectives: [NgClazz], template: "{{value}}\n", styles: [".numericBadge{--components-numericBadge-background: var(--palettes-200, var(--palettes-grey-200));--components-numericBadge-color: var(--palettes-800, var(--palettes-grey-700));--components-numericBadge-size: 1.5rem;--components-numericBadge-fontSize: var(--sizes-S-fontSize);--components-numericBadge-lineHeight: var(--sizes-S-lineHeight);--components-numericBadge-borderRadius: var(--commons-borderRadius-L);display:inline-flex;align-items:center;justify-content:center;height:var(--components-numericBadge-size);min-width:var(--components-numericBadge-size);padding:var(--spacings-XXS);font-size:var(--components-numericBadge-fontSize);line-height:var(--components-numericBadge-lineHeight);font-weight:600;background-color:var(--components-numericBadge-background);color:var(--components-numericBadge-color);border-radius:var(--components-numericBadge-borderRadius);transition-property:background-color,color;transition-duration:var(--commons-animations-durations-fast);transition-timing-function:ease}.numericBadge.mod-S{--components-numericBadge-size: 1.25rem;--components-numericBadge-borderRadius: 6px;--components-numericBadge-fontSize: var(--sizes-XS-fontSize);--components-numericBadge-lineHeight: var(--sizes-XS-lineHeight)}.numericBadge.mod-XS{--components-numericBadge-size: 1rem;--components-numericBadge-borderRadius: var(--commons-borderRadius-M);--components-numericBadge-fontSize: var(--sizes-XS-fontSize);--components-numericBadge-lineHeight: var(--sizes-XS-lineHeight)}:host{display:inline-flex}\n"] }]
        }], propDecorators: { 
        /**
         * The value to display, number only.
         */
        value: [{
                type: Input,
                args: [{ required: true, transform: numberAttribute }]
            }], 
        /**
         * The size of the badge
         */
        size: [{
                type: Input
            }], 
        /**
         * The palette to use for this badge. Defaults to 'none' (inherits parent palette)
         */
        palette: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnVtZXJpYy1iYWRnZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wYWNrYWdlcy9uZy9udW1lcmljLWJhZGdlL251bWVyaWMtYmFkZ2UuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vcGFja2FnZXMvbmcvbnVtZXJpYy1iYWRnZS9udW1lcmljLWJhZGdlLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxlQUFlLEVBQTRCLE1BQU0sZUFBZSxDQUFDO0FBQzdILE9BQU8sRUFBRSxPQUFPLEVBQVcsTUFBTSxzQkFBc0IsQ0FBQzs7O0FBRXhELE1BUWEscUJBQXFCO0lBUmxDO1FBU0MsYUFBUSxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztRQWtCM0IsWUFBTyxHQUFZLE1BQU0sQ0FBQztLQU8xQjtJQXpCQSxRQUFRLENBQW1CO0lBb0IzQixXQUFXLENBQUMsT0FBc0I7UUFDakMsSUFBSSxPQUFPLENBQUMsU0FBUyxDQUFDLEVBQUUsWUFBWSxJQUFJLE9BQU8sQ0FBQyxNQUFNLENBQUMsRUFBRSxZQUFZLEVBQUU7WUFDdEUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLEdBQUcsQ0FBQyxjQUFjLEVBQUUsV0FBVyxJQUFJLENBQUMsT0FBTyxFQUFFLEVBQUUsT0FBTyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQztTQUN4RjtJQUNGLENBQUM7OEdBekJXLHFCQUFxQjtrR0FBckIscUJBQXFCLHdGQUdHLGVBQWUsaUlDZHBELGFBQ0E7O1NEVWEscUJBQXFCOzJGQUFyQixxQkFBcUI7a0JBUmpDLFNBQVM7K0JBQ0Msa0JBQWtCLGNBQ2hCLElBQUksbUJBR0MsdUJBQXVCLENBQUMsTUFBTSxrQkFDL0IsQ0FBQyxPQUFPLENBQUM7O1FBTXpCOztXQUVHO1FBQ0gsS0FBSztzQkFKSixLQUFLO3VCQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsZUFBZSxFQUFFOztRQU9yRDs7V0FFRztRQUNILElBQUk7c0JBSkgsS0FBSzs7UUFPTjs7V0FFRztRQUNILE9BQU87c0JBSk4sS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIGluamVjdCwgSW5wdXQsIG51bWJlckF0dHJpYnV0ZSwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ0NsYXp6LCBQYWxldHRlIH0gZnJvbSAnQGx1Y2NhLWZyb250L25nL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcblx0c2VsZWN0b3I6ICdsdS1udW1lcmljLWJhZGdlJyxcblx0c3RhbmRhbG9uZTogdHJ1ZSxcblx0dGVtcGxhdGVVcmw6ICcuL251bWVyaWMtYmFkZ2UuY29tcG9uZW50Lmh0bWwnLFxuXHRzdHlsZVVybHM6IFsnLi9udW1lcmljLWJhZGdlLmNvbXBvbmVudC5zY3NzJ10sXG5cdGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuXHRob3N0RGlyZWN0aXZlczogW05nQ2xhenpdLFxufSlcbmV4cG9ydCBjbGFzcyBOdW1lcmljQmFkZ2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuXHQjbmdDbGFzcyA9IGluamVjdChOZ0NsYXp6KTtcblxuXHRASW5wdXQoeyByZXF1aXJlZDogdHJ1ZSwgdHJhbnNmb3JtOiBudW1iZXJBdHRyaWJ1dGUgfSlcblx0LyoqXG5cdCAqIFRoZSB2YWx1ZSB0byBkaXNwbGF5LCBudW1iZXIgb25seS5cblx0ICovXG5cdHZhbHVlITogbnVtYmVyO1xuXG5cdEBJbnB1dCgpXG5cdC8qKlxuXHQgKiBUaGUgc2l6ZSBvZiB0aGUgYmFkZ2Vcblx0ICovXG5cdHNpemU6ICdYUycgfCAnUycgfCAnTSc7XG5cblx0QElucHV0KClcblx0LyoqXG5cdCAqIFRoZSBwYWxldHRlIHRvIHVzZSBmb3IgdGhpcyBiYWRnZS4gRGVmYXVsdHMgdG8gJ25vbmUnIChpbmhlcml0cyBwYXJlbnQgcGFsZXR0ZSlcblx0ICovXG5cdHBhbGV0dGU6IFBhbGV0dGUgPSAnbm9uZSc7XG5cblx0bmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xuXHRcdGlmIChjaGFuZ2VzWydwYWxldHRlJ10/LmN1cnJlbnRWYWx1ZSB8fCBjaGFuZ2VzWydzaXplJ10/LmN1cnJlbnRWYWx1ZSkge1xuXHRcdFx0dGhpcy4jbmdDbGFzcy5uZ0NsYXNzID0gWydudW1lcmljQmFkZ2UnLCBgcGFsZXR0ZS0ke3RoaXMucGFsZXR0ZX1gLCBgbW9kLSR7dGhpcy5zaXplfWBdO1xuXHRcdH1cblx0fVxufVxuIiwie3t2YWx1ZX19XG4iXX0=
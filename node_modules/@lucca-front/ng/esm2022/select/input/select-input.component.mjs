import { ChangeDetectionStrategy, Component, ContentChild, Directive, ElementRef, EventEmitter, forwardRef, HostBinding, HostListener, Input, Output, ViewChild, ViewContainerRef, } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { ALuClearer, ALuInputDisplayer } from '@lucca-front/ng/input';
import { ALuPickerPanel } from '@lucca-front/ng/picker';
import { ALuSelectInput } from './select-input.model';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/overlay";
class ALuSelectInputComponent extends ALuSelectInput {
    set _vcDisplayContainer(vcr) {
        this.displayContainer = vcr;
    }
    set overlapInput(o) {
        this.target.overlap = o;
    }
    set inputPlaceholder(p) {
        this._placeholder = p;
    }
    set inputMultiple(m) {
        if (m === '') {
            // allows to have multiple = true when writing
            // <lu-select multiple>
            this.multiple = true;
        }
        else {
            this.multiple = !!m;
        }
    }
    constructor(_changeDetectorRef, _overlay, _elementRef, _viewContainerRef, _renderer) {
        super(_changeDetectorRef, _overlay, _elementRef, _viewContainerRef, _renderer);
        this._changeDetectorRef = _changeDetectorRef;
        this._overlay = _overlay;
        this._elementRef = _elementRef;
        this._viewContainerRef = _viewContainerRef;
        this._renderer = _renderer;
        this.tabindex = 0;
        /** Event emitted when the associated popover is opened. */
        this.onOpen = new EventEmitter();
        /** Event emitted when the associated popover is closed. */
        this.onClose = new EventEmitter();
    }
    get isDisabled() {
        return this.disabled;
    }
    set inputDisabled(d) {
        this._disabled = d;
    }
    get isFocused() {
        return this._popoverOpen && !this.target.overlap;
    }
    get modMultiple() {
        return this._multiple;
    }
    get isClearable() {
        return !!this._clearer;
    }
    onClick() {
        super.onClick();
    }
    onMouseEnter() {
        super.onMouseEnter();
    }
    onMouseLeave() {
        super.onMouseLeave();
    }
    onFocus() {
        super.onFocus();
    }
    onBlur() {
        super.onBlur();
    }
    onKeydown($event) {
        if (!this._popoverOpen) {
            this.openPopover();
            $event.stopPropagation();
            $event.preventDefault();
        }
    }
    ngAfterViewInit() {
        this._isContentInitialized = true;
        // init picker and displayer and clearer
        const picker = this.ccPicker || this.vcPicker;
        if (picker) {
            this._picker = picker;
        }
        const displayer = this.ccDisplayer || this.vcDisplayer;
        if (displayer) {
            this._displayer = displayer;
        }
        const clearer = this.ccClearer || this.vcClearer;
        if (clearer) {
            this._clearer = clearer;
        }
        this.render();
        this._picker.setValue(this.value);
        // strange bug where the view renderred in the displayer was only injected after a hover
        // no matter how many cdr.markforchack i added
        // but with a timeout it works
        // shrug emoji
        setTimeout(() => {
            this._changeDetectorRef.markForCheck();
        }, 1);
    }
    ngOnDestroy() {
        if (this._popoverOpen) {
            this.closePopover();
        }
        this.destroyPopover();
        this.onDestroy();
    }
    _emitOpen() {
        this.onOpen.emit();
    }
    _emitClose() {
        this.onClose.emit();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: ALuSelectInputComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.Overlay }, { token: i0.ElementRef }, { token: i0.ViewContainerRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.1.3", type: ALuSelectInputComponent, inputs: { overlapInput: ["pickerOverlap", "overlapInput"], inputPlaceholder: ["placeholder", "inputPlaceholder"], inputMultiple: ["multiple", "inputMultiple"], inputDisabled: ["disabled", "inputDisabled"] }, outputs: { onOpen: "onOpen", onClose: "onClose" }, host: { listeners: { "click": "onClick()", "mouseenter": "onMouseEnter()", "mouseleave": "onMouseLeave()", "focus": "onFocus()", "blur": "onBlur()", "keydown.space": "onKeydown($event)", "keydown.enter": "onKeydown($event)" }, properties: { "tabindex": "this.tabindex", "class.is-disabled": "this.isDisabled", "class.is-focused": "this.isFocused", "class.mod-multiple": "this.modMultiple", "class.is-clearable": "this.isClearable" } }, queries: [{ propertyName: "ccPicker", first: true, predicate: ALuPickerPanel, descendants: true, static: true }, { propertyName: "ccDisplayer", first: true, predicate: ALuInputDisplayer, descendants: true, static: true }, { propertyName: "ccClearer", first: true, predicate: ALuClearer, descendants: true, static: true }], viewQueries: [{ propertyName: "_vcDisplayContainer", first: true, predicate: ["display"], descendants: true, read: ViewContainerRef, static: true }, { propertyName: "vcPicker", first: true, predicate: ALuPickerPanel, descendants: true, static: true }, { propertyName: "vcDisplayer", first: true, predicate: ALuInputDisplayer, descendants: true, static: true }, { propertyName: "vcClearer", first: true, predicate: ALuClearer, descendants: true, static: true }], usesInheritance: true, ngImport: i0 }); }
}
export { ALuSelectInputComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: ALuSelectInputComponent, decorators: [{
            type: Directive
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.Overlay }, { type: i0.ElementRef }, { type: i0.ViewContainerRef }, { type: i0.Renderer2 }]; }, propDecorators: { _vcDisplayContainer: [{
                type: ViewChild,
                args: ['display', { read: ViewContainerRef, static: true }]
            }], tabindex: [{
                type: HostBinding,
                args: ['tabindex']
            }], overlapInput: [{
                type: Input,
                args: ['pickerOverlap']
            }], inputPlaceholder: [{
                type: Input,
                args: ['placeholder']
            }], inputMultiple: [{
                type: Input,
                args: ['multiple']
            }], onOpen: [{
                type: Output
            }], onClose: [{
                type: Output
            }], isDisabled: [{
                type: HostBinding,
                args: ['class.is-disabled']
            }], inputDisabled: [{
                type: Input,
                args: ['disabled']
            }], isFocused: [{
                type: HostBinding,
                args: ['class.is-focused']
            }], modMultiple: [{
                type: HostBinding,
                args: ['class.mod-multiple']
            }], isClearable: [{
                type: HostBinding,
                args: ['class.is-clearable']
            }], ccPicker: [{
                type: ContentChild,
                args: [ALuPickerPanel, { static: true }]
            }], vcPicker: [{
                type: ViewChild,
                args: [ALuPickerPanel, { static: true }]
            }], ccDisplayer: [{
                type: ContentChild,
                args: [ALuInputDisplayer, { static: true }]
            }], vcDisplayer: [{
                type: ViewChild,
                args: [ALuInputDisplayer, { static: true }]
            }], ccClearer: [{
                type: ContentChild,
                args: [ALuClearer, { static: true }]
            }], vcClearer: [{
                type: ViewChild,
                args: [ALuClearer, { static: true }]
            }], onClick: [{
                type: HostListener,
                args: ['click']
            }], onMouseEnter: [{
                type: HostListener,
                args: ['mouseenter']
            }], onMouseLeave: [{
                type: HostListener,
                args: ['mouseleave']
            }], onFocus: [{
                type: HostListener,
                args: ['focus']
            }], onBlur: [{
                type: HostListener,
                args: ['blur']
            }], onKeydown: [{
                type: HostListener,
                args: ['keydown.space', ['$event']]
            }, {
                type: HostListener,
                args: ['keydown.enter', ['$event']]
            }] } });
/**
 * select input
 */
class LuSelectInputComponent extends ALuSelectInputComponent {
    get modMultipleView() {
        return this.useMultipleViews();
    }
    constructor(_changeDetectorRef, _overlay, _elementRef, _viewContainerRef, _renderer) {
        super(_changeDetectorRef, _overlay, _elementRef, _viewContainerRef, _renderer);
        this._changeDetectorRef = _changeDetectorRef;
        this._overlay = _overlay;
        this._elementRef = _elementRef;
        this._viewContainerRef = _viewContainerRef;
        this._renderer = _renderer;
    }
    displayClearer() {
        if (this.clearerEltRef) {
            this._renderer.appendChild(this.suffixEltRef.nativeElement, this.clearerEltRef.nativeElement);
        }
    }
    ngAfterViewInit() {
        super.ngAfterViewInit();
        this.displayClearer(); // dont keep
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuSelectInputComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.Overlay }, { token: i0.ElementRef }, { token: i0.ViewContainerRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.3", type: LuSelectInputComponent, isStandalone: true, selector: "lu-select", host: { properties: { "class.mod-multipleView": "this.modMultipleView" } }, providers: [
            {
                provide: NG_VALUE_ACCESSOR,
                useExisting: forwardRef(() => LuSelectInputComponent),
                multi: true,
            },
        ], queries: [{ propertyName: "clearerEltRef", first: true, predicate: ALuClearer, descendants: true, read: ElementRef }], viewQueries: [{ propertyName: "suffixEltRef", first: true, predicate: ["suffix"], descendants: true, read: ElementRef, static: true }], usesInheritance: true, ngImport: i0, template: "<div class=\"lu-select-placeholder\">{{ placeholder }}</div>\n<div class=\"lu-select-value\">\n\t<div class=\"lu-select-display-wrapper\">\n\t\t<ng-container #display></ng-container>\n\t</div>\n</div>\n<div #suffix class=\"lu-select-suffix\"></div>\n", styles: [":root{--components-options-item-padding-vertical: var(--spacings-XS);--components-options-item-padding-horizontal: var(--spacings-XS);--components-options-item-multiple-padding: 2.25rem;--components-options-item-icon-color: var(--palettes-grey-800);--components-options-checkbox-left: .5rem;--components-options-checkbox-size: 1.25rem;--components-options-checkbox-color: var(--palettes-primary-700);--components-options-checkbox-border-radius: 6px;--components-options-checkbox-border-color: var(--palettes-grey-700);--components-options-establishment-multiple-padding: 2rem}:host{--components-select-input-padding-horizontal: var(--spacings-XS);--components-select-input-padding-vertical: var(--spacings-XS);--components-select-framed-color: var(--palettes-grey-500);--components-select-framed-color50: var(--palettes-grey-50);--components-select-framed-see-through: var(--palettes-grey-50);--components-select-framed-text: var(--palettes-grey-800);--components-select-framed-placeholder: #cccccc;--components-select-framed-side-padding: var(--spacings-S);--components-select-framed-top-padding: var(--spacings-L);--components-select-framed-bottom-padding: var(--spacings-S);--components-select-framed-label-top-offset: var(--spacings-XS);cursor:pointer;outline:none;padding:0;gap:0}:host:after{display:inline-block;vertical-align:text-bottom;font-style:normal;font-family:Lucca icons;color:var(--palettes-grey-600);bottom:var(--components-select-input-padding-vertical);font-size:var(--sizes-M-lineHeight);line-height:var(--sizes-M-lineHeight);pointer-events:none;position:absolute;right:var(--components-select-input-padding-horizontal);transition:transform var(--commons-animations-durations-standard) ease}@supports (content: \"*\"/\"\"){:host:after{content:\"\\e97c\"/\"\"}}@supports not (content: \"*\"/\"\"){:host:after{content:\"\\e97c\"}}:host[disabled],:host.is-disabled{cursor:not-allowed;pointer-events:all}.lu-select-display-wrapper{display:block;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.lu-select-value{line-height:var(--sizes-M-lineHeight);min-height:calc(var(--components-select-framed-bottom-padding) + var(--sizes-M-lineHeight));padding:var(--components-select-input-padding-vertical) 3.5rem var(--components-select-input-padding-vertical) var(--components-select-input-padding-horizontal);transition:all var(--commons-animations-durations-standard);display:none}.lu-select-placeholder{color:var(--palettes-grey-400);line-height:var(--sizes-M-lineHeight);min-height:calc(var(--components-select-framed-bottom-padding) + var(--sizes-M-lineHeight));padding:var(--components-select-input-padding-vertical) 3.5rem var(--components-select-input-padding-vertical) var(--components-select-input-padding-horizontal);transition:all var(--commons-animations-durations-standard);overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.lu-select-suffix,.lu-select-clearer{position:absolute;bottom:.75rem;right:2.25rem}::ng-deep .lu-select-value .label{padding:var(--spacings-XXS) var(--spacings-XS);margin-left:0}::ng-deep .lu-select-value .chip{vertical-align:baseline;max-width:100%;margin:0 var(--spacings-XXS) var(--spacings-XXS) 0;text-overflow:ellipsis;overflow:hidden;vertical-align:top;white-space:nowrap}:host-context(.textfield.mod-S){padding:0}:host-context(.textfield.mod-S) .lu-select-value,:host-context(.textfield.mod-S) .lu-select-placeholder{font-size:var(--sizes-S-fontSize);line-height:var(--sizes-XS-lineHeight);min-height:calc(var(--components-select-framed-bottom-padding) + var(--sizes-XS-lineHeight))}:host-context(.textfield.mod-S) .lu-select-clearer{bottom:var(--spacings-XS)}:host-context(.textfield.mod-S):after{line-height:var(--sizes-XS-lineHeight);font-size:var(--sizes-S-lineHeight)}:host-context(.textfield.mod-S) .lu-select-suffix{bottom:.5rem;right:2rem}:host-context(.textfield.mod-S) ::ng-deep .lu-select-value .label{font-size:var(--sizes-S-fontSize);line-height:var(--sizes-S-lineHeight);font-weight:600;margin:0;padding:0;background-color:transparent}:host-context(.textfield.mod-S) ::ng-deep .lu-select-value .chip{height:var(--sizes-XS-lineHeight);line-height:var(--sizes-XS-lineHeight);font-size:var(--sizes-XS-fontSize);padding-left:var(--spacings-XXS);padding-right:var(--spacings-XXS);gap:var(--spacings-XXS)}:host-context(.textfield.mod-S) ::ng-deep .lu-select-value .numericBadge{--components-numericBadge-size: 1.25rem;--components-numericBadge-borderRadius: 6px;--components-numericBadge-fontSize: var(--sizes-XS-fontSize);--components-numericBadge-lineHeight: var(--sizes-XS-lineHeight)}:host-context(.textfield.mod-framed).textfield-input,:host-context(.form.mod-framed).textfield-input{padding:var(--components-select-framed-top-padding) 0 0}:host-context(.textfield.mod-framed).textfield-input:after,:host-context(.form.mod-framed).textfield-input:after{color:var(--palettes-grey-500);bottom:var(--components-select-framed-bottom-padding);right:var(--spacings-XS)}:host-context(.textfield.mod-framed).textfield-input .lu-select-value,:host-context(.form.mod-framed).textfield-input .lu-select-value{padding:0 calc(var(--components-select-framed-side-padding) * 3) var(--components-select-framed-bottom-padding) var(--components-select-framed-side-padding)}:host-context(.textfield.mod-framed).textfield-input .lu-select-placeholder,:host-context(.form.mod-framed).textfield-input .lu-select-placeholder{color:var(--palettes-grey-400);padding:0 calc(var(--components-select-framed-side-padding) * 3) var(--components-select-framed-bottom-padding) var(--components-select-framed-side-padding)}:host-context(.textfield.mod-framed).textfield-input .lu-select-suffix,:host-context(.form.mod-framed).textfield-input .lu-select-suffix{bottom:var(--components-select-framed-bottom-padding);right:1.7rem}:host-context(.textfield.mod-filter) .lu-select-value,:host-context(.textfield.mod-filter) .lu-select-placeholder{padding:0;height:auto;padding-top:var(--spacings-S);color:var(--palettes-grey-800)}:host-context(.textfield.mod-material):after{color:var(--palettes-grey-500);bottom:.6rem;right:0}:host-context(.textfield.mod-material) .lu-select-value,:host-context(.textfield.mod-material) .lu-select-placeholder{padding-left:0;padding-right:.8rem}:host-context(.textfield.mod-material) .lu-select-suffix{right:calc(2 * var(--components-select-input-padding-horizontal))}:host-context(.textfield.mod-material).is-select .lu-select-placeholder{display:none}:host-context(.textfield.mod-material).mod-search:after{bottom:0}:host-context(.textfield.mod-material).mod-search .lu-select-suffix{right:calc(2.75 * var(--components-select-input-padding-horizontal))}:host-context(.textfield.mod-material .textfield-input.is-focused) .lu-select-placeholder{display:none}:host(.mod-multiple) .lu-select-value{height:auto;align-items:center}:host(.mod-multiple) .lu-select-display-wrapper{overflow:visible;white-space:normal;margin-bottom:calc(var(--spacings-XXS) * -1)}:host-context(.textfield.mod-outlined).textfield-input:after{color:var(--palettes-grey-600)}:host-context(.textfield.mod-outlined).textfield-input .lu-select-placeholder{color:var(--palettes-grey-400)}:host-context(.textfield.mod-outlined) :host-context(.textfield-input.is-error):after{color:var(--palettes-error-600)}:host-context(.textfield.mod-outlined) :host-context(.textfield-input.is-error) .lu-select-placeholder{color:var(--palettes-error-400)}:host-context(.textfield-input.is-filled) .lu-select-placeholder{display:none}:host-context(.textfield-input.is-filled) .lu-select-value{display:flex;align-items:flex-start}:host-context(.textfield .textfield-input.is-focused):after{transform:rotate(-180deg)}:host-context(.textfield-input.is-clearable) .lu-select-value{padding-right:3.5rem}:host-context(.textfield-input.is-error):after{color:var(--palettes-error-700)}:host-context(.textfield-input.is-error) .lu-select-placeholder{color:var(--palettes-error-400)}:host-context(.textfield-input.is-disabled,.textfield-input[disabled]):after{color:var(--commons-disabled-color)}:host-context(.textfield-input.is-disabled,.textfield-input[disabled]) .lu-select-placeholder{color:var(--commons-disabled-placeholder)}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { LuSelectInputComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuSelectInputComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lu-select', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef(() => LuSelectInputComponent),
                            multi: true,
                        },
                    ], template: "<div class=\"lu-select-placeholder\">{{ placeholder }}</div>\n<div class=\"lu-select-value\">\n\t<div class=\"lu-select-display-wrapper\">\n\t\t<ng-container #display></ng-container>\n\t</div>\n</div>\n<div #suffix class=\"lu-select-suffix\"></div>\n", styles: [":root{--components-options-item-padding-vertical: var(--spacings-XS);--components-options-item-padding-horizontal: var(--spacings-XS);--components-options-item-multiple-padding: 2.25rem;--components-options-item-icon-color: var(--palettes-grey-800);--components-options-checkbox-left: .5rem;--components-options-checkbox-size: 1.25rem;--components-options-checkbox-color: var(--palettes-primary-700);--components-options-checkbox-border-radius: 6px;--components-options-checkbox-border-color: var(--palettes-grey-700);--components-options-establishment-multiple-padding: 2rem}:host{--components-select-input-padding-horizontal: var(--spacings-XS);--components-select-input-padding-vertical: var(--spacings-XS);--components-select-framed-color: var(--palettes-grey-500);--components-select-framed-color50: var(--palettes-grey-50);--components-select-framed-see-through: var(--palettes-grey-50);--components-select-framed-text: var(--palettes-grey-800);--components-select-framed-placeholder: #cccccc;--components-select-framed-side-padding: var(--spacings-S);--components-select-framed-top-padding: var(--spacings-L);--components-select-framed-bottom-padding: var(--spacings-S);--components-select-framed-label-top-offset: var(--spacings-XS);cursor:pointer;outline:none;padding:0;gap:0}:host:after{display:inline-block;vertical-align:text-bottom;font-style:normal;font-family:Lucca icons;color:var(--palettes-grey-600);bottom:var(--components-select-input-padding-vertical);font-size:var(--sizes-M-lineHeight);line-height:var(--sizes-M-lineHeight);pointer-events:none;position:absolute;right:var(--components-select-input-padding-horizontal);transition:transform var(--commons-animations-durations-standard) ease}@supports (content: \"*\"/\"\"){:host:after{content:\"\\e97c\"/\"\"}}@supports not (content: \"*\"/\"\"){:host:after{content:\"\\e97c\"}}:host[disabled],:host.is-disabled{cursor:not-allowed;pointer-events:all}.lu-select-display-wrapper{display:block;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.lu-select-value{line-height:var(--sizes-M-lineHeight);min-height:calc(var(--components-select-framed-bottom-padding) + var(--sizes-M-lineHeight));padding:var(--components-select-input-padding-vertical) 3.5rem var(--components-select-input-padding-vertical) var(--components-select-input-padding-horizontal);transition:all var(--commons-animations-durations-standard);display:none}.lu-select-placeholder{color:var(--palettes-grey-400);line-height:var(--sizes-M-lineHeight);min-height:calc(var(--components-select-framed-bottom-padding) + var(--sizes-M-lineHeight));padding:var(--components-select-input-padding-vertical) 3.5rem var(--components-select-input-padding-vertical) var(--components-select-input-padding-horizontal);transition:all var(--commons-animations-durations-standard);overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.lu-select-suffix,.lu-select-clearer{position:absolute;bottom:.75rem;right:2.25rem}::ng-deep .lu-select-value .label{padding:var(--spacings-XXS) var(--spacings-XS);margin-left:0}::ng-deep .lu-select-value .chip{vertical-align:baseline;max-width:100%;margin:0 var(--spacings-XXS) var(--spacings-XXS) 0;text-overflow:ellipsis;overflow:hidden;vertical-align:top;white-space:nowrap}:host-context(.textfield.mod-S){padding:0}:host-context(.textfield.mod-S) .lu-select-value,:host-context(.textfield.mod-S) .lu-select-placeholder{font-size:var(--sizes-S-fontSize);line-height:var(--sizes-XS-lineHeight);min-height:calc(var(--components-select-framed-bottom-padding) + var(--sizes-XS-lineHeight))}:host-context(.textfield.mod-S) .lu-select-clearer{bottom:var(--spacings-XS)}:host-context(.textfield.mod-S):after{line-height:var(--sizes-XS-lineHeight);font-size:var(--sizes-S-lineHeight)}:host-context(.textfield.mod-S) .lu-select-suffix{bottom:.5rem;right:2rem}:host-context(.textfield.mod-S) ::ng-deep .lu-select-value .label{font-size:var(--sizes-S-fontSize);line-height:var(--sizes-S-lineHeight);font-weight:600;margin:0;padding:0;background-color:transparent}:host-context(.textfield.mod-S) ::ng-deep .lu-select-value .chip{height:var(--sizes-XS-lineHeight);line-height:var(--sizes-XS-lineHeight);font-size:var(--sizes-XS-fontSize);padding-left:var(--spacings-XXS);padding-right:var(--spacings-XXS);gap:var(--spacings-XXS)}:host-context(.textfield.mod-S) ::ng-deep .lu-select-value .numericBadge{--components-numericBadge-size: 1.25rem;--components-numericBadge-borderRadius: 6px;--components-numericBadge-fontSize: var(--sizes-XS-fontSize);--components-numericBadge-lineHeight: var(--sizes-XS-lineHeight)}:host-context(.textfield.mod-framed).textfield-input,:host-context(.form.mod-framed).textfield-input{padding:var(--components-select-framed-top-padding) 0 0}:host-context(.textfield.mod-framed).textfield-input:after,:host-context(.form.mod-framed).textfield-input:after{color:var(--palettes-grey-500);bottom:var(--components-select-framed-bottom-padding);right:var(--spacings-XS)}:host-context(.textfield.mod-framed).textfield-input .lu-select-value,:host-context(.form.mod-framed).textfield-input .lu-select-value{padding:0 calc(var(--components-select-framed-side-padding) * 3) var(--components-select-framed-bottom-padding) var(--components-select-framed-side-padding)}:host-context(.textfield.mod-framed).textfield-input .lu-select-placeholder,:host-context(.form.mod-framed).textfield-input .lu-select-placeholder{color:var(--palettes-grey-400);padding:0 calc(var(--components-select-framed-side-padding) * 3) var(--components-select-framed-bottom-padding) var(--components-select-framed-side-padding)}:host-context(.textfield.mod-framed).textfield-input .lu-select-suffix,:host-context(.form.mod-framed).textfield-input .lu-select-suffix{bottom:var(--components-select-framed-bottom-padding);right:1.7rem}:host-context(.textfield.mod-filter) .lu-select-value,:host-context(.textfield.mod-filter) .lu-select-placeholder{padding:0;height:auto;padding-top:var(--spacings-S);color:var(--palettes-grey-800)}:host-context(.textfield.mod-material):after{color:var(--palettes-grey-500);bottom:.6rem;right:0}:host-context(.textfield.mod-material) .lu-select-value,:host-context(.textfield.mod-material) .lu-select-placeholder{padding-left:0;padding-right:.8rem}:host-context(.textfield.mod-material) .lu-select-suffix{right:calc(2 * var(--components-select-input-padding-horizontal))}:host-context(.textfield.mod-material).is-select .lu-select-placeholder{display:none}:host-context(.textfield.mod-material).mod-search:after{bottom:0}:host-context(.textfield.mod-material).mod-search .lu-select-suffix{right:calc(2.75 * var(--components-select-input-padding-horizontal))}:host-context(.textfield.mod-material .textfield-input.is-focused) .lu-select-placeholder{display:none}:host(.mod-multiple) .lu-select-value{height:auto;align-items:center}:host(.mod-multiple) .lu-select-display-wrapper{overflow:visible;white-space:normal;margin-bottom:calc(var(--spacings-XXS) * -1)}:host-context(.textfield.mod-outlined).textfield-input:after{color:var(--palettes-grey-600)}:host-context(.textfield.mod-outlined).textfield-input .lu-select-placeholder{color:var(--palettes-grey-400)}:host-context(.textfield.mod-outlined) :host-context(.textfield-input.is-error):after{color:var(--palettes-error-600)}:host-context(.textfield.mod-outlined) :host-context(.textfield-input.is-error) .lu-select-placeholder{color:var(--palettes-error-400)}:host-context(.textfield-input.is-filled) .lu-select-placeholder{display:none}:host-context(.textfield-input.is-filled) .lu-select-value{display:flex;align-items:flex-start}:host-context(.textfield .textfield-input.is-focused):after{transform:rotate(-180deg)}:host-context(.textfield-input.is-clearable) .lu-select-value{padding-right:3.5rem}:host-context(.textfield-input.is-error):after{color:var(--palettes-error-700)}:host-context(.textfield-input.is-error) .lu-select-placeholder{color:var(--palettes-error-400)}:host-context(.textfield-input.is-disabled,.textfield-input[disabled]):after{color:var(--commons-disabled-color)}:host-context(.textfield-input.is-disabled,.textfield-input[disabled]) .lu-select-placeholder{color:var(--commons-disabled-placeholder)}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.Overlay }, { type: i0.ElementRef }, { type: i0.ViewContainerRef }, { type: i0.Renderer2 }]; }, propDecorators: { modMultipleView: [{
                type: HostBinding,
                args: ['class.mod-multipleView']
            }], clearerEltRef: [{
                type: ContentChild,
                args: [ALuClearer, { read: ElementRef, static: false }]
            }], suffixEltRef: [{
                type: ViewChild,
                args: ['suffix', { read: ElementRef, static: true }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LWlucHV0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL25nL3NlbGVjdC9pbnB1dC9zZWxlY3QtaW5wdXQuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvbmcvc2VsZWN0L2lucHV0L3NlbGVjdC1pbnB1dC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBRU4sdUJBQXVCLEVBRXZCLFNBQVMsRUFDVCxZQUFZLEVBQ1osU0FBUyxFQUNULFVBQVUsRUFDVixZQUFZLEVBQ1osVUFBVSxFQUNWLFdBQVcsRUFDWCxZQUFZLEVBQ1osS0FBSyxFQUVMLE1BQU0sRUFFTixTQUFTLEVBQ1QsZ0JBQWdCLEdBQ2hCLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBd0IsaUJBQWlCLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUN6RSxPQUFPLEVBQUUsVUFBVSxFQUFFLGlCQUFpQixFQUFpQyxNQUFNLHVCQUF1QixDQUFDO0FBQ3JHLE9BQU8sRUFBRSxjQUFjLEVBQWtCLE1BQU0sd0JBQXdCLENBQUM7QUFDeEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHNCQUFzQixDQUFDOzs7QUFFdEQsTUFDc0IsdUJBQWtGLFNBQVEsY0FBMEI7SUFDekksSUFDYyxtQkFBbUIsQ0FBQyxHQUFxQjtRQUN0RCxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsR0FBRyxDQUFDO0lBQzdCLENBQUM7SUFJRCxJQUE0QixZQUFZLENBQUMsQ0FBVTtRQUNsRCxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUM7SUFDekIsQ0FBQztJQUVELElBQTBCLGdCQUFnQixDQUFDLENBQVM7UUFDbkQsSUFBSSxDQUFDLFlBQVksR0FBRyxDQUFDLENBQUM7SUFDdkIsQ0FBQztJQUNELElBQXVCLGFBQWEsQ0FBQyxDQUFtQjtRQUN2RCxJQUFJLENB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QkFDQyxPQUFPLEVBQUUsaUJBQWlCOzRCQUMxQixXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSx1QkFBdUIsQ0FBQzs0QkFDckQsS0FBSyxFQUFFLElBQUk7eUJBQ1g7cUJBQ0Q7OE1BSUcsZUFBZTtzQkFEbEIsV0FBVzt1QkFBQyx3QkFBd0I7Z0JBZXJDLGFBQWE7c0JBRFosWUFBWTt1QkFBQyxVQUFVLEVBQUUsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUU7Z0JBRzdELFlBQVk7c0JBRFgsU0FBUzt1QkFBQyxRQUFRLEVBQUUsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBAYW5ndWxhci1lc2xpbnQvbm8tb3V0cHV0LW9uLXByZWZpeCAqL1xuaW1wb3J0IHsgT3ZlcmxheSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9vdmVybGF5JztcbmltcG9ydCB7XG5cdEFmdGVyVmlld0luaXQsXG5cdENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuXHRDaGFuZ2VEZXRlY3RvclJlZixcblx0Q29tcG9uZW50LFxuXHRDb250ZW50Q2hpbGQsXG5cdERpcmVjdGl2ZSxcblx0RWxlbWVudFJlZixcblx0RXZlbnRFbWl0dGVyLFxuXHRmb3J3YXJkUmVmLFxuXHRIb3N0QmluZGluZyxcblx0SG9zdExpc3RlbmVyLFxuXHRJbnB1dCxcblx0T25EZXN0cm95LFxuXHRPdXRwdXQsXG5cdFJlbmRlcmVyMixcblx0Vmlld0NoaWxkLFxuXHRWaWV3Q29udGFpbmVyUmVmLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbnRyb2xWYWx1ZUFjY2Vzc29yLCBOR19WQUxVRV9BQ0NFU1NPUiB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IEFMdUNsZWFyZXIsIEFMdUlucHV0RGlzcGxheWVyLCBJTHVDbGVhcmVyLCBJTHVJbnB1dERpc3BsYXllciB9IGZyb20gJ0BsdWNjYS1mcm9udC9uZy9pbnB1dCc7XG5pbXBvcnQgeyBBTHVQaWNrZXJQYW5lbCwgSUx1UGlja2VyUGFuZWwgfSBmcm9tICdAbHVjY2EtZnJvbnQvbmcvcGlja2VyJztcbmltcG9ydCB7IEFMdVNlbGVjdElucHV0IH0gZnJvbSAnLi9zZWxlY3QtaW5wdXQubW9kZWwnO1xuXG5ARGlyZWN0aXZlKClcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBBTHVTZWxlY3RJbnB1dENvbXBvbmVudDxULCBUUGlja2VyIGV4dGVuZHMgSUx1UGlja2VyUGFuZWw8VD4gPSBJTHVQaWNrZXJQYW5lbDxUPj4gZXh0ZW5kcyBBTHVTZWxlY3RJbnB1dDxULCBUUGlja2VyPiBpbXBsZW1lbnRzIENvbnRyb2xWYWx1ZUFjY2Vzc29yLCBBZnRlclZpZXdJbml0LCBPbkRlc3Ryb3kge1xuXHRAVmlld0NoaWxkKCdkaXNwbGF5JywgeyByZWFkOiBWaWV3Q29udGFpbmVyUmVmLCBzdGF0aWM6IHRydWUgfSlcblx0cHJvdGVjdGVkIHNldCBfdmNEaXNwbGF5Q29udGFpbmVyKHZjcjogVmlld0NvbnRhaW5lclJlZikge1xuXHRcdHRoaXMuZGlzcGxheUNvbnRhaW5lciA9IHZjcjtcblx0fVxuXG5cdEBIb3N0QmluZGluZygndGFiaW5kZXgnKSB0YWJpbmRleCA9IDA7XG5cblx0QElucHV0KCdwaWNrZXJPdmVybGFwJykgc2V0IG92ZXJsYXBJbnB1dChvOiBib29sZWFuKSB7XG5cdFx0dGhpcy50YXJnZXQub3ZlcmxhcCA9IG87XG5cdH1cblxuXHRASW5wdXQoJ3BsYWNlaG9sZGVyJykgc2V0IGlucHV0UGxhY2Vob2xkZXIocDogc3RyaW5nKSB7XG5cdFx0dGhpcy5fcGxhY2Vob2xkZXIgPSBwO1xuXHR9XG5cdEBJbnB1dCgnbXVsdGlwbGUnKSBzZXQgaW5wdXRNdWx0aXBsZShtOiBib29sZWFuIHwgc3RyaW5nKSB7XG5cdFx0aWYgKG0gPT09ICcnKSB7XG5cdFx0XHQvLyBhbGxvd3MgdG8gaGF2ZSBtdWx0aXBsZSA9IHRydWUgd2hlbiB3cml0aW5nXG5cdFx0XHQvLyA8bHUtc2VsZWN0IG11bHRpcGxlPlxuXHRcdFx0dGhpcy5tdWx0aXBsZSA9IHRydWU7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRoaXMubXVsdGlwbGUgPSAhIW07XG5cdFx0fVxuXHR9XG5cdC8qKiBFdmVudCBlbWl0dGVkIHdoZW4gdGhlIGFzc29jaWF0ZWQgcG9wb3ZlciBpcyBvcGVuZWQuICovXG5cdEBPdXRwdXQoKSBvbk9wZW4gPSBuZXcgRXZlbnRFbWl0dGVyPHZvaWQ+KCk7XG5cdC8qKiBFdmVudCBlbWl0dGVkIHdoZW4gdGhlIGFzc29jaWF0ZWQgcG9wb3ZlciBpcyBjbG9zZWQuICovXG5cdEBPdXRwdXQoKSBvbkNsb3NlID0gbmV3IEV2ZW50RW1pdHRlcjx2b2lkPigpO1xuXG5cdGNvbnN0cnVjdG9yKFxuXHRcdHByb3RlY3RlZCBvdmVycmlkZSBfY2hhbmdlRGV0ZWN0b3JSZWY6IENoYW5nZURldGVjdG9yUmVmLFxuXHRcdHByb3RlY3RlZCBvdmVycmlkZSBfb3ZlcmxheTogT3ZlcmxheSxcblx0XHRwcm90ZWN0ZWQgb3ZlcnJpZGUgX2VsZW1lbnRSZWY6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+LFxuXHRcdHByb3RlY3RlZCBvdmVycmlkZSBfdmlld0NvbnRhaW5lclJlZjogVmlld0NvbnRhaW5lclJlZixcblx0XHRwcm90ZWN0ZWQgb3ZlcnJpZGUgX3JlbmRlcmVyOiBSZW5kZXJlcjIsXG5cdCkge1xuXHRcdHN1cGVyKF9jaGFuZ2VEZXRlY3RvclJlZiwgX292ZXJsYXksIF9lbGVtZW50UmVmLCBfdmlld0NvbnRhaW5lclJlZiwgX3JlbmRlcmVyKTtcblx0fVxuXHRASG9zdEJpbmRpbmcoJ2NsYXNzLmlzLWRpc2FibGVkJylcblx0Z2V0IGlzRGlzYWJsZWQoKSB7XG5cdFx0cmV0dXJuIHRoaXMuZGlzYWJsZWQ7XG5cdH1cblx0QElucHV0KCdkaXNhYmxlZCcpIHNldCBpbnB1dERpc2FibGVkKGQ6IGJvb2xlYW4pIHtcblx0XHR0aGlzLl9kaXNhYmxlZCA9IGQ7XG5cdH1cblx0QEhvc3RCaW5kaW5nKCdjbGFzcy5pcy1mb2N1c2VkJylcblx0Z2V0IGlzRm9jdXNlZCgpIHtcblx0XHRyZXR1cm4gdGhpcy5fcG9wb3Zlck9wZW4gJiYgIXRoaXMudGFyZ2V0Lm92ZXJsYXA7XG5cdH1cblx0QEhvc3RCaW5kaW5nKCdjbGFzcy5tb2QtbXVsdGlwbGUnKVxuXHRnZXQgbW9kTXVsdGlwbGUoKSB7XG5cdFx0cmV0dXJuIHRoaXMuX211bHRpcGxlO1xuXHR9XG5cblx0QEhvc3RCaW5kaW5nKCdjbGFzcy5pcy1jbGVhcmFibGUnKVxuXHRnZXQgaXNDbGVhcmFibGUoKSB7XG5cdFx0cmV0dXJuICEhdGhpcy5fY2xlYXJlcjtcblx0fVxuXHQvKipcblx0ICogcG9wb3ZlciB0cmlnZ2VyIGNsYXNzIGV4dGVuc2lvblxuXHQgKi9cblx0QENvbnRlbnRDaGlsZChBTHVQaWNrZXJQYW5lbCwgeyBzdGF0aWM6IHRydWUgfSkgY2NQaWNrZXI6IFRQaWNrZXI7XG5cdEBWaWV3Q2hpbGQoQUx1UGlja2VyUGFuZWwsIHsgc3RhdGljOiB0cnVlIH0pIHZjUGlja2VyOiBUUGlja2VyO1xuXG5cdEBDb250ZW50Q2hpbGQoQUx1SW5wdXREaXNwbGF5ZXIsIHsgc3RhdGljOiB0cnVlIH0pXG5cdGNjRGlzcGxheWVyOiBJTHVJbnB1dERpc3BsYXllcjxUPjtcblx0QFZpZXdDaGlsZChBTHVJbnB1dERpc3BsYXllciwgeyBzdGF0aWM6IHRydWUgfSlcblx0dmNEaXNwbGF5ZXI6IElMdUlucHV0RGlzcGxheWVyPFQ+O1xuXG5cdEBDb250ZW50Q2hpbGQoQUx1Q2xlYXJlciwgeyBzdGF0aWM6IHRydWUgfSkgY2NDbGVhcmVyOiBJTHVDbGVhcmVyPFQ+O1xuXHRAVmlld0NoaWxkKEFMdUNsZWFyZXIsIHsgc3RhdGljOiB0cnVlIH0pIHZjQ2xlYXJlcjogSUx1Q2xlYXJlcjxUPjtcblxuXHRASG9zdExpc3RlbmVyKCdjbGljaycpXG5cdG92ZXJyaWRlIG9uQ2xpY2soKSB7XG5cdFx0c3VwZXIub25DbGljaygpO1xuXHR9XG5cdEBIb3N0TGlzdGVuZXIoJ21vdXNlZW50ZXInKVxuXHRvdmVycmlkZSBvbk1vdXNlRW50ZXIoKSB7XG5cdFx0c3VwZXIub25Nb3VzZUVudGVyKCk7XG5cdH1cblx0QEhvc3RMaXN0ZW5lcignbW91c2VsZWF2ZScpXG5cdG92ZXJyaWRlIG9uTW91c2VMZWF2ZSgpIHtcblx0XHRzdXBlci5vbk1vdXNlTGVhdmUoKTtcblx0fVxuXHRASG9zdExpc3RlbmVyKCdmb2N1cycpXG5cdG92ZXJyaWRlIG9uRm9jdXMoKSB7XG5cdFx0c3VwZXIub25Gb2N1cygpO1xuXHR9XG5cdEBIb3N0TGlzdGVuZXIoJ2JsdXInKVxuXHRvdmVycmlkZSBvbkJsdXIoKSB7XG5cdFx0c3VwZXIub25CbHVyKCk7XG5cdH1cblx0QEhvc3RMaXN0ZW5lcigna2V5ZG93bi5zcGFjZScsIFsnJGV2ZW50J10pXG5cdEBIb3N0TGlzdGVuZXIoJ2tleWRvd24uZW50ZXInLCBbJyRldmVudCddKVxuXHRvbktleWRvd24oJGV2ZW50OiBLZXlib2FyZEV2ZW50KSB7XG5cdFx0aWYgKCF0aGlzLl9wb3BvdmVyT3Blbikge1xuXHRcdFx0dGhpcy5vcGVuUG9wb3ZlcigpO1xuXHRcdFx0JGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuXHRcdFx0JGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cdFx0fVxuXHR9XG5cblx0bmdBZnRlclZpZXdJbml0KCkge1xuXHRcdHRoaXMuX2lzQ29udGVudEluaXRpYWxpemVkID0gdHJ1ZTtcblxuXHRcdC8vIGluaXQgcGlja2VyIGFuZCBkaXNwbGF5ZXIgYW5kIGNsZWFyZXJcblx0XHRjb25zdCBwaWNrZXIgPSB0aGlzLmNjUGlja2VyIHx8IHRoaXMudmNQaWNrZXI7XG5cdFx0aWYgKHBpY2tlcikge1xuXHRcdFx0dGhpcy5fcGlja2VyID0gcGlja2VyO1xuXHRcdH1cblx0XHRjb25zdCBkaXNwbGF5ZXIgPSB0aGlzLmNjRGlzcGxheWVyIHx8IHRoaXMudmNEaXNwbGF5ZXI7XG5cdFx0aWYgKGRpc3BsYXllcikge1xuXHRcdFx0dGhpcy5fZGlzcGxheWVyID0gZGlzcGxheWVyO1xuXHRcdH1cblx0XHRjb25zdCBjbGVhcmVyID0gdGhpcy5jY0NsZWFyZXIgfHwgdGhpcy52Y0NsZWFyZXI7XG5cdFx0aWYgKGNsZWFyZXIpIHtcblx0XHRcdHRoaXMuX2NsZWFyZXIgPSBjbGVhcmVyO1xuXHRcdH1cblxuXHRcdHRoaXMucmVuZGVyKCk7XG5cdFx0dGhpcy5fcGlja2VyLnNldFZhbHVlKHRoaXMudmFsdWUpO1xuXG5cdFx0Ly8gc3RyYW5nZSBidWcgd2hlcmUgdGhlIHZpZXcgcmVuZGVycmVkIGluIHRoZSBkaXNwbGF5ZXIgd2FzIG9ubHkgaW5qZWN0ZWQgYWZ0ZXIgYSBob3ZlclxuXHRcdC8vIG5vIG1hdHRlciBob3cgbWFueSBjZHIubWFya2ZvcmNoYWNrIGkgYWRkZWRcblx0XHQvLyBidXQgd2l0aCBhIHRpbWVvdXQgaXQgd29ya3Ncblx0XHQvLyBzaHJ1ZyBlbW9qaVxuXHRcdHNldFRpbWVvdXQoKCkgPT4ge1xuXHRcdFx0dGhpcy5fY2hhbmdlRGV0ZWN0b3JSZWYubWFya0ZvckNoZWNrKCk7XG5cdFx0fSwgMSk7XG5cdH1cblxuXHRuZ09uRGVzdHJveSgpIHtcblx0XHRpZiAodGhpcy5fcG9wb3Zlck9wZW4pIHtcblx0XHRcdHRoaXMuY2xvc2VQb3BvdmVyKCk7XG5cdFx0fVxuXHRcdHRoaXMuZGVzdHJveVBvcG92ZXIoKTtcblx0XHR0aGlzLm9uRGVzdHJveSgpO1xuXHR9XG5cdHByb3RlY3RlZCBfZW1pdE9wZW4oKTogdm9pZCB7XG5cdFx0dGhpcy5vbk9wZW4uZW1pdCgpO1xuXHR9XG5cdHByb3RlY3RlZCBfZW1pdENsb3NlKCk6IHZvaWQge1xuXHRcdHRoaXMub25DbG9zZS5lbWl0KCk7XG5cdH1cbn1cblxuLyoqXG4gKiBzZWxlY3QgaW5wdXRcbiAqL1xuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiAnbHUtc2VsZWN0Jyxcblx0dGVtcGxhdGVVcmw6ICcuL3NlbGVjdC1pbnB1dC5jb21wb25lbnQuaHRtbCcsXG5cdHN0eWxlVXJsczogWycuL3NlbGVjdC1pbnB1dC5jb21wb25lbnQuc2NzcyddLFxuXHRjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcblx0c3RhbmRhbG9uZTogdHJ1ZSxcblx0cHJvdmlkZXJzOiBbXG5cdFx0e1xuXHRcdFx0cHJvdmlkZTogTkdfVkFMVUVfQUNDRVNTT1IsXG5cdFx0XHR1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBMdVNlbGVjdElucHV0Q29tcG9uZW50KSxcblx0XHRcdG11bHRpOiB0cnVlLFxuXHRcdH0sXG5cdF0sXG59KVxuZXhwb3J0IGNsYXNzIEx1U2VsZWN0SW5wdXRDb21wb25lbnQ8VD4gZXh0ZW5kcyBBTHVTZWxlY3RJbnB1dENvbXBvbmVudDxUPiBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xuXHRASG9zdEJpbmRpbmcoJ2NsYXNzLm1vZC1tdWx0aXBsZVZpZXcnKVxuXHRnZXQgbW9kTXVsdGlwbGVWaWV3KCkge1xuXHRcdHJldHVybiB0aGlzLnVzZU11bHRpcGxlVmlld3MoKTtcblx0fVxuXHRjb25zdHJ1Y3Rvcihcblx0XHRwcm90ZWN0ZWQgb3ZlcnJpZGUgX2NoYW5nZURldGVjdG9yUmVmOiBDaGFuZ2VEZXRlY3RvclJlZixcblx0XHRwcm90ZWN0ZWQgb3ZlcnJpZGUgX292ZXJsYXk6IE92ZXJsYXksXG5cdFx0cHJvdGVjdGVkIG92ZXJyaWRlIF9lbGVtZW50UmVmOiBFbGVtZW50UmVmPEhUTUxFbGVtZW50Pixcblx0XHRwcm90ZWN0ZWQgb3ZlcnJpZGUgX3ZpZXdDb250YWluZXJSZWY6IFZpZXdDb250YWluZXJSZWYsXG5cdFx0cHJvdGVjdGVkIG92ZXJyaWRlIF9yZW5kZXJlcjogUmVuZGVyZXIyLFxuXHQpIHtcblx0XHRzdXBlcihfY2hhbmdlRGV0ZWN0b3JSZWYsIF9vdmVybGF5LCBfZWxlbWVudFJlZiwgX3ZpZXdDb250YWluZXJSZWYsIF9yZW5kZXJlcik7XG5cdH1cblx0Ly8gZGlzcGxheSBjbGVhcmVyXG5cdEBDb250ZW50Q2hpbGQoQUx1Q2xlYXJlciwgeyByZWFkOiBFbGVtZW50UmVmLCBzdGF0aWM6IGZhbHNlIH0pXG5cdGNsZWFyZXJFbHRSZWY6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+O1xuXHRAVmlld0NoaWxkKCdzdWZmaXgnLCB7IHJlYWQ6IEVsZW1lbnRSZWYsIHN0YXRpYzogdHJ1ZSB9KVxuXHRzdWZmaXhFbHRSZWY6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+O1xuXHRkaXNwbGF5Q2xlYXJlcigpIHtcblx0XHRpZiAodGhpcy5jbGVhcmVyRWx0UmVmKSB7XG5cdFx0XHR0aGlzLl9yZW5kZXJlci5hcHBlbmRDaGlsZCh0aGlzLnN1ZmZpeEVsdFJlZi5uYXRpdmVFbGVtZW50LCB0aGlzLmNsZWFyZXJFbHRSZWYubmF0aXZlRWxlbWVudCk7XG5cdFx0fVxuXHR9XG5cblx0b3ZlcnJpZGUgbmdBZnRlclZpZXdJbml0KCkge1xuXHRcdHN1cGVyLm5nQWZ0ZXJWaWV3SW5pdCgpO1xuXHRcdHRoaXMuZGlzcGxheUNsZWFyZXIoKTsgLy8gZG9udCBrZWVwXG5cdH1cbn1cbiIsIjxkaXYgY2xhc3M9XCJsdS1zZWxlY3QtcGxhY2Vob2xkZXJcIj57eyBwbGFjZWhvbGRlciB9fTwvZGl2PlxuPGRpdiBjbGFzcz1cImx1LXNlbGVjdC12YWx1ZVwiPlxuXHQ8ZGl2IGNsYXNzPVwibHUtc2VsZWN0LWRpc3BsYXktd3JhcHBlclwiPlxuXHRcdDxuZy1jb250YWluZXIgI2Rpc3BsYXk+PC9uZy1jb250YWluZXI+XG5cdDwvZGl2PlxuPC9kaXY+XG48ZGl2ICNzdWZmaXggY2xhc3M9XCJsdS1zZWxlY3Qtc3VmZml4XCI+PC9kaXY+XG4iXX0=
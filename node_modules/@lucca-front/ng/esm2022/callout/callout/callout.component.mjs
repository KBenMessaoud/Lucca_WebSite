import { booleanAttribute, ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';
import { NgIf } from '@angular/common';
import { getIntl, PortalDirective } from '@lucca-front/ng/core';
import { LU_CALLOUT_TRANSLATIONS } from '../callout.translate';
import { CalloutStateMap } from '../callout-state';
import * as i0 from "@angular/core";
class CalloutComponent {
    constructor() {
        this.palette = 'none';
        this.removable = false;
        this.removed = false;
        this.removedChange = new EventEmitter();
        this.intl = getIntl(LU_CALLOUT_TRANSLATIONS);
    }
    set state(state) {
        const { icon, palette } = CalloutStateMap[state];
        if (this.palette === 'none') {
            this.palette = palette;
        }
        if (!this.icon) {
            this.icon = icon;
        }
    }
    get hiddenAttr() {
        return this.removed ? 'hidden' : null;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: CalloutComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.3", type: CalloutComponent, isStandalone: true, selector: "lu-callout", inputs: { heading: "heading", palette: "palette", size: "size", removable: ["removable", "removable", booleanAttribute], icon: "icon", state: "state", removed: ["removed", "removed", booleanAttribute] }, outputs: { removedChange: "removedChange" }, host: { properties: { "attr.hidden": "this.hiddenAttr" } }, ngImport: i0, template: "<div class=\"callout palette-{{palette}} mod-{{size}}\" *ngIf=\"!removed\">\n\t<div class=\"callout-icon\" *ngIf=\"icon\">\n\t\t<span aria-hidden=\"true\" class=\"lucca-icon icon-{{icon}}\"></span>\n\t</div>\n\t<div class=\"callout-content\">\n\t\t<strong class=\"callout-content-title\" *ngIf=\"heading\">\n\t\t\t<ng-container *luPortal=\"heading\"></ng-container>\n\t\t</strong>\n\t\t<div class=\"callout-content-description\">\n\t\t\t<ng-content></ng-content>\n\t\t</div>\n\t</div>\n\t<button *ngIf=\"removable\" type=\"button\" class=\"callout-kill\" (click)=\"removed = true; removedChange.emit(true)\">\n\t\t<span class=\"u-mask\">{{ intl.close }}</span>\n\t</button>\n</div>\n", styles: [".callout{align-items:flex-start;border-radius:var(--commons-borderRadius-L);background-color:var(--palettes-50, var(--palettes-grey-50));color:var(--palettes-grey-800);border-color:var(--palettes-300, var(--palettes-grey-300));border-style:solid;border-width:var(--commons-divider-width);gap:.75rem;padding:var(--spacings-XS) .75rem;position:relative}.callout:not([hidden]){display:flex}.callout a,.callout .link{--commons-text-link-color: var(--palettes-grey-800);--commons-text-link-hover: var(--palettes-grey-700)}.callout-content{flex:1;display:flex;flex-direction:column;gap:var(--spacings-XXS)}.callout-content-title{font-weight:600}.callout-icon{display:inline-flex;color:var(--palettes-700, var(--palettes-grey-700))}.callout-icon .lucca-icon{font-size:var(--sizes-M-lineHeight)}.callout-kill{padding:0;border:0;width:100%;background-color:transparent;color:inherit;text-align:left;display:block;font:inherit;cursor:pointer;color:currentColor;transition-duration:var(--commons-animations-durations-fast);transition-property:background-color;width:auto}.callout-kill:focus-visible{outline:2px solid var(--palettes-primary-700);outline-offset:2px;border-radius:var(--commons-borderRadius-M)}.callout-kill:before{display:inline-block;vertical-align:text-bottom;font-style:normal;font-family:Lucca icons;font-size:var(--sizes-S-lineHeight)}@supports (content: \"*\"/\"\"){.callout-kill:before{content:\"\\e9bf\"/\"\"}}@supports not (content: \"*\"/\"\"){.callout-kill:before{content:\"\\e9bf\"}}.callout.mod-S{font-size:var(--sizes-S-fontSize);line-height:var(--sizes-S-lineHeight);gap:.75rem}.callout.mod-S .callout-icon{line-height:var(--sizes-S-lineHeight)}.callout.mod-S .callout-icon .lucca-icon{font-size:var(--sizes-S-lineHeight)}.callout.mod-tiny{display:inline-flex;gap:.375rem;padding:var(--spacings-XS)}\n"], dependencies: [{ kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: PortalDirective, selector: "[luPortal]", inputs: ["luPortal"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { CalloutComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: CalloutComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lu-callout', standalone: true, imports: [NgIf, PortalDirective], changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"callout palette-{{palette}} mod-{{size}}\" *ngIf=\"!removed\">\n\t<div class=\"callout-icon\" *ngIf=\"icon\">\n\t\t<span aria-hidden=\"true\" class=\"lucca-icon icon-{{icon}}\"></span>\n\t</div>\n\t<div class=\"callout-content\">\n\t\t<strong class=\"callout-content-title\" *ngIf=\"heading\">\n\t\t\t<ng-container *luPortal=\"heading\"></ng-container>\n\t\t</strong>\n\t\t<div class=\"callout-content-description\">\n\t\t\t<ng-content></ng-content>\n\t\t</div>\n\t</div>\n\t<button *ngIf=\"removable\" type=\"button\" class=\"callout-kill\" (click)=\"removed = true; removedChange.emit(true)\">\n\t\t<span class=\"u-mask\">{{ intl.close }}</span>\n\t</button>\n</div>\n", styles: [".callout{align-items:flex-start;border-radius:var(--commons-borderRadius-L);background-color:var(--palettes-50, var(--palettes-grey-50));color:var(--palettes-grey-800);border-color:var(--palettes-300, var(--palettes-grey-300));border-style:solid;border-width:var(--commons-divider-width);gap:.75rem;padding:var(--spacings-XS) .75rem;position:relative}.callout:not([hidden]){display:flex}.callout a,.callout .link{--commons-text-link-color: var(--palettes-grey-800);--commons-text-link-hover: var(--palettes-grey-700)}.callout-content{flex:1;display:flex;flex-direction:column;gap:var(--spacings-XXS)}.callout-content-title{font-weight:600}.callout-icon{display:inline-flex;color:var(--palettes-700, var(--palettes-grey-700))}.callout-icon .lucca-icon{font-size:var(--sizes-M-lineHeight)}.callout-kill{padding:0;border:0;width:100%;background-color:transparent;color:inherit;text-align:left;display:block;font:inherit;cursor:pointer;color:currentColor;transition-duration:var(--commons-animations-durations-fast);transition-property:background-color;width:auto}.callout-kill:focus-visible{outline:2px solid var(--palettes-primary-700);outline-offset:2px;border-radius:var(--commons-borderRadius-M)}.callout-kill:before{display:inline-block;vertical-align:text-bottom;font-style:normal;font-family:Lucca icons;font-size:var(--sizes-S-lineHeight)}@supports (content: \"*\"/\"\"){.callout-kill:before{content:\"\\e9bf\"/\"\"}}@supports not (content: \"*\"/\"\"){.callout-kill:before{content:\"\\e9bf\"}}.callout.mod-S{font-size:var(--sizes-S-fontSize);line-height:var(--sizes-S-lineHeight);gap:.75rem}.callout.mod-S .callout-icon{line-height:var(--sizes-S-lineHeight)}.callout.mod-S .callout-icon .lucca-icon{font-size:var(--sizes-S-lineHeight)}.callout.mod-tiny{display:inline-flex;gap:.375rem;padding:var(--spacings-XS)}\n"] }]
        }], propDecorators: { 
        /**
         * The title of the callout
         */
        heading: [{
                type: Input
            }], 
        /**
         * Which palette should be used for the entire callout.
         * Defaults to none (inherits parent palette)
         */
        palette: [{
                type: Input
            }], 
        /**
         * Which size should the callout be? Defaults to medium
         */
        size: [{
                type: Input
            }], 
        /**
         * Should we display the remove icon?
         */
        removable: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], 
        /**
         * Which icon should we display in the callout if any?
         * Defaults to no icon.
         */
        icon: [{
                type: Input
            }], state: [{
                type: Input
            }], 
        /**
         * Is the callout removed? Works with two way binding too.
         */
        removed: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], hiddenAttr: [{
                type: HostBinding,
                args: ['attr.hidden']
            }], removedChange: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsbG91dC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9uZy9jYWxsb3V0L2NhbGxvdXQvY2FsbG91dC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9uZy9jYWxsb3V0L2NhbGxvdXQvY2FsbG91dC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMvSCxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdkMsT0FBTyxFQUFFLE9BQU8sRUFBMEIsZUFBZSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDeEYsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFL0QsT0FBTyxFQUFnQixlQUFlLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQzs7QUFFakUsTUFRYSxnQkFBZ0I7SUFSN0I7UUFvQkMsWUFBTyxHQUFZLE1BQU0sQ0FBQztRQVkxQixjQUFTLEdBQUcsS0FBSyxDQUFDO1FBK0JsQixZQUFPLEdBQUcsS0FBSyxDQUFDO1FBUWhCLGtCQUFhLEdBQTBCLElBQUksWUFBWSxFQUFXLENBQUM7UUFFNUQsU0FBSSxHQUFHLE9BQU8sQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO0tBQy9DO0lBakNBLElBUUksS0FBSyxDQUFDLEtBQW1CO1FBQzVCLE1BQU0sRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLEdBQUcsZUFBZSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ2pELElBQUksSUFBSSxDQUFDLE9BQU8sS0FBSyxNQUFNLEVBQUU7WUFDNUIsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7U0FDdkI7UUFDRCxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRTtZQUNmLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1NBQ2pCO0lBQ0YsQ0FBQztJQVFELElBQ0ksVUFBVTtRQUNiLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDdkMsQ0FBQzs4R0E1RFcsZ0JBQWdCO2tHQUFoQixnQkFBZ0Isb0pBb0JSLGdCQUFnQixpRUErQmhCLGdCQUFnQixzSUNsRXJDLDZxQkFnQkEsczFERE5XLElBQUksNkZBQUUsZUFBZTs7U0FLbkIsZ0JBQWdCOzJGQUFoQixnQkFBZ0I7a0JBUjVCLFNBQVM7K0JBQ0MsWUFBWSxjQUNWLElBQUksV0FDUCxDQUFDLElBQUksRUFBRSxlQUFlLENBQUMsbUJBR2YsdUJBQXVCLENBQUMsTUFBTTs7UUFJL0M7O1dBRUc7UUFDSCxPQUFPO3NCQUpOLEtBQUs7O1FBT047OztXQUdHO1FBQ0gsT0FBTztzQkFMTixLQUFLOztRQVFOOztXQUVHO1FBQ0gsSUFBSTtzQkFKSCxLQUFLOztRQU9OOztXQUVHO1FBQ0gsU0FBUztzQkFKUixLQUFLO3VCQUFDLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFOztRQU90Qzs7O1dBR0c7UUFDSCxJQUFJO3NCQUxILEtBQUs7Z0JBZUYsS0FBSztzQkFSUixLQUFLOztRQW1CTjs7V0FFRztRQUNILE9BQU87c0JBSk4sS0FBSzt1QkFBQyxFQUFFLFNBQVMsRUFBRSxnQkFBZ0IsRUFBRTtnQkFPbEMsVUFBVTtzQkFEYixXQUFXO3VCQUFDLGFBQWE7Z0JBTTFCLGFBQWE7c0JBRFosTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJvb2xlYW5BdHRyaWJ1dGUsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSG9zdEJpbmRpbmcsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5nSWYgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgZ2V0SW50bCwgUGFsZXR0ZSwgUG9ydGFsQ29udGVudCwgUG9ydGFsRGlyZWN0aXZlIH0gZnJvbSAnQGx1Y2NhLWZyb250L25nL2NvcmUnO1xuaW1wb3J0IHsgTFVfQ0FMTE9VVF9UUkFOU0xBVElPTlMgfSBmcm9tICcuLi9jYWxsb3V0LnRyYW5zbGF0ZSc7XG5pbXBvcnQgeyBMdWNjYUljb24gfSBmcm9tICdAbHVjY2EtZnJvbnQvaWNvbnMnO1xuaW1wb3J0IHsgQ2FsbG91dFN0YXRlLCBDYWxsb3V0U3RhdGVNYXAgfSBmcm9tICcuLi9jYWxsb3V0LXN0YXRlJztcblxuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiAnbHUtY2FsbG91dCcsXG5cdHN0YW5kYWxvbmU6IHRydWUsXG5cdGltcG9ydHM6IFtOZ0lmLCBQb3J0YWxEaXJlY3RpdmVdLFxuXHR0ZW1wbGF0ZVVybDogJy4vY2FsbG91dC5jb21wb25lbnQuaHRtbCcsXG5cdHN0eWxlVXJsczogWycuL2NhbGxvdXQuY29tcG9uZW50LnNjc3MnXSxcblx0Y2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIENhbGxvdXRDb21wb25lbnQge1xuXHRASW5wdXQoKVxuXHQvKipcblx0ICogVGhlIHRpdGxlIG9mIHRoZSBjYWxsb3V0XG5cdCAqL1xuXHRoZWFkaW5nOiBQb3J0YWxDb250ZW50O1xuXG5cdEBJbnB1dCgpXG5cdC8qKlxuXHQgKiBXaGljaCBwYWxldHRlIHNob3VsZCBiZSB1c2VkIGZvciB0aGUgZW50aXJlIGNhbGxvdXQuXG5cdCAqIERlZmF1bHRzIHRvIG5vbmUgKGluaGVyaXRzIHBhcmVudCBwYWxldHRlKVxuXHQgKi9cblx0cGFsZXR0ZTogUGFsZXR0ZSA9ICdub25lJztcblxuXHRASW5wdXQoKVxuXHQvKipcblx0ICogV2hpY2ggc2l6ZSBzaG91bGQgdGhlIGNhbGxvdXQgYmU/IERlZmF1bHRzIHRvIG1lZGl1bVxuXHQgKi9cblx0c2l6ZTogJ00nIHwgJ1MnO1xuXG5cdEBJbnB1dCh7IHRyYW5zZm9ybTogYm9vbGVhbkF0dHJpYnV0ZSB9KVxuXHQvKipcblx0ICogU2hvdWxkIHdlIGRpc3BsYXkgdGhlIHJlbW92ZSBpY29uP1xuXHQgKi9cblx0cmVtb3ZhYmxlID0gZmFsc2U7XG5cblx0QElucHV0KClcblx0LyoqXG5cdCAqIFdoaWNoIGljb24gc2hvdWxkIHdlIGRpc3BsYXkgaW4gdGhlIGNhbGxvdXQgaWYgYW55P1xuXHQgKiBEZWZhdWx0cyB0byBubyBpY29uLlxuXHQgKi9cblx0aWNvbjogTHVjY2FJY29uO1xuXG5cdEBJbnB1dCgpXG5cdC8qKlxuXHQgKiBTdGF0ZSBpcyBhIHNob3J0aGFuZCB0byBzZXQgdGhlIGljb24gYW5kIHRoZSBwYWxldHRlIHRvIHRoZSByZWNvbW1lbmRlZCB2YWx1ZXMgZm9yIHRoZSBpY29uIGFuZCBwYWxldHRlIGJhc2VkIG9uXG5cdCAqIHRoZSBwcm92aWRlZCBzdGF0ZS5cblx0ICpcblx0ICogSWYgb25lIG9mIHRoZSBpY29uIG9yIHBhbGV0dGUgaW5wdXRzIGFyZSBmaWxsZWQgYWxvbmcgd2l0aCB0aGUgc3RhdGUgaW5wdXQsIHRoZWlyIHZhbHVlcyB3aWxsIGhhdmUgdGhlIHByaW9yaXR5IG92ZXJcblx0ICogc3RhdGUgKHNvIHNldHRpbmcgc3RhdGUgdG8gc3VjY2VzcyBhbmQgcGFsZXR0ZSB0byB3YXJuaW5nIHdpbGwgbWFrZSB0aGUgcGFsZXR0ZSB3YXJuaW5nKVxuXHQgKi9cblx0c2V0IHN0YXRlKHN0YXRlOiBDYWxsb3V0U3RhdGUpIHtcblx0XHRjb25zdCB7IGljb24sIHBhbGV0dGUgfSA9IENhbGxvdXRTdGF0ZU1hcFtzdGF0ZV07XG5cdFx0aWYgKHRoaXMucGFsZXR0ZSA9PT0gJ25vbmUnKSB7XG5cdFx0XHR0aGlzLnBhbGV0dGUgPSBwYWxldHRlO1xuXHRcdH1cblx0XHRpZiAoIXRoaXMuaWNvbikge1xuXHRcdFx0dGhpcy5pY29uID0gaWNvbjtcblx0XHR9XG5cdH1cblxuXHRASW5wdXQoeyB0cmFuc2Zvcm06IGJvb2xlYW5BdHRyaWJ1dGUgfSlcblx0LyoqXG5cdCAqIElzIHRoZSBjYWxsb3V0IHJlbW92ZWQ/IFdvcmtzIHdpdGggdHdvIHdheSBiaW5kaW5nIHRvby5cblx0ICovXG5cdHJlbW92ZWQgPSBmYWxzZTtcblxuXHRASG9zdEJpbmRpbmcoJ2F0dHIuaGlkZGVuJylcblx0Z2V0IGhpZGRlbkF0dHIoKTogJ2hpZGRlbicgfCBudWxsIHtcblx0XHRyZXR1cm4gdGhpcy5yZW1vdmVkID8gJ2hpZGRlbicgOiBudWxsO1xuXHR9XG5cblx0QE91dHB1dCgpXG5cdHJlbW92ZWRDaGFuZ2U6IEV2ZW50RW1pdHRlcjxib29sZWFuPiA9IG5ldyBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4oKTtcblxuXHRwdWJsaWMgaW50bCA9IGdldEludGwoTFVfQ0FMTE9VVF9UUkFOU0xBVElPTlMpO1xufVxuIiwiPGRpdiBjbGFzcz1cImNhbGxvdXQgcGFsZXR0ZS17e3BhbGV0dGV9fSBtb2Qte3tzaXplfX1cIiAqbmdJZj1cIiFyZW1vdmVkXCI+XG5cdDxkaXYgY2xhc3M9XCJjYWxsb3V0LWljb25cIiAqbmdJZj1cImljb25cIj5cblx0XHQ8c3BhbiBhcmlhLWhpZGRlbj1cInRydWVcIiBjbGFzcz1cImx1Y2NhLWljb24gaWNvbi17e2ljb259fVwiPjwvc3Bhbj5cblx0PC9kaXY+XG5cdDxkaXYgY2xhc3M9XCJjYWxsb3V0LWNvbnRlbnRcIj5cblx0XHQ8c3Ryb25nIGNsYXNzPVwiY2FsbG91dC1jb250ZW50LXRpdGxlXCIgKm5nSWY9XCJoZWFkaW5nXCI+XG5cdFx0XHQ8bmctY29udGFpbmVyICpsdVBvcnRhbD1cImhlYWRpbmdcIj48L25nLWNvbnRhaW5lcj5cblx0XHQ8L3N0cm9uZz5cblx0XHQ8ZGl2IGNsYXNzPVwiY2FsbG91dC1jb250ZW50LWRlc2NyaXB0aW9uXCI+XG5cdFx0XHQ8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG5cdFx0PC9kaXY+XG5cdDwvZGl2PlxuXHQ8YnV0dG9uICpuZ0lmPVwicmVtb3ZhYmxlXCIgdHlwZT1cImJ1dHRvblwiIGNsYXNzPVwiY2FsbG91dC1raWxsXCIgKGNsaWNrKT1cInJlbW92ZWQgPSB0cnVlOyByZW1vdmVkQ2hhbmdlLmVtaXQodHJ1ZSlcIj5cblx0XHQ8c3BhbiBjbGFzcz1cInUtbWFza1wiPnt7IGludGwuY2xvc2UgfX08L3NwYW4+XG5cdDwvYnV0dG9uPlxuPC9kaXY+XG4iXX0=
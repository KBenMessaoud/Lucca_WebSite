import { booleanAttribute, Component, Input } from '@angular/core';
import { FormFieldComponent, InputDirective } from '@lucca-front/ng/form-field';
import { AbstractFieldComponent } from '../abstract-field-component';
import { NoopValueAccessorDirective } from '../noop-value-accessor.directive';
import { ReactiveFormsModule, Validators } from '@angular/forms';
import * as i0 from "@angular/core";
import * as i1 from "../noop-value-accessor.directive";
import * as i2 from "@angular/forms";
class SwitchfieldComponent extends AbstractFieldComponent {
    constructor() {
        super(...arguments);
        this.hiddenLabel = false;
    }
    get required() {
        return this.ngControl.control.hasValidator(Validators.requiredTrue);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: SwitchfieldComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.3", type: SwitchfieldComponent, isStandalone: true, selector: "lu-switchfield", inputs: { label: "label", hiddenLabel: ["hiddenLabel", "hiddenLabel", booleanAttribute], tooltip: "tooltip", inlineMessage: "inlineMessage", inlineMessageState: "inlineMessageState", size: "size" }, usesInheritance: true, hostDirectives: [{ directive: i1.NoopValueAccessorDirective }], ngImport: i0, template: "<lu-form-field\n\t[label]=\"label\"\n\t[required]=\"required\"\n\t[hiddenLabel]=\"hiddenLabel\"\n\t[inlineMessage]=\"inlineMessage\"\n\t[inlineMessageState]=\"inlineMessageState\"\n\t[size]=\"size\"\n\t[invalid]=\"ngControl.control.touched && ngControl.control.invalid\"\n\t[tooltip]=\"tooltip\"\n\tlayout=\"checkbox\"\n>\n\t<span class=\"switchField\">\n\t\t<input luInput type=\"checkbox\" class=\"switchField-input\" [formControl]=\"ngControl.control\" />\n\t\t<span class=\"switchField-icon\" aria-hidden=\"true\"><span class=\"switchField-icon-check\"></span></span>\n\t</span>\n</lu-form-field>\n", dependencies: [{ kind: "component", type: FormFieldComponent, selector: "lu-form-field", inputs: ["label", "hiddenLabel", "tooltip", "required", "invalid", "inlineMessage", "inlineMessageState", "size", "layout"] }, { kind: "ngmodule", type: ReactiveFormsModule }, { kind: "directive", type: i2.CheckboxControlValueAccessor, selector: "input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]" }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "directive", type: InputDirective, selector: "[luInput]" }] }); }
}
export { SwitchfieldComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: SwitchfieldComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lu-switchfield', standalone: true, imports: [FormFieldComponent, ReactiveFormsModule, InputDirective], hostDirectives: [NoopValueAccessorDirective], template: "<lu-form-field\n\t[label]=\"label\"\n\t[required]=\"required\"\n\t[hiddenLabel]=\"hiddenLabel\"\n\t[inlineMessage]=\"inlineMessage\"\n\t[inlineMessageState]=\"inlineMessageState\"\n\t[size]=\"size\"\n\t[invalid]=\"ngControl.control.touched && ngControl.control.invalid\"\n\t[tooltip]=\"tooltip\"\n\tlayout=\"checkbox\"\n>\n\t<span class=\"switchField\">\n\t\t<input luInput type=\"checkbox\" class=\"switchField-input\" [formControl]=\"ngControl.control\" />\n\t\t<span class=\"switchField-icon\" aria-hidden=\"true\"><span class=\"switchField-icon-check\"></span></span>\n\t</span>\n</lu-form-field>\n" }]
        }], propDecorators: { label: [{
                type: Input,
                args: [{ required: true }]
            }], hiddenLabel: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], tooltip: [{
                type: Input
            }], inlineMessage: [{
                type: Input
            }], inlineMessageState: [{
                type: Input
            }], size: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3dpdGNoZmllbGQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvbmcvZm9ybXMvc3dpdGNoZmllbGQvc3dpdGNoZmllbGQuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvbmcvZm9ybXMvc3dpdGNoZmllbGQvc3dpdGNoZmllbGQuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGdCQUFnQixFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbkUsT0FBTyxFQUFFLGtCQUFrQixFQUFpQixjQUFjLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUMvRixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUNyRSxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUM5RSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsVUFBVSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7Ozs7QUFJakUsTUFPYSxvQkFBcUIsU0FBUSxzQkFBc0I7SUFQaEU7O1FBWUMsZ0JBQVcsR0FBRyxLQUFLLENBQUM7S0FpQnBCO0lBSEEsSUFBYSxRQUFRO1FBQ3BCLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUNyRSxDQUFDOzhHQXJCVyxvQkFBb0I7a0dBQXBCLG9CQUFvQix3SEFJWixnQkFBZ0IsZ09DbkJyQyw0bEJBZ0JBLDRDRExXLGtCQUFrQixzTEFBRSxtQkFBbUIsMmVBQUUsY0FBYzs7U0FJckQsb0JBQW9COzJGQUFwQixvQkFBb0I7a0JBUGhDLFNBQVM7K0JBQ0MsZ0JBQWdCLGNBQ2QsSUFBSSxXQUNQLENBQUMsa0JBQWtCLEVBQUUsbUJBQW1CLEVBQUUsY0FBYyxDQUFDLGtCQUVsRCxDQUFDLDBCQUEwQixDQUFDOzhCQUk1QyxLQUFLO3NCQURKLEtBQUs7dUJBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFO2dCQUl6QixXQUFXO3NCQURWLEtBQUs7dUJBQUMsRUFBRSxTQUFTLEVBQUUsZ0JBQWdCLEVBQUU7Z0JBSXRDLE9BQU87c0JBRE4sS0FBSztnQkFJTixhQUFhO3NCQURaLEtBQUs7Z0JBSU4sa0JBQWtCO3NCQURqQixLQUFLO2dCQUlOLElBQUk7c0JBREgsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJvb2xlYW5BdHRyaWJ1dGUsIENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1GaWVsZENvbXBvbmVudCwgRm9ybUZpZWxkU2l6ZSwgSW5wdXREaXJlY3RpdmUgfSBmcm9tICdAbHVjY2EtZnJvbnQvbmcvZm9ybS1maWVsZCc7XG5pbXBvcnQgeyBBYnN0cmFjdEZpZWxkQ29tcG9uZW50IH0gZnJvbSAnLi4vYWJzdHJhY3QtZmllbGQtY29tcG9uZW50JztcbmltcG9ydCB7IE5vb3BWYWx1ZUFjY2Vzc29yRGlyZWN0aXZlIH0gZnJvbSAnLi4vbm9vcC12YWx1ZS1hY2Nlc3Nvci5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgUmVhY3RpdmVGb3Jtc01vZHVsZSwgVmFsaWRhdG9ycyB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IFNhZmVIdG1sIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XG5pbXBvcnQgeyBJbmxpbmVNZXNzYWdlU3RhdGUgfSBmcm9tICdAbHVjY2EtZnJvbnQvbmcvaW5saW5lLW1lc3NhZ2UnO1xuXG5AQ29tcG9uZW50KHtcblx0c2VsZWN0b3I6ICdsdS1zd2l0Y2hmaWVsZCcsXG5cdHN0YW5kYWxvbmU6IHRydWUsXG5cdGltcG9ydHM6IFtGb3JtRmllbGRDb21wb25lbnQsIFJlYWN0aXZlRm9ybXNNb2R1bGUsIElucHV0RGlyZWN0aXZlXSxcblx0dGVtcGxhdGVVcmw6ICcuL3N3aXRjaGZpZWxkLmNvbXBvbmVudC5odG1sJyxcblx0aG9zdERpcmVjdGl2ZXM6IFtOb29wVmFsdWVBY2Nlc3NvckRpcmVjdGl2ZV0sXG59KVxuZXhwb3J0IGNsYXNzIFN3aXRjaGZpZWxkQ29tcG9uZW50IGV4dGVuZHMgQWJzdHJhY3RGaWVsZENvbXBvbmVudCB7XG5cdEBJbnB1dCh7IHJlcXVpcmVkOiB0cnVlIH0pXG5cdGxhYmVsOiBzdHJpbmc7XG5cblx0QElucHV0KHsgdHJhbnNmb3JtOiBib29sZWFuQXR0cmlidXRlIH0pXG5cdGhpZGRlbkxhYmVsID0gZmFsc2U7XG5cblx0QElucHV0KClcblx0dG9vbHRpcDogc3RyaW5nIHwgU2FmZUh0bWw7XG5cblx0QElucHV0KClcblx0aW5saW5lTWVzc2FnZTogc3RyaW5nO1xuXG5cdEBJbnB1dCgpXG5cdGlubGluZU1lc3NhZ2VTdGF0ZTogSW5saW5lTWVzc2FnZVN0YXRlO1xuXG5cdEBJbnB1dCgpXG5cdHNpemU6IEZvcm1GaWVsZFNpemU7XG5cblx0b3ZlcnJpZGUgZ2V0IHJlcXVpcmVkKCk6IGJvb2xlYW4ge1xuXHRcdHJldHVybiB0aGlzLm5nQ29udHJvbC5jb250cm9sLmhhc1ZhbGlkYXRvcihWYWxpZGF0b3JzLnJlcXVpcmVkVHJ1ZSk7XG5cdH1cbn1cbiIsIjxsdS1mb3JtLWZpZWxkXG5cdFtsYWJlbF09XCJsYWJlbFwiXG5cdFtyZXF1aXJlZF09XCJyZXF1aXJlZFwiXG5cdFtoaWRkZW5MYWJlbF09XCJoaWRkZW5MYWJlbFwiXG5cdFtpbmxpbmVNZXNzYWdlXT1cImlubGluZU1lc3NhZ2VcIlxuXHRbaW5saW5lTWVzc2FnZVN0YXRlXT1cImlubGluZU1lc3NhZ2VTdGF0ZVwiXG5cdFtzaXplXT1cInNpemVcIlxuXHRbaW52YWxpZF09XCJuZ0NvbnRyb2wuY29udHJvbC50b3VjaGVkICYmIG5nQ29udHJvbC5jb250cm9sLmludmFsaWRcIlxuXHRbdG9vbHRpcF09XCJ0b29sdGlwXCJcblx0bGF5b3V0PVwiY2hlY2tib3hcIlxuPlxuXHQ8c3BhbiBjbGFzcz1cInN3aXRjaEZpZWxkXCI+XG5cdFx0PGlucHV0IGx1SW5wdXQgdHlwZT1cImNoZWNrYm94XCIgY2xhc3M9XCJzd2l0Y2hGaWVsZC1pbnB1dFwiIFtmb3JtQ29udHJvbF09XCJuZ0NvbnRyb2wuY29udHJvbFwiIC8+XG5cdFx0PHNwYW4gY2xhc3M9XCJzd2l0Y2hGaWVsZC1pY29uXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+PHNwYW4gY2xhc3M9XCJzd2l0Y2hGaWVsZC1pY29uLWNoZWNrXCI+PC9zcGFuPjwvc3Bhbj5cblx0PC9zcGFuPlxuPC9sdS1mb3JtLWZpZWxkPlxuIl19
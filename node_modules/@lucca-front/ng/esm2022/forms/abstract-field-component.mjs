import { booleanAttribute, Component, inject } from '@angular/core';
import { injectNgControl } from './inject-ng-control';
import { NG_VALIDATORS, RequiredValidator, Validators } from '@angular/forms';
import * as i0 from "@angular/core";
class AbstractFieldComponent {
    constructor() {
        this.ngControl = injectNgControl();
        this.#ngModelRequiredValidator = inject(NG_VALIDATORS, { optional: true })?.find((v) => v instanceof RequiredValidator);
    }
    #ngModelRequiredValidator;
    get required() {
        return this.ngControl.control.hasValidator(Validators.required) || booleanAttribute(this.#ngModelRequiredValidator.required);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: AbstractFieldComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.3", type: AbstractFieldComponent, isStandalone: true, selector: "ng-component", ngImport: i0, template: '', isInline: true }); }
}
export { AbstractFieldComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: AbstractFieldComponent, decorators: [{
            type: Component,
            args: [{
                    template: '',
                    standalone: true,
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJzdHJhY3QtZmllbGQtY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcGFja2FnZXMvbmcvZm9ybXMvYWJzdHJhY3QtZmllbGQtY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsYUFBYSxFQUFFLGlCQUFpQixFQUFFLFVBQVUsRUFBRSxNQUFNLGdCQUFnQixDQUFDOztBQUU5RSxNQUlhLHNCQUFzQjtJQUpuQztRQUtXLGNBQVMsR0FBRyxlQUFlLEVBQUUsQ0FBQztRQUV4Qyw4QkFBeUIsR0FBeUMsTUFBTSxDQUFDLGFBQWEsRUFBRSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBMEIsRUFBRSxDQUFDLENBQUMsWUFBWSxpQkFBaUIsQ0FBQyxDQUFDO0tBS2pMO0lBTEEseUJBQXlCLENBQXdKO0lBRWpMLElBQUksUUFBUTtRQUNYLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsSUFBSSxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMseUJBQXlCLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDOUgsQ0FBQzs4R0FQVyxzQkFBc0I7a0dBQXRCLHNCQUFzQix3RUFIeEIsRUFBRTs7U0FHQSxzQkFBc0I7MkZBQXRCLHNCQUFzQjtrQkFKbEMsU0FBUzttQkFBQztvQkFDVixRQUFRLEVBQUUsRUFBRTtvQkFDWixVQUFVLEVBQUUsSUFBSTtpQkFDaEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBib29sZWFuQXR0cmlidXRlLCBDb21wb25lbnQsIGluamVjdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgaW5qZWN0TmdDb250cm9sIH0gZnJvbSAnLi9pbmplY3QtbmctY29udHJvbCc7XG5pbXBvcnQgeyBOR19WQUxJREFUT1JTLCBSZXF1aXJlZFZhbGlkYXRvciwgVmFsaWRhdG9ycyB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuQENvbXBvbmVudCh7XG5cdHRlbXBsYXRlOiAnJyxcblx0c3RhbmRhbG9uZTogdHJ1ZSxcbn0pXG5leHBvcnQgY2xhc3MgQWJzdHJhY3RGaWVsZENvbXBvbmVudCB7XG5cdHByb3RlY3RlZCBuZ0NvbnRyb2wgPSBpbmplY3ROZ0NvbnRyb2woKTtcblxuXHQjbmdNb2RlbFJlcXVpcmVkVmFsaWRhdG9yOiBSZXF1aXJlZFZhbGlkYXRvciB8IG51bGwgfCB1bmRlZmluZWQgPSBpbmplY3QoTkdfVkFMSURBVE9SUywgeyBvcHRpb25hbDogdHJ1ZSB9KT8uZmluZCgodik6IHYgaXMgUmVxdWlyZWRWYWxpZGF0b3IgPT4gdiBpbnN0YW5jZW9mIFJlcXVpcmVkVmFsaWRhdG9yKTtcblxuXHRnZXQgcmVxdWlyZWQoKTogYm9vbGVhbiB7XG5cdFx0cmV0dXJuIHRoaXMubmdDb250cm9sLmNvbnRyb2wuaGFzVmFsaWRhdG9yKFZhbGlkYXRvcnMucmVxdWlyZWQpIHx8IGJvb2xlYW5BdHRyaWJ1dGUodGhpcy4jbmdNb2RlbFJlcXVpcmVkVmFsaWRhdG9yLnJlcXVpcmVkKTtcblx0fVxufVxuIl19
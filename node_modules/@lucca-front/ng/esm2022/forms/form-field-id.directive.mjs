import { Directive, HostBinding, inject, Input } from '@angular/core';
import { FormFieldComponent } from '@lucca-front/ng/form-field';
import { filter, take } from 'rxjs/operators';
import * as i0 from "@angular/core";
class FormFieldIdDirective {
    #formFieldComponent;
    #suffix;
    set suffix(suffix) {
        this.#suffix = suffix;
        if (this.#formFieldComponent.ready) {
            this.applyLabelledBy();
        }
    }
    get id() {
        return `${this.#formFieldComponent.id}-${this.#suffix}`;
    }
    constructor() {
        this.#formFieldComponent = inject(FormFieldComponent);
        this.labelledByStrategy = 'append';
        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
        this.#formFieldComponent.ready$.pipe(filter(Boolean), take(1)).subscribe(() => {
            this.applyLabelledBy();
        });
    }
    applyLabelledBy() {
        this.#formFieldComponent.addLabelledBy(`${this.#formFieldComponent.id}-${this.#suffix}`, this.labelledByStrategy === 'prepend');
    }
    ngOnDestroy() {
        this.#formFieldComponent.removeLabelledBy(`${this.#formFieldComponent.id}-${this.#suffix}`);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: FormFieldIdDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.1.3", type: FormFieldIdDirective, isStandalone: true, selector: "[luFormFieldId]", inputs: { suffix: ["luFormFieldId", "suffix"], labelledByStrategy: "labelledByStrategy" }, host: { properties: { "attr.id": "this.id" } }, ngImport: i0 }); }
}
export { FormFieldIdDirective };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: FormFieldIdDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[luFormFieldId]',
                    standalone: true,
                }]
        }], ctorParameters: function () { return []; }, propDecorators: { suffix: [{
                type: Input,
                args: [{
                        required: true,
                        alias: 'luFormFieldId',
                    }]
            }], labelledByStrategy: [{
                type: Input
            }], id: [{
                type: HostBinding,
                args: ['attr.id']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1maWVsZC1pZC5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wYWNrYWdlcy9uZy9mb3Jtcy9mb3JtLWZpZWxkLWlkLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFhLE1BQU0sZUFBZSxDQUFDO0FBQ2pGLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ2hFLE9BQU8sRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7O0FBRTlDLE1BSWEsb0JBQW9CO0lBQ2hDLG1CQUFtQixDQUE4QjtJQUVqRCxPQUFPLENBQVM7SUFFaEIsSUFJSSxNQUFNLENBQUMsTUFBYztRQUN4QixJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztRQUN0QixJQUFJLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLEVBQUU7WUFDbkMsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO1NBQ3ZCO0lBQ0YsQ0FBQztJQUtELElBQ0ksRUFBRTtRQUNMLE9BQU8sR0FBRyxJQUFJLENBQUMsbUJBQW1CLENBQUMsRUFBRSxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUN6RCxDQUFDO0lBRUQ7UUF2QkEsd0JBQW1CLEdBQUcsTUFBTSxDQUFDLGtCQUFrQixDQUFDLENBQUM7UUFnQmpELHVCQUFrQixHQUF5QixRQUFRLENBQUM7UUFRbkQsaUVBQWlFO1FBQ2pFLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsR0FBRyxFQUFFO1lBQzdFLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUN4QixDQUFDLENBQUMsQ0FBQztJQUNKLENBQUM7SUFFTyxlQUFlO1FBQ3RCLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxhQUFhLENBQUMsR0FBRyxJQUFJLENBQUMsbUJBQW1CLENBQUMsRUFBRSxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUUsRUFBRSxJQUFJLENBQUMsa0JBQWtCLEtBQUssU0FBUyxDQUFDLENBQUM7SUFDakksQ0FBQztJQUVELFdBQVc7UUFDVixJQUFJLENBQUMsbUJBQW1CLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxJQUFJLENBQUMsbUJBQW1CLENBQUMsRUFBRSxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO0lBQzdGLENBQUM7OEdBckNXLG9CQUFvQjtrR0FBcEIsb0JBQW9COztTQUFwQixvQkFBb0I7MkZBQXBCLG9CQUFvQjtrQkFKaEMsU0FBUzttQkFBQztvQkFDVixRQUFRLEVBQUUsaUJBQWlCO29CQUMzQixVQUFVLEVBQUUsSUFBSTtpQkFDaEI7MEVBVUksTUFBTTtzQkFKVCxLQUFLO3VCQUFDO3dCQUNOLFFBQVEsRUFBRSxJQUFJO3dCQUNkLEtBQUssRUFBRSxlQUFlO3FCQUN0QjtnQkFTRCxrQkFBa0I7c0JBRGpCLEtBQUs7Z0JBSUYsRUFBRTtzQkFETCxXQUFXO3VCQUFDLFNBQVMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEhvc3RCaW5kaW5nLCBpbmplY3QsIElucHV0LCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1GaWVsZENvbXBvbmVudCB9IGZyb20gJ0BsdWNjYS1mcm9udC9uZy9mb3JtLWZpZWxkJztcbmltcG9ydCB7IGZpbHRlciwgdGFrZSB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuQERpcmVjdGl2ZSh7XG5cdHNlbGVjdG9yOiAnW2x1Rm9ybUZpZWxkSWRdJyxcblx0c3RhbmRhbG9uZTogdHJ1ZSxcbn0pXG5leHBvcnQgY2xhc3MgRm9ybUZpZWxkSWREaXJlY3RpdmUgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xuXHQjZm9ybUZpZWxkQ29tcG9uZW50ID0gaW5qZWN0KEZvcm1GaWVsZENvbXBvbmVudCk7XG5cblx0I3N1ZmZpeDogc3RyaW5nO1xuXG5cdEBJbnB1dCh7XG5cdFx0cmVxdWlyZWQ6IHRydWUsXG5cdFx0YWxpYXM6ICdsdUZvcm1GaWVsZElkJyxcblx0fSlcblx0c2V0IHN1ZmZpeChzdWZmaXg6IHN0cmluZykge1xuXHRcdHRoaXMuI3N1ZmZpeCA9IHN1ZmZpeDtcblx0XHRpZiAodGhpcy4jZm9ybUZpZWxkQ29tcG9uZW50LnJlYWR5KSB7XG5cdFx0XHR0aGlzLmFwcGx5TGFiZWxsZWRCeSgpO1xuXHRcdH1cblx0fVxuXG5cdEBJbnB1dCgpXG5cdGxhYmVsbGVkQnlTdHJhdGVneTogJ3ByZXBlbmQnIHwgJ2FwcGVuZCcgPSAnYXBwZW5kJztcblxuXHRASG9zdEJpbmRpbmcoJ2F0dHIuaWQnKVxuXHRnZXQgaWQoKTogc3RyaW5nIHtcblx0XHRyZXR1cm4gYCR7dGhpcy4jZm9ybUZpZWxkQ29tcG9uZW50LmlkfS0ke3RoaXMuI3N1ZmZpeH1gO1xuXHR9XG5cblx0Y29uc3RydWN0b3IoKSB7XG5cdFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtYXJndW1lbnRcblx0XHR0aGlzLiNmb3JtRmllbGRDb21wb25lbnQucmVhZHkkLnBpcGUoZmlsdGVyKEJvb2xlYW4pLCB0YWtlKDEpKS5zdWJzY3JpYmUoKCkgPT4ge1xuXHRcdFx0dGhpcy5hcHBseUxhYmVsbGVkQnkoKTtcblx0XHR9KTtcblx0fVxuXG5cdHByaXZhdGUgYXBwbHlMYWJlbGxlZEJ5KCk6IHZvaWQge1xuXHRcdHRoaXMuI2Zvcm1GaWVsZENvbXBvbmVudC5hZGRMYWJlbGxlZEJ5KGAke3RoaXMuI2Zvcm1GaWVsZENvbXBvbmVudC5pZH0tJHt0aGlzLiNzdWZmaXh9YCwgdGhpcy5sYWJlbGxlZEJ5U3RyYXRlZ3kgPT09ICdwcmVwZW5kJyk7XG5cdH1cblxuXHRuZ09uRGVzdHJveSgpOiB2b2lkIHtcblx0XHR0aGlzLiNmb3JtRmllbGRDb21wb25lbnQucmVtb3ZlTGFiZWxsZWRCeShgJHt0aGlzLiNmb3JtRmllbGRDb21wb25lbnQuaWR9LSR7dGhpcy4jc3VmZml4fWApO1xuXHR9XG59XG4iXX0=
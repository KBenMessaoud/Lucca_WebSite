//Source: https://netbasal.com/forwarding-form-controls-to-custom-control-components-in-angular-701e8406cc55
// Heavily modified to handle ngModel properly
import { FormControlDirective, FormControlName, NgControl, NgModel } from '@angular/forms';
import { DestroyRef, inject } from '@angular/core';
import { takeUntilDestroyed } from '@angular/core/rxjs-interop';
export function injectNgControl() {
    const ngControl = inject(NgControl, { self: true, optional: true });
    if (!ngControl) {
        throw new Error('NgControl not found');
    }
    if (ngControl instanceof NgModel) {
        const destroyRef = inject(DestroyRef);
        ngControl.control.valueChanges.pipe(takeUntilDestroyed(destroyRef)).subscribe((value) => {
            if (ngControl.model !== value || ngControl.viewModel !== value) {
                ngControl.viewToModelUpdate(value);
            }
        });
        return ngControl;
    }
    if (ngControl instanceof FormControlDirective || ngControl instanceof FormControlName) {
        return ngControl;
    }
    throw new Error(`NgControl is not an instance of FormControlDirective, FormControlName or NgModel`);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5qZWN0LW5nLWNvbnRyb2wuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wYWNrYWdlcy9uZy9mb3Jtcy9pbmplY3QtbmctY29udHJvbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw0R0FBNEc7QUFDNUcsOENBQThDO0FBQzlDLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxlQUFlLEVBQUUsU0FBUyxFQUFFLE9BQU8sRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzNGLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25ELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRWhFLE1BQU0sVUFBVSxlQUFlO0lBQzlCLE1BQU0sU0FBUyxHQUFHLE1BQU0sQ0FBQyxTQUFTLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBRXBFLElBQUksQ0FBQyxTQUFTLEVBQUU7UUFDZixNQUFNLElBQUksS0FBSyxDQUFDLHFCQUFxQixDQUFDLENBQUM7S0FDdkM7SUFFRCxJQUFJLFNBQVMsWUFBWSxPQUFPLEVBQUU7UUFDakMsTUFBTSxVQUFVLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ3RDLFNBQVMsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFO1lBQ3ZGLElBQUksU0FBUyxDQUFDLEtBQUssS0FBSyxLQUFLLElBQUksU0FBUyxDQUFDLFNBQVMsS0FBSyxLQUFLLEVBQUU7Z0JBQy9ELFNBQVMsQ0FBQyxpQkFBaUIsQ0FBQyxLQUFLLENBQUMsQ0FBQzthQUNuQztRQUNGLENBQUMsQ0FBQyxDQUFDO1FBQ0gsT0FBTyxTQUFTLENBQUM7S0FDakI7SUFFRCxJQUFJLFNBQVMsWUFBWSxvQkFBb0IsSUFBSSxTQUFTLFlBQVksZUFBZSxFQUFFO1FBQ3RGLE9BQU8sU0FBUyxDQUFDO0tBQ2pCO0lBRUQsTUFBTSxJQUFJLEtBQUssQ0FBQyxrRkFBa0YsQ0FBQyxDQUFDO0FBQ3JHLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvL1NvdXJjZTogaHR0cHM6Ly9uZXRiYXNhbC5jb20vZm9yd2FyZGluZy1mb3JtLWNvbnRyb2xzLXRvLWN1c3RvbS1jb250cm9sLWNvbXBvbmVudHMtaW4tYW5ndWxhci03MDFlODQwNmNjNTVcbi8vIEhlYXZpbHkgbW9kaWZpZWQgdG8gaGFuZGxlIG5nTW9kZWwgcHJvcGVybHlcbmltcG9ydCB7IEZvcm1Db250cm9sRGlyZWN0aXZlLCBGb3JtQ29udHJvbE5hbWUsIE5nQ29udHJvbCwgTmdNb2RlbCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IERlc3Ryb3lSZWYsIGluamVjdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgdGFrZVVudGlsRGVzdHJveWVkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZS9yeGpzLWludGVyb3AnO1xuXG5leHBvcnQgZnVuY3Rpb24gaW5qZWN0TmdDb250cm9sKCkge1xuXHRjb25zdCBuZ0NvbnRyb2wgPSBpbmplY3QoTmdDb250cm9sLCB7IHNlbGY6IHRydWUsIG9wdGlvbmFsOiB0cnVlIH0pO1xuXG5cdGlmICghbmdDb250cm9sKSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKCdOZ0NvbnRyb2wgbm90IGZvdW5kJyk7XG5cdH1cblxuXHRpZiAobmdDb250cm9sIGluc3RhbmNlb2YgTmdNb2RlbCkge1xuXHRcdGNvbnN0IGRlc3Ryb3lSZWYgPSBpbmplY3QoRGVzdHJveVJlZik7XG5cdFx0bmdDb250cm9sLmNvbnRyb2wudmFsdWVDaGFuZ2VzLnBpcGUodGFrZVVudGlsRGVzdHJveWVkKGRlc3Ryb3lSZWYpKS5zdWJzY3JpYmUoKHZhbHVlKSA9PiB7XG5cdFx0XHRpZiAobmdDb250cm9sLm1vZGVsICE9PSB2YWx1ZSB8fCBuZ0NvbnRyb2wudmlld01vZGVsICE9PSB2YWx1ZSkge1xuXHRcdFx0XHRuZ0NvbnRyb2wudmlld1RvTW9kZWxVcGRhdGUodmFsdWUpO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHRcdHJldHVybiBuZ0NvbnRyb2w7XG5cdH1cblxuXHRpZiAobmdDb250cm9sIGluc3RhbmNlb2YgRm9ybUNvbnRyb2xEaXJlY3RpdmUgfHwgbmdDb250cm9sIGluc3RhbmNlb2YgRm9ybUNvbnRyb2xOYW1lKSB7XG5cdFx0cmV0dXJuIG5nQ29udHJvbDtcblx0fVxuXG5cdHRocm93IG5ldyBFcnJvcihgTmdDb250cm9sIGlzIG5vdCBhbiBpbnN0YW5jZSBvZiBGb3JtQ29udHJvbERpcmVjdGl2ZSwgRm9ybUNvbnRyb2xOYW1lIG9yIE5nTW9kZWxgKTtcbn1cbiJdfQ==
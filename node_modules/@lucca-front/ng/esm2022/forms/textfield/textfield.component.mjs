import { booleanAttribute, Component, Input, ViewChild } from '@angular/core';
import { ReactiveFormsModule } from '@angular/forms';
import { FormFieldComponent, InputDirective } from '@lucca-front/ng/form-field';
import { NoopValueAccessorDirective } from '../noop-value-accessor.directive';
import { NgIf, NgTemplateOutlet } from '@angular/common';
import { FormFieldIdDirective } from '../form-field-id.directive';
import { AbstractFieldComponent } from '../abstract-field-component';
import { getIntl } from '@lucca-front/ng/core';
import { LU_TEXTFIELD_TRANSLATIONS } from './textfield.translate';
import * as i0 from "@angular/core";
import * as i1 from "../noop-value-accessor.directive";
import * as i2 from "@angular/forms";
class TextfieldComponent extends AbstractFieldComponent {
    constructor() {
        super(...arguments);
        this.hiddenLabel = false;
        this.hasClearer = false;
        this.hasSearchIcon = false;
        this.type = 'text';
        this.searchIcon = 'search';
        this.intl = getIntl(LU_TEXTFIELD_TRANSLATIONS);
    }
    clearValue() {
        this.ngControl.reset();
        this.inputElementRef.nativeElement.focus();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: TextfieldComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.3", type: TextfieldComponent, isStandalone: true, selector: "lu-textfield", inputs: { label: "label", placeholder: "placeholder", hiddenLabel: ["hiddenLabel", "hiddenLabel", booleanAttribute], tooltip: "tooltip", inlineMessage: "inlineMessage", inlineMessageState: "inlineMessageState", size: "size", hasClearer: ["hasClearer", "hasClearer", booleanAttribute], hasSearchIcon: ["hasSearchIcon", "hasSearchIcon", booleanAttribute], prefix: "prefix", suffix: "suffix", type: "type", searchIcon: "searchIcon" }, viewQueries: [{ propertyName: "inputElementRef", first: true, predicate: ["inputElement"], descendants: true, static: true }], usesInheritance: true, hostDirectives: [{ directive: i1.NoopValueAccessorDirective }], ngImport: i0, template: "<lu-form-field\n\t[label]=\"label\"\n\t[required]=\"required\"\n\t[hiddenLabel]=\"hiddenLabel\"\n\t[inlineMessage]=\"inlineMessage\"\n\t[inlineMessageState]=\"inlineMessageState\"\n\t[size]=\"size\"\n\t[invalid]=\"ngControl.control.touched && ngControl.control.invalid\"\n\t[tooltip]=\"tooltip\"\n>\n\t<ng-template #textfieldAddon let-addon=\"addon\" let-type=\"type\">\n\t\t<span class=\"textField-{{type}}\" luFormFieldId=\"{{type}}\" *ngIf=\"addon.content\">\n\t\t\t<span class=\"textField-label-{{type}}-item\" [attr.aria-label]=\"addon.ariaLabel\">{{addon.content}}</span>\n\t\t</span>\n\t\t<span class=\"textField-{{type}}\" luFormFieldId=\"{{type}}\" *ngIf=\"addon.icon\">\n\t\t\t<span class=\"textField-label-{{type}}-item\" [attr.aria-label]=\"addon.ariaLabel\"\n\t\t\t\t><span class=\"lucca-icon icon-{{addon.icon}}\"></span\n\t\t\t></span>\n\t\t</span>\n\t</ng-template>\n\n\t<ng-container *ngIf=\"prefix\">\n\t\t<ng-container\n\t\t\t*ngTemplateOutlet=\"textfieldAddon; context:{\n\t\t\ttype: 'prefix',\n\t\t\taddon: prefix\n     }\"\n\t\t>\n\t\t</ng-container>\n\t</ng-container>\n\t<ng-container *ngIf=\"suffix\">\n\t\t<ng-container\n\t\t\t*ngTemplateOutlet=\"textfieldAddon; context:{\n\t\t\ttype: 'suffix',\n\t\t\taddon: suffix\n     }\"\n\t\t>\n\t\t</ng-container>\n\t</ng-container>\n\t<div class=\"textField-input\">\n\t\t<input luInput [type]=\"type\" [placeholder]=\"placeholder\" [formControl]=\"ngControl.control\" #inputElement />\n\t\t<div class=\"textField-input-affix\">\n\t\t\t<button class=\"textField-input-affix-clear clear\" (click)=\"clearValue()\" *ngIf=\"hasClearer && inputElement.value\">\n\t\t\t\t<span aria-hidden=\"true\" class=\"lucca-icon icon-close\"></span>\n\t\t\t\t<span class=\"u-mask\">{{intl.clear}}</span>\n\t\t\t</button>\n\t\t\t<span aria-hidden=\"true\" class=\"textField-input-affix-icon lucca-icon icon-{{searchIcon}}\" *ngIf=\"hasSearchIcon\"></span>\n\t\t</div>\n\t</div>\n</lu-form-field>\n", dependencies: [{ kind: "component", type: FormFieldComponent, selector: "lu-form-field", inputs: ["label", "hiddenLabel", "tooltip", "required", "invalid", "inlineMessage", "inlineMessageState", "size", "layout"] }, { kind: "directive", type: InputDirective, selector: "[luInput]" }, { kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "ngmodule", type: ReactiveFormsModule }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "directive", type: FormFieldIdDirective, selector: "[luFormFieldId]", inputs: ["luFormFieldId", "labelledByStrategy"] }, { kind: "directive", type: NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }] }); }
}
export { TextfieldComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: TextfieldComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lu-textfield', standalone: true, imports: [FormFieldComponent, InputDirective, NgIf, ReactiveFormsModule, FormFieldIdDirective, NgTemplateOutlet], hostDirectives: [NoopValueAccessorDirective], template: "<lu-form-field\n\t[label]=\"label\"\n\t[required]=\"required\"\n\t[hiddenLabel]=\"hiddenLabel\"\n\t[inlineMessage]=\"inlineMessage\"\n\t[inlineMessageState]=\"inlineMessageState\"\n\t[size]=\"size\"\n\t[invalid]=\"ngControl.control.touched && ngControl.control.invalid\"\n\t[tooltip]=\"tooltip\"\n>\n\t<ng-template #textfieldAddon let-addon=\"addon\" let-type=\"type\">\n\t\t<span class=\"textField-{{type}}\" luFormFieldId=\"{{type}}\" *ngIf=\"addon.content\">\n\t\t\t<span class=\"textField-label-{{type}}-item\" [attr.aria-label]=\"addon.ariaLabel\">{{addon.content}}</span>\n\t\t</span>\n\t\t<span class=\"textField-{{type}}\" luFormFieldId=\"{{type}}\" *ngIf=\"addon.icon\">\n\t\t\t<span class=\"textField-label-{{type}}-item\" [attr.aria-label]=\"addon.ariaLabel\"\n\t\t\t\t><span class=\"lucca-icon icon-{{addon.icon}}\"></span\n\t\t\t></span>\n\t\t</span>\n\t</ng-template>\n\n\t<ng-container *ngIf=\"prefix\">\n\t\t<ng-container\n\t\t\t*ngTemplateOutlet=\"textfieldAddon; context:{\n\t\t\ttype: 'prefix',\n\t\t\taddon: prefix\n     }\"\n\t\t>\n\t\t</ng-container>\n\t</ng-container>\n\t<ng-container *ngIf=\"suffix\">\n\t\t<ng-container\n\t\t\t*ngTemplateOutlet=\"textfieldAddon; context:{\n\t\t\ttype: 'suffix',\n\t\t\taddon: suffix\n     }\"\n\t\t>\n\t\t</ng-container>\n\t</ng-container>\n\t<div class=\"textField-input\">\n\t\t<input luInput [type]=\"type\" [placeholder]=\"placeholder\" [formControl]=\"ngControl.control\" #inputElement />\n\t\t<div class=\"textField-input-affix\">\n\t\t\t<button class=\"textField-input-affix-clear clear\" (click)=\"clearValue()\" *ngIf=\"hasClearer && inputElement.value\">\n\t\t\t\t<span aria-hidden=\"true\" class=\"lucca-icon icon-close\"></span>\n\t\t\t\t<span class=\"u-mask\">{{intl.clear}}</span>\n\t\t\t</button>\n\t\t\t<span aria-hidden=\"true\" class=\"textField-input-affix-icon lucca-icon icon-{{searchIcon}}\" *ngIf=\"hasSearchIcon\"></span>\n\t\t</div>\n\t</div>\n</lu-form-field>\n" }]
        }], propDecorators: { label: [{
                type: Input,
                args: [{ required: true }]
            }], placeholder: [{
                type: Input
            }], hiddenLabel: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], tooltip: [{
                type: Input
            }], inlineMessage: [{
                type: Input
            }], inlineMessageState: [{
                type: Input
            }], size: [{
                type: Input
            }], hasClearer: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], hasSearchIcon: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], inputElementRef: [{
                type: ViewChild,
                args: ['inputElement', { static: true }]
            }], prefix: [{
                type: Input
            }], suffix: [{
                type: Input
            }], type: [{
                type: Input
            }], 
        /**
         * Search icon to use for when `hasSearchIcon` is true, defaults to 'search'
         */
        searchIcon: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,
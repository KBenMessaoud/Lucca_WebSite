import { booleanAttribute, Component, Input } from '@angular/core';
import { FormFieldComponent, InputDirective } from '@lucca-front/ng/form-field';
import { AbstractFieldComponent } from '../abstract-field-component';
import { NoopValueAccessorDirective } from '../noop-value-accessor.directive';
import { ReactiveFormsModule, Validators } from '@angular/forms';
import { NgSwitchCase, NgTemplateOutlet } from '@angular/common';
import * as i0 from "@angular/core";
import * as i1 from "../noop-value-accessor.directive";
import * as i2 from "@angular/forms";
class CheckboxfieldComponent extends AbstractFieldComponent {
    constructor() {
        super(...arguments);
        this.hiddenLabel = false;
    }
    get required() {
        return this.ngControl.control.hasValidator(Validators.requiredTrue);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: CheckboxfieldComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.3", type: CheckboxfieldComponent, isStandalone: true, selector: "lu-checkboxfield", inputs: { label: "label", hiddenLabel: ["hiddenLabel", "hiddenLabel", booleanAttribute], tooltip: "tooltip", inlineMessage: "inlineMessage", inlineMessageState: "inlineMessageState", size: "size" }, usesInheritance: true, hostDirectives: [{ directive: i1.NoopValueAccessorDirective }], ngImport: i0, template: "<lu-form-field\n\t[label]=\"label\"\n\t[required]=\"required\"\n\t[hiddenLabel]=\"hiddenLabel\"\n\t[inlineMessage]=\"inlineMessage\"\n\t[inlineMessageState]=\"inlineMessageState\"\n\t[size]=\"size\"\n\t[invalid]=\"ngControl.control.touched && ngControl.control.invalid\"\n\t[tooltip]=\"tooltip\"\n\tlayout=\"checkbox\"\n>\n\t<span class=\"checkboxField\">\n\t\t<input luInput type=\"checkbox\" class=\"checkboxField-input\" [formControl]=\"ngControl.control\" />\n\t\t<span class=\"checkboxField-icon\" aria-hidden=\"true\"><span class=\"checkboxField-icon-check\"></span></span>\n\t</span>\n</lu-form-field>\n", dependencies: [{ kind: "component", type: FormFieldComponent, selector: "lu-form-field", inputs: ["label", "hiddenLabel", "tooltip", "required", "invalid", "inlineMessage", "inlineMessageState", "size", "layout"] }, { kind: "ngmodule", type: ReactiveFormsModule }, { kind: "directive", type: i2.CheckboxControlValueAccessor, selector: "input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]" }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "directive", type: InputDirective, selector: "[luInput]" }] }); }
}
export { CheckboxfieldComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: CheckboxfieldComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lu-checkboxfield', standalone: true, imports: [FormFieldComponent, ReactiveFormsModule, InputDirective, NgSwitchCase, NgTemplateOutlet], hostDirectives: [NoopValueAccessorDirective], template: "<lu-form-field\n\t[label]=\"label\"\n\t[required]=\"required\"\n\t[hiddenLabel]=\"hiddenLabel\"\n\t[inlineMessage]=\"inlineMessage\"\n\t[inlineMessageState]=\"inlineMessageState\"\n\t[size]=\"size\"\n\t[invalid]=\"ngControl.control.touched && ngControl.control.invalid\"\n\t[tooltip]=\"tooltip\"\n\tlayout=\"checkbox\"\n>\n\t<span class=\"checkboxField\">\n\t\t<input luInput type=\"checkbox\" class=\"checkboxField-input\" [formControl]=\"ngControl.control\" />\n\t\t<span class=\"checkboxField-icon\" aria-hidden=\"true\"><span class=\"checkboxField-icon-check\"></span></span>\n\t</span>\n</lu-form-field>\n" }]
        }], propDecorators: { label: [{
                type: Input,
                args: [{ required: true }]
            }], hiddenLabel: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], tooltip: [{
                type: Input
            }], inlineMessage: [{
                type: Input
            }], inlineMessageState: [{
                type: Input
            }], size: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tib3hmaWVsZC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9uZy9mb3Jtcy9jaGVja2JveGZpZWxkL2NoZWNrYm94ZmllbGQuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvbmcvZm9ybXMvY2hlY2tib3hmaWVsZC9jaGVja2JveGZpZWxkLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25FLE9BQU8sRUFBRSxrQkFBa0IsRUFBaUIsY0FBYyxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDL0YsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDckUsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDOUUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLFVBQVUsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBR2pFLE9BQU8sRUFBRSxZQUFZLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7OztBQUVqRSxNQU9hLHNCQUF1QixTQUFRLHNCQUFzQjtJQVBsRTs7UUFZQyxnQkFBVyxHQUFHLEtBQUssQ0FBQztLQWlCcEI7SUFIQSxJQUFhLFFBQVE7UUFDcEIsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ3JFLENBQUM7OEdBckJXLHNCQUFzQjtrR0FBdEIsc0JBQXNCLDBIQUlkLGdCQUFnQixnT0NwQnJDLG9tQkFnQkEsNENESlcsa0JBQWtCLHNMQUFFLG1CQUFtQiwyZUFBRSxjQUFjOztTQUlyRCxzQkFBc0I7MkZBQXRCLHNCQUFzQjtrQkFQbEMsU0FBUzsrQkFDQyxrQkFBa0IsY0FDaEIsSUFBSSxXQUNQLENBQUMsa0JBQWtCLEVBQUUsbUJBQW1CLEVBQUUsY0FBYyxFQUFFLFlBQVksRUFBRSxnQkFBZ0IsQ0FBQyxrQkFFbEYsQ0FBQywwQkFBMEIsQ0FBQzs4QkFJNUMsS0FBSztzQkFESixLQUFLO3VCQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRTtnQkFJekIsV0FBVztzQkFEVixLQUFLO3VCQUFDLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFO2dCQUl0QyxPQUFPO3NCQUROLEtBQUs7Z0JBSU4sYUFBYTtzQkFEWixLQUFLO2dCQUlOLGtCQUFrQjtzQkFEakIsS0FBSztnQkFJTixJQUFJO3NCQURILEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBib29sZWFuQXR0cmlidXRlLCBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtRmllbGRDb21wb25lbnQsIEZvcm1GaWVsZFNpemUsIElucHV0RGlyZWN0aXZlIH0gZnJvbSAnQGx1Y2NhLWZyb250L25nL2Zvcm0tZmllbGQnO1xuaW1wb3J0IHsgQWJzdHJhY3RGaWVsZENvbXBvbmVudCB9IGZyb20gJy4uL2Fic3RyYWN0LWZpZWxkLWNvbXBvbmVudCc7XG5pbXBvcnQgeyBOb29wVmFsdWVBY2Nlc3NvckRpcmVjdGl2ZSB9IGZyb20gJy4uL25vb3AtdmFsdWUtYWNjZXNzb3IuZGlyZWN0aXZlJztcbmltcG9ydCB7IFJlYWN0aXZlRm9ybXNNb2R1bGUsIFZhbGlkYXRvcnMgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBTYWZlSHRtbCB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xuaW1wb3J0IHsgSW5saW5lTWVzc2FnZVN0YXRlIH0gZnJvbSAnQGx1Y2NhLWZyb250L25nL2lubGluZS1tZXNzYWdlJztcbmltcG9ydCB7IE5nU3dpdGNoQ2FzZSwgTmdUZW1wbGF0ZU91dGxldCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogJ2x1LWNoZWNrYm94ZmllbGQnLFxuXHRzdGFuZGFsb25lOiB0cnVlLFxuXHRpbXBvcnRzOiBbRm9ybUZpZWxkQ29tcG9uZW50LCBSZWFjdGl2ZUZvcm1zTW9kdWxlLCBJbnB1dERpcmVjdGl2ZSwgTmdTd2l0Y2hDYXNlLCBOZ1RlbXBsYXRlT3V0bGV0XSxcblx0dGVtcGxhdGVVcmw6ICcuL2NoZWNrYm94ZmllbGQuY29tcG9uZW50Lmh0bWwnLFxuXHRob3N0RGlyZWN0aXZlczogW05vb3BWYWx1ZUFjY2Vzc29yRGlyZWN0aXZlXSxcbn0pXG5leHBvcnQgY2xhc3MgQ2hlY2tib3hmaWVsZENvbXBvbmVudCBleHRlbmRzIEFic3RyYWN0RmllbGRDb21wb25lbnQge1xuXHRASW5wdXQoeyByZXF1aXJlZDogdHJ1ZSB9KVxuXHRsYWJlbDogc3RyaW5nO1xuXG5cdEBJbnB1dCh7IHRyYW5zZm9ybTogYm9vbGVhbkF0dHJpYnV0ZSB9KVxuXHRoaWRkZW5MYWJlbCA9IGZhbHNlO1xuXG5cdEBJbnB1dCgpXG5cdHRvb2x0aXA6IHN0cmluZyB8IFNhZmVIdG1sO1xuXG5cdEBJbnB1dCgpXG5cdGlubGluZU1lc3NhZ2U6IHN0cmluZztcblxuXHRASW5wdXQoKVxuXHRpbmxpbmVNZXNzYWdlU3RhdGU6IElubGluZU1lc3NhZ2VTdGF0ZTtcblxuXHRASW5wdXQoKVxuXHRzaXplOiBGb3JtRmllbGRTaXplO1xuXG5cdG92ZXJyaWRlIGdldCByZXF1aXJlZCgpOiBib29sZWFuIHtcblx0XHRyZXR1cm4gdGhpcy5uZ0NvbnRyb2wuY29udHJvbC5oYXNWYWxpZGF0b3IoVmFsaWRhdG9ycy5yZXF1aXJlZFRydWUpO1xuXHR9XG59XG4iLCI8bHUtZm9ybS1maWVsZFxuXHRbbGFiZWxdPVwibGFiZWxcIlxuXHRbcmVxdWlyZWRdPVwicmVxdWlyZWRcIlxuXHRbaGlkZGVuTGFiZWxdPVwiaGlkZGVuTGFiZWxcIlxuXHRbaW5saW5lTWVzc2FnZV09XCJpbmxpbmVNZXNzYWdlXCJcblx0W2lubGluZU1lc3NhZ2VTdGF0ZV09XCJpbmxpbmVNZXNzYWdlU3RhdGVcIlxuXHRbc2l6ZV09XCJzaXplXCJcblx0W2ludmFsaWRdPVwibmdDb250cm9sLmNvbnRyb2wudG91Y2hlZCAmJiBuZ0NvbnRyb2wuY29udHJvbC5pbnZhbGlkXCJcblx0W3Rvb2x0aXBdPVwidG9vbHRpcFwiXG5cdGxheW91dD1cImNoZWNrYm94XCJcbj5cblx0PHNwYW4gY2xhc3M9XCJjaGVja2JveEZpZWxkXCI+XG5cdFx0PGlucHV0IGx1SW5wdXQgdHlwZT1cImNoZWNrYm94XCIgY2xhc3M9XCJjaGVja2JveEZpZWxkLWlucHV0XCIgW2Zvcm1Db250cm9sXT1cIm5nQ29udHJvbC5jb250cm9sXCIgLz5cblx0XHQ8c3BhbiBjbGFzcz1cImNoZWNrYm94RmllbGQtaWNvblwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjxzcGFuIGNsYXNzPVwiY2hlY2tib3hGaWVsZC1pY29uLWNoZWNrXCI+PC9zcGFuPjwvc3Bhbj5cblx0PC9zcGFuPlxuPC9sdS1mb3JtLWZpZWxkPlxuIl19
import { CommonModule } from '@angular/common';
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { getIntl } from '@lucca-front/ng/core';
import { merge, Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { LU_TOAST_TRANSLATIONS } from './toasts.translate';
import * as i0 from "@angular/core";
import * as i1 from "./toasts.service";
import * as i2 from "@angular/common";
class LuToastsComponent {
    set sources(sources) {
        merge(...sources)
            .pipe(takeUntil(this.destroy$))
            .subscribe((toast) => this.toastsService.addToast(toast));
    }
    constructor(toastsService) {
        this.toastsService = toastsService;
        this.bottom = false;
        this.toasts$ = this.toastsService.toasts$;
        this.destroy$ = new Subject();
        this.intl = getIntl(LU_TOAST_TRANSLATIONS);
        this.iconClassByToastType = {
            Info: 'icon-info',
            Success: 'icon-success',
            Error: 'icon-error',
            Warning: 'icon-warning',
        };
        this.paletteClassByToastType = {
            Info: '',
            Success: 'palette-success',
            Error: 'palette-error',
            Warning: 'palette-warning',
        };
    }
    ngOnDestroy() {
        this.destroy$.next();
        this.destroy$.complete();
    }
    removeToast(toast) {
        this.toastsService.removeToast(toast);
    }
    trackToast(_index, toast) {
        return toast.id;
    }
    isOnlyDismissibleManually(toast) {
        return this.toastsService.isOnlyDismissibleManually(toast);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuToastsComponent, deps: [{ token: i1.LuToastsService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.3", type: LuToastsComponent, isStandalone: true, selector: "lu-toasts", inputs: { bottom: "bottom", sources: "sources" }, ngImport: i0, template: "<div class=\"toasts mod-withCircularGauge\" aria-live=\"polite\" [class.mod-bottom]=\"bottom\">\n\t<div *ngFor=\"let toast of toasts$ | async; trackBy: trackToast\" class=\"toasts-item\" [ngClass]=\"paletteClassByToastType[toast.type]\">\n\t\t<span *ngIf=\"toast.type\" class=\"toast-item-icon lucca-icon\" aria-hidden=\"true\" [ngClass]=\"iconClassByToastType[toast.type]\"></span>\n\t\t<div class=\"toast-item-content\">\n\t\t\t<div *ngIf=\"toast.title\"><strong>{{ toast.title }}</strong></div>\n\t\t\t<div [innerHtml]=\"toast.message\"></div>\n\t\t</div>\n\t\t<button type=\"button\" class=\"toasts-item-kill\" (click)=\"removeToast(toast)\" (animationend)=\"removeToast(toast)\">\n\t\t\t<span class=\"lucca-icon icon-signClose mod-XS\" aria-hidden=\"true\"></span>\n\t\t\t<div class=\"circularGauge\" *ngIf=\"!isOnlyDismissibleManually(toast) && toast.duration > 0\">\n\t\t\t\t<svg viewBox=\"0 0 32 32\">\n\t\t\t\t\t<circle r=\"16\" cx=\"16\" cy=\"16\" [style.animation-duration]=\"toast.duration + 'ms'\" />\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t\t<span class=\"u-mask\">{{ intl.close }}</span>\n\t\t</button>\n\t</div>\n</div>\n", dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "pipe", type: i2.AsyncPipe, name: "async" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { LuToastsComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuToastsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lu-toasts', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [CommonModule], template: "<div class=\"toasts mod-withCircularGauge\" aria-live=\"polite\" [class.mod-bottom]=\"bottom\">\n\t<div *ngFor=\"let toast of toasts$ | async; trackBy: trackToast\" class=\"toasts-item\" [ngClass]=\"paletteClassByToastType[toast.type]\">\n\t\t<span *ngIf=\"toast.type\" class=\"toast-item-icon lucca-icon\" aria-hidden=\"true\" [ngClass]=\"iconClassByToastType[toast.type]\"></span>\n\t\t<div class=\"toast-item-content\">\n\t\t\t<div *ngIf=\"toast.title\"><strong>{{ toast.title }}</strong></div>\n\t\t\t<div [innerHtml]=\"toast.message\"></div>\n\t\t</div>\n\t\t<button type=\"button\" class=\"toasts-item-kill\" (click)=\"removeToast(toast)\" (animationend)=\"removeToast(toast)\">\n\t\t\t<span class=\"lucca-icon icon-signClose mod-XS\" aria-hidden=\"true\"></span>\n\t\t\t<div class=\"circularGauge\" *ngIf=\"!isOnlyDismissibleManually(toast) && toast.duration > 0\">\n\t\t\t\t<svg viewBox=\"0 0 32 32\">\n\t\t\t\t\t<circle r=\"16\" cx=\"16\" cy=\"16\" [style.animation-duration]=\"toast.duration + 'ms'\" />\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t\t<span class=\"u-mask\">{{ intl.close }}</span>\n\t\t</button>\n\t</div>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.LuToastsService }]; }, propDecorators: { bottom: [{
                type: Input
            }], sources: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9hc3RzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3BhY2thZ2VzL25nL3RvYXN0L3RvYXN0cy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi9wYWNrYWdlcy9uZy90b2FzdC90b2FzdHMuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFhLE1BQU0sZUFBZSxDQUFDO0FBQ3JGLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUMvQyxPQUFPLEVBQUUsS0FBSyxFQUFjLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUNsRCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFHM0MsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7Ozs7QUFFM0QsTUFPYSxpQkFBaUI7SUFFN0IsSUFBb0IsT0FBTyxDQUFDLE9BQXdDO1FBQ25FLEtBQUssQ0FBQyxHQUFHLE9BQU8sQ0FBQzthQUNmLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO2FBQzlCLFNBQVMsQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztJQUM1RCxDQUFDO0lBUUQsWUFBb0IsYUFBOEI7UUFBOUIsa0JBQWEsR0FBYixhQUFhLENBQWlCO1FBYmxDLFdBQU0sR0FBRyxLQUFLLENBQUM7UUFPeEIsWUFBTyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDO1FBRXBDLGFBQVEsR0FBRyxJQUFJLE9BQU8sRUFBUSxDQUFDO1FBRWhDLFNBQUksR0FBRyxPQUFPLENBQUMscUJBQXFCLENBQUMsQ0FBQztRQVN0Qyx5QkFBb0IsR0FBZ0M7WUFDMUQsSUFBSSxFQUFFLFdBQVc7WUFDakIsT0FBTyxFQUFFLGNBQWM7WUFDdkIsS0FBSyxFQUFFLFlBQVk7WUFDbkIsT0FBTyxFQUFFLGNBQWM7U0FDdkIsQ0FBQztRQUVLLDRCQUF1QixHQUFnQztZQUM3RCxJQUFJLEVBQUUsRUFBRTtZQUNSLE9BQU8sRUFBRSxpQkFBaUI7WUFDMUIsS0FBSyxFQUFFLGVBQWU7WUFDdEIsT0FBTyxFQUFFLGlCQUFpQjtTQUMxQixDQUFDO0lBbkJtRCxDQUFDO0lBRS9DLFdBQVc7UUFDakIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNyQixJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQzFCLENBQUM7SUFnQk0sV0FBVyxDQUFDLEtBQWM7UUFDaEMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDdkMsQ0FBQztJQUVNLFVBQVUsQ0FBQyxNQUFjLEVBQUUsS0FBYztRQUMvQyxPQUFPLEtBQUssQ0FBQyxFQUFFLENBQUM7SUFDakIsQ0FBQztJQUVNLHlCQUF5QixDQUFDLEtBQWM7UUFDOUMsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLHlCQUF5QixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzVELENBQUM7OEdBN0NXLGlCQUFpQjtrR0FBakIsaUJBQWlCLHVIQ2hCOUIsOG1DQWtCQSwyQ0RKVyxZQUFZOztTQUVWLGlCQUFpQjsyRkFBakIsaUJBQWlCO2tCQVA3QixTQUFTOytCQUNDLFdBQVcsbUJBRUosdUJBQXVCLENBQUMsTUFBTSxjQUNuQyxJQUFJLFdBQ1AsQ0FBQyxZQUFZLENBQUM7c0dBR1AsTUFBTTtzQkFBckIsS0FBSztnQkFDYyxPQUFPO3NCQUExQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0LCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGdldEludGwgfSBmcm9tICdAbHVjY2EtZnJvbnQvbmcvY29yZSc7XG5pbXBvcnQgeyBtZXJnZSwgT2JzZXJ2YWJsZSwgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgdGFrZVVudGlsIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgTHVUb2FzdCwgTHVUb2FzdElucHV0LCBMdVRvYXN0VHlwZSB9IGZyb20gJy4vdG9hc3RzLm1vZGVsJztcbmltcG9ydCB7IEx1VG9hc3RzU2VydmljZSB9IGZyb20gJy4vdG9hc3RzLnNlcnZpY2UnO1xuaW1wb3J0IHsgTFVfVE9BU1RfVFJBTlNMQVRJT05TIH0gZnJvbSAnLi90b2FzdHMudHJhbnNsYXRlJztcblxuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiAnbHUtdG9hc3RzJyxcblx0dGVtcGxhdGVVcmw6ICcuL3RvYXN0cy5jb21wb25lbnQuaHRtbCcsXG5cdGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuXHRzdGFuZGFsb25lOiB0cnVlLFxuXHRpbXBvcnRzOiBbQ29tbW9uTW9kdWxlXSxcbn0pXG5leHBvcnQgY2xhc3MgTHVUb2FzdHNDb21wb25lbnQgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xuXHRASW5wdXQoKSBwdWJsaWMgYm90dG9tID0gZmFsc2U7XG5cdEBJbnB1dCgpIHB1YmxpYyBzZXQgc291cmNlcyhzb3VyY2VzOiBBcnJheTxPYnNlcnZhYmxlPEx1VG9hc3RJbnB1dD4+KSB7XG5cdFx0bWVyZ2UoLi4uc291cmNlcylcblx0XHRcdC5waXBlKHRha2VVbnRpbCh0aGlzLmRlc3Ryb3kkKSlcblx0XHRcdC5zdWJzY3JpYmUoKHRvYXN0KSA9PiB0aGlzLnRvYXN0c1NlcnZpY2UuYWRkVG9hc3QodG9hc3QpKTtcblx0fVxuXG5cdHB1YmxpYyB0b2FzdHMkID0gdGhpcy50b2FzdHNTZXJ2aWNlLnRvYXN0cyQ7XG5cblx0cHJpdmF0ZSBkZXN0cm95JCA9IG5ldyBTdWJqZWN0PHZvaWQ+KCk7XG5cblx0cHVibGljIGludGwgPSBnZXRJbnRsKExVX1RPQVNUX1RSQU5TTEFUSU9OUyk7XG5cblx0Y29uc3RydWN0b3IocHJpdmF0ZSB0b2FzdHNTZXJ2aWNlOiBMdVRvYXN0c1NlcnZpY2UpIHt9XG5cblx0cHVibGljIG5nT25EZXN0cm95KCk6IHZvaWQge1xuXHRcdHRoaXMuZGVzdHJveSQubmV4dCgpO1xuXHRcdHRoaXMuZGVzdHJveSQuY29tcGxldGUoKTtcblx0fVxuXG5cdHB1YmxpYyBpY29uQ2xhc3NCeVRvYXN0VHlwZTogUmVjb3JkPEx1VG9hc3RUeXBlLCBzdHJpbmc+ID0ge1xuXHRcdEluZm86ICdpY29uLWluZm8nLFxuXHRcdFN1Y2Nlc3M6ICdpY29uLXN1Y2Nlc3MnLFxuXHRcdEVycm9yOiAnaWNvbi1lcnJvcicsXG5cdFx0V2FybmluZzogJ2ljb24td2FybmluZycsXG5cdH07XG5cblx0cHVibGljIHBhbGV0dGVDbGFzc0J5VG9hc3RUeXBlOiBSZWNvcmQ8THVUb2FzdFR5cGUsIHN0cmluZz4gPSB7XG5cdFx0SW5mbzogJycsXG5cdFx0U3VjY2VzczogJ3BhbGV0dGUtc3VjY2VzcycsXG5cdFx0RXJyb3I6ICdwYWxldHRlLWVycm9yJyxcblx0XHRXYXJuaW5nOiAncGFsZXR0ZS13YXJuaW5nJyxcblx0fTtcblxuXHRwdWJsaWMgcmVtb3ZlVG9hc3QodG9hc3Q6IEx1VG9hc3QpOiB2b2lkIHtcblx0XHR0aGlzLnRvYXN0c1NlcnZpY2UucmVtb3ZlVG9hc3QodG9hc3QpO1xuXHR9XG5cblx0cHVibGljIHRyYWNrVG9hc3QoX2luZGV4OiBudW1iZXIsIHRvYXN0OiBMdVRvYXN0KTogc3RyaW5nIHtcblx0XHRyZXR1cm4gdG9hc3QuaWQ7XG5cdH1cblxuXHRwdWJsaWMgaXNPbmx5RGlzbWlzc2libGVNYW51YWxseSh0b2FzdDogTHVUb2FzdCk6IGJvb2xlYW4ge1xuXHRcdHJldHVybiB0aGlzLnRvYXN0c1NlcnZpY2UuaXNPbmx5RGlzbWlzc2libGVNYW51YWxseSh0b2FzdCk7XG5cdH1cbn1cbiIsIjxkaXYgY2xhc3M9XCJ0b2FzdHMgbW9kLXdpdGhDaXJjdWxhckdhdWdlXCIgYXJpYS1saXZlPVwicG9saXRlXCIgW2NsYXNzLm1vZC1ib3R0b21dPVwiYm90dG9tXCI+XG5cdDxkaXYgKm5nRm9yPVwibGV0IHRvYXN0IG9mIHRvYXN0cyQgfCBhc3luYzsgdHJhY2tCeTogdHJhY2tUb2FzdFwiIGNsYXNzPVwidG9hc3RzLWl0ZW1cIiBbbmdDbGFzc109XCJwYWxldHRlQ2xhc3NCeVRvYXN0VHlwZVt0b2FzdC50eXBlXVwiPlxuXHRcdDxzcGFuICpuZ0lmPVwidG9hc3QudHlwZVwiIGNsYXNzPVwidG9hc3QtaXRlbS1pY29uIGx1Y2NhLWljb25cIiBhcmlhLWhpZGRlbj1cInRydWVcIiBbbmdDbGFzc109XCJpY29uQ2xhc3NCeVRvYXN0VHlwZVt0b2FzdC50eXBlXVwiPjwvc3Bhbj5cblx0XHQ8ZGl2IGNsYXNzPVwidG9hc3QtaXRlbS1jb250ZW50XCI+XG5cdFx0XHQ8ZGl2ICpuZ0lmPVwidG9hc3QudGl0bGVcIj48c3Ryb25nPnt7IHRvYXN0LnRpdGxlIH19PC9zdHJvbmc+PC9kaXY+XG5cdFx0XHQ8ZGl2IFtpbm5lckh0bWxdPVwidG9hc3QubWVzc2FnZVwiPjwvZGl2PlxuXHRcdDwvZGl2PlxuXHRcdDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzPVwidG9hc3RzLWl0ZW0ta2lsbFwiIChjbGljayk9XCJyZW1vdmVUb2FzdCh0b2FzdClcIiAoYW5pbWF0aW9uZW5kKT1cInJlbW92ZVRvYXN0KHRvYXN0KVwiPlxuXHRcdFx0PHNwYW4gY2xhc3M9XCJsdWNjYS1pY29uIGljb24tc2lnbkNsb3NlIG1vZC1YU1wiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjwvc3Bhbj5cblx0XHRcdDxkaXYgY2xhc3M9XCJjaXJjdWxhckdhdWdlXCIgKm5nSWY9XCIhaXNPbmx5RGlzbWlzc2libGVNYW51YWxseSh0b2FzdCkgJiYgdG9hc3QuZHVyYXRpb24gPiAwXCI+XG5cdFx0XHRcdDxzdmcgdmlld0JveD1cIjAgMCAzMiAzMlwiPlxuXHRcdFx0XHRcdDxjaXJjbGUgcj1cIjE2XCIgY3g9XCIxNlwiIGN5PVwiMTZcIiBbc3R5bGUuYW5pbWF0aW9uLWR1cmF0aW9uXT1cInRvYXN0LmR1cmF0aW9uICsgJ21zJ1wiIC8+XG5cdFx0XHRcdDwvc3ZnPlxuXHRcdFx0PC9kaXY+XG5cdFx0XHQ8c3BhbiBjbGFzcz1cInUtbWFza1wiPnt7IGludGwuY2xvc2UgfX08L3NwYW4+XG5cdFx0PC9idXR0b24+XG5cdDwvZGl2PlxuPC9kaXY+XG4iXX0=
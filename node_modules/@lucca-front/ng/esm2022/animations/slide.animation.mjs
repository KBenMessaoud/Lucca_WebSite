import { animate, style, transition } from '@angular/animations';
export function luSlidingAnimation(inTiming, outTiming) {
    return [
        transition('void => right', [
            // <--- entering <---
            style({
                transformOrigin: 'right center',
                transform: 'translateX(50px)',
                opacity: '0',
            }),
            animate(inTiming, style({
                transformOrigin: 'right center',
                transform: 'translateX(0)',
                opacity: '1',
            })),
        ]),
        transition('right => void', [
            // ---> leaving --->
            style({
                transformOrigin: 'right center',
                transform: 'translateX(0)',
                opacity: '1',
            }),
            animate(outTiming, style({
                transformOrigin: 'right center',
                transform: 'translateX(50px)',
                opacity: '0',
            })),
        ]),
        transition('void => top', [
            // \/ entering
            style({
                transformOrigin: 'center',
                transform: 'translateY(-20px)',
                opacity: '0',
            }),
            animate(inTiming, style({
                transformOrigin: 'center',
                transform: 'translateY(0)',
                opacity: '1',
            })),
        ]),
        transition('top => void', [
            // /\ leaving
            style({
                transformOrigin: 'center',
                transform: 'translateY(0)',
                opacity: '1',
            }),
            animate(outTiming, style({
                transformOrigin: 'center',
                transform: 'translateY(-20px)',
                opacity: '0',
            })),
        ]),
        transition('void => bottom', [
            // /\ entering
            style({
                transformOrigin: 'center',
                transform: 'translateY(20px)',
                opacity: '0',
            }),
            animate(inTiming, style({
                transformOrigin: 'center',
                transform: 'translateY(0)',
                opacity: '1',
            })),
        ]),
        transition('bottom => void', [
            // \/ leaving
            style({
                transformOrigin: 'center',
                transform: 'translateY(0)',
                opacity: '1',
            }),
            animate(outTiming, style({
                transformOrigin: 'center',
                transform: 'translateY(20px)',
                opacity: '0',
            })),
        ]),
        transition('void => left, void => *', [
            // ---> entering --->
            style({
                transformOrigin: 'left center',
                transform: 'translateX(-50px)',
                opacity: '0',
            }),
            animate(inTiming, style({
                transformOrigin: 'left center',
                transform: 'translateX(0)',
                opacity: '1',
            })),
        ]),
        transition('left => void, * => void', [
            // <--- leaving <---
            style({
                transformOrigin: 'left center',
                transform: 'translateX(0)',
                opacity: '1',
            }),
            animate(outTiming, style({
                transformOrigin: 'left center',
                transform: 'translateX(-50px)',
                opacity: '0',
            })),
        ]),
    ];
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpZGUuYW5pbWF0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcGFja2FnZXMvbmcvYW5pbWF0aW9ucy9zbGlkZS5hbmltYXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE9BQU8sRUFBcUIsS0FBSyxFQUFFLFVBQVUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRXBGLE1BQU0sVUFBVSxrQkFBa0IsQ0FBQyxRQUFnQixFQUFFLFNBQWlCO0lBQ3JFLE9BQU87UUFDTixVQUFVLENBQUMsZUFBZSxFQUFFO1lBQzNCLHFCQUFxQjtZQUNyQixLQUFLLENBQUM7Z0JBQ0wsZUFBZSxFQUFFLGNBQWM7Z0JBQy9CLFNBQVMsRUFBRSxrQkFBa0I7Z0JBQzdCLE9BQU8sRUFBRSxHQUFHO2FBQ1osQ0FBQztZQUNGLE9BQU8sQ0FDTixRQUFRLEVBQ1IsS0FBSyxDQUFDO2dCQUNMLGVBQWUsRUFBRSxjQUFjO2dCQUMvQixTQUFTLEVBQUUsZUFBZTtnQkFDMUIsT0FBTyxFQUFFLEdBQUc7YUFDWixDQUFDLENBQ0Y7U0FDRCxDQUFDO1FBQ0YsVUFBVSxDQUFDLGVBQWUsRUFBRTtZQUMzQixvQkFBb0I7WUFDcEIsS0FBSyxDQUFDO2dCQUNMLGVBQWUsRUFBRSxjQUFjO2dCQUMvQixTQUFTLEVBQUUsZUFBZTtnQkFDMUIsT0FBTyxFQUFFLEdBQUc7YUFDWixDQUFDO1lBQ0YsT0FBTyxDQUNOLFNBQVMsRUFDVCxLQUFLLENBQUM7Z0JBQ0wsZUFBZSxFQUFFLGNBQWM7Z0JBQy9CLFNBQVMsRUFBRSxrQkFBa0I7Z0JBQzdCLE9BQU8sRUFBRSxHQUFHO2FBQ1osQ0FBQyxDQUNGO1NBQ0QsQ0FBQztRQUVGLFVBQVUsQ0FBQyxhQUFhLEVBQUU7WUFDekIsY0FBYztZQUNkLEtBQUssQ0FBQztnQkFDTCxlQUFlLEVBQUUsUUFBUTtnQkFDekIsU0FBUyxFQUFFLG1CQUFtQjtnQkFDOUIsT0FBTyxFQUFFLEdBQUc7YUFDWixDQUFDO1lBQ0YsT0FBTyxDQUNOLFFBQVEsRUFDUixLQUFLLENBQUM7Z0JBQ0wsZUFBZSxFQUFFLFFBQVE7Z0JBQ3pCLFNBQVMsRUFBRSxlQUFlO2dCQUMxQixPQUFPLEVBQUUsR0FBRzthQUNaLENBQUMsQ0FDRjtTQUNELENBQUM7UUFDRixVQUFVLENBQUMsYUFBYSxFQUFFO1lBQ3pCLGFBQWE7WUFDYixLQUFLLENBQUM7Z0JBQ0wsZUFBZSxFQUFFLFFBQVE7Z0JBQ3pCLFNBQVMsRUFBRSxlQUFlO2dCQUMxQixPQUFPLEVBQUUsR0FBRzthQUNaLENBQUM7WUFDRixPQUFPLENBQ04sU0FBUyxFQUNULEtBQUssQ0FBQztnQkFDTCxlQUFlLEVBQUUsUUFBUTtnQkFDekIsU0FBUyxFQUFFLG1CQUFtQjtnQkFDOUIsT0FBTyxFQUFFLEdBQUc7YUFDWixDQUFDLENBQ0Y7U0FDRCxDQUFDO1FBRUYsVUFBVSxDQUFDLGdCQUFnQixFQUFFO1lBQzVCLGNBQWM7WUFDZCxLQUFLLENBQUM7Z0JBQ0wsZUFBZSxFQUFFLFFBQVE7Z0JBQ3pCLFNBQVMsRUFBRSxrQkFBa0I7Z0JBQzdCLE9BQU8sRUFBRSxHQUFHO2FBQ1osQ0FBQztZQUNGLE9BQU8sQ0FDTixRQUFRLEVBQ1IsS0FBSyxDQUFDO2dCQUNMLGVBQWUsRUFBRSxRQUFRO2dCQUN6QixTQUFTLEVBQUUsZUFBZTtnQkFDMUIsT0FBTyxFQUFFLEdBQUc7YUFDWixDQUFDLENBQ0Y7U0FDRCxDQUFDO1FBQ0YsVUFBVSxDQUFDLGdCQUFnQixFQUFFO1lBQzVCLGFBQWE7WUFDYixLQUFLLENBQUM7Z0JBQ0wsZUFBZSxFQUFFLFFBQVE7Z0JBQ3pCLFNBQVMsRUFBRSxlQUFlO2dCQUMxQixPQUFPLEVBQUUsR0FBRzthQUNaLENBQUM7WUFDRixPQUFPLENBQ04sU0FBUyxFQUNULEtBQUssQ0FBQztnQkFDTCxlQUFlLEVBQUUsUUFBUTtnQkFDekIsU0FBUyxFQUFFLGtCQUFrQjtnQkFDN0IsT0FBTyxFQUFFLEdBQUc7YUFDWixDQUFDLENBQ0Y7U0FDRCxDQUFDO1FBRUYsVUFBVSxDQUFDLHlCQUF5QixFQUFFO1lBQ3JDLHFCQUFxQjtZQUNyQixLQUFLLENBQUM7Z0JBQ0wsZUFBZSxFQUFFLGFBQWE7Z0JBQzlCLFNBQVMsRUFBRSxtQkFBbUI7Z0JBQzlCLE9BQU8sRUFBRSxHQUFHO2FBQ1osQ0FBQztZQUNGLE9BQU8sQ0FDTixRQUFRLEVBQ1IsS0FBSyxDQUFDO2dCQUNMLGVBQWUsRUFBRSxhQUFhO2dCQUM5QixTQUFTLEVBQUUsZUFBZTtnQkFDMUIsT0FBTyxFQUFFLEdBQUc7YUFDWixDQUFDLENBQ0Y7U0FDRCxDQUFDO1FBQ0YsVUFBVSxDQUFDLHlCQUF5QixFQUFFO1lBQ3JDLG9CQUFvQjtZQUNwQixLQUFLLENBQUM7Z0JBQ0wsZUFBZSxFQUFFLGFBQWE7Z0JBQzlCLFNBQVMsRUFBRSxlQUFlO2dCQUMxQixPQUFPLEVBQUUsR0FBRzthQUNaLENBQUM7WUFDRixPQUFPLENBQ04sU0FBUyxFQUNULEtBQUssQ0FBQztnQkFDTCxlQUFlLEVBQUUsYUFBYTtnQkFDOUIsU0FBUyxFQUFFLG1CQUFtQjtnQkFDOUIsT0FBTyxFQUFFLEdBQUc7YUFDWixDQUFDLENBQ0Y7U0FDRCxDQUFDO0tBQ0YsQ0FBQztBQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhbmltYXRlLCBBbmltYXRpb25NZXRhZGF0YSwgc3R5bGUsIHRyYW5zaXRpb24gfSBmcm9tICdAYW5ndWxhci9hbmltYXRpb25zJztcblxuZXhwb3J0IGZ1bmN0aW9uIGx1U2xpZGluZ0FuaW1hdGlvbihpblRpbWluZzogc3RyaW5nLCBvdXRUaW1pbmc6IHN0cmluZyk6IEFuaW1hdGlvbk1ldGFkYXRhW10ge1xuXHRyZXR1cm4gW1xuXHRcdHRyYW5zaXRpb24oJ3ZvaWQgPT4gcmlnaHQnLCBbXG5cdFx0XHQvLyA8LS0tIGVudGVyaW5nIDwtLS1cblx0XHRcdHN0eWxlKHtcblx0XHRcdFx0dHJhbnNmb3JtT3JpZ2luOiAncmlnaHQgY2VudGVyJyxcblx0XHRcdFx0dHJhbnNmb3JtOiAndHJhbnNsYXRlWCg1MHB4KScsXG5cdFx0XHRcdG9wYWNpdHk6ICcwJyxcblx0XHRcdH0pLFxuXHRcdFx0YW5pbWF0ZShcblx0XHRcdFx0aW5UaW1pbmcsXG5cdFx0XHRcdHN0eWxlKHtcblx0XHRcdFx0XHR0cmFuc2Zvcm1PcmlnaW46ICdyaWdodCBjZW50ZXInLFxuXHRcdFx0XHRcdHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVgoMCknLFxuXHRcdFx0XHRcdG9wYWNpdHk6ICcxJyxcblx0XHRcdFx0fSksXG5cdFx0XHQpLFxuXHRcdF0pLFxuXHRcdHRyYW5zaXRpb24oJ3JpZ2h0ID0+IHZvaWQnLCBbXG5cdFx0XHQvLyAtLS0+IGxlYXZpbmcgLS0tPlxuXHRcdFx0c3R5bGUoe1xuXHRcdFx0XHR0cmFuc2Zvcm1PcmlnaW46ICdyaWdodCBjZW50ZXInLFxuXHRcdFx0XHR0cmFuc2Zvcm06ICd0cmFuc2xhdGVYKDApJyxcblx0XHRcdFx0b3BhY2l0eTogJzEnLFxuXHRcdFx0fSksXG5cdFx0XHRhbmltYXRlKFxuXHRcdFx0XHRvdXRUaW1pbmcsXG5cdFx0XHRcdHN0eWxlKHtcblx0XHRcdFx0XHR0cmFuc2Zvcm1PcmlnaW46ICdyaWdodCBjZW50ZXInLFxuXHRcdFx0XHRcdHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVgoNTBweCknLFxuXHRcdFx0XHRcdG9wYWNpdHk6ICcwJyxcblx0XHRcdFx0fSksXG5cdFx0XHQpLFxuXHRcdF0pLFxuXG5cdFx0dHJhbnNpdGlvbigndm9pZCA9PiB0b3AnLCBbXG5cdFx0XHQvLyBcXC8gZW50ZXJpbmdcblx0XHRcdHN0eWxlKHtcblx0XHRcdFx0dHJhbnNmb3JtT3JpZ2luOiAnY2VudGVyJyxcblx0XHRcdFx0dHJhbnNmb3JtOiAndHJhbnNsYXRlWSgtMjBweCknLFxuXHRcdFx0XHRvcGFjaXR5OiAnMCcsXG5cdFx0XHR9KSxcblx0XHRcdGFuaW1hdGUoXG5cdFx0XHRcdGluVGltaW5nLFxuXHRcdFx0XHRzdHlsZSh7XG5cdFx0XHRcdFx0dHJhbnNmb3JtT3JpZ2luOiAnY2VudGVyJyxcblx0XHRcdFx0XHR0cmFuc2Zvcm06ICd0cmFuc2xhdGVZKDApJyxcblx0XHRcdFx0XHRvcGFjaXR5OiAnMScsXG5cdFx0XHRcdH0pLFxuXHRcdFx0KSxcblx0XHRdKSxcblx0XHR0cmFuc2l0aW9uKCd0b3AgPT4gdm9pZCcsIFtcblx0XHRcdC8vIC9cXCBsZWF2aW5nXG5cdFx0XHRzdHlsZSh7XG5cdFx0XHRcdHRyYW5zZm9ybU9yaWdpbjogJ2NlbnRlcicsXG5cdFx0XHRcdHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVkoMCknLFxuXHRcdFx0XHRvcGFjaXR5OiAnMScsXG5cdFx0XHR9KSxcblx0XHRcdGFuaW1hdGUoXG5cdFx0XHRcdG91dFRpbWluZyxcblx0XHRcdFx0c3R5bGUoe1xuXHRcdFx0XHRcdHRyYW5zZm9ybU9yaWdpbjogJ2NlbnRlcicsXG5cdFx0XHRcdFx0dHJhbnNmb3JtOiAndHJhbnNsYXRlWSgtMjBweCknLFxuXHRcdFx0XHRcdG9wYWNpdHk6ICcwJyxcblx0XHRcdFx0fSksXG5cdFx0XHQpLFxuXHRcdF0pLFxuXG5cdFx0dHJhbnNpdGlvbigndm9pZCA9PiBib3R0b20nLCBbXG5cdFx0XHQvLyAvXFwgZW50ZXJpbmdcblx0XHRcdHN0eWxlKHtcblx0XHRcdFx0dHJhbnNmb3JtT3JpZ2luOiAnY2VudGVyJyxcblx0XHRcdFx0dHJhbnNmb3JtOiAndHJhbnNsYXRlWSgyMHB4KScsXG5cdFx0XHRcdG9wYWNpdHk6ICcwJyxcblx0XHRcdH0pLFxuXHRcdFx0YW5pbWF0ZShcblx0XHRcdFx0aW5UaW1pbmcsXG5cdFx0XHRcdHN0eWxlKHtcblx0XHRcdFx0XHR0cmFuc2Zvcm1PcmlnaW46ICdjZW50ZXInLFxuXHRcdFx0XHRcdHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVkoMCknLFxuXHRcdFx0XHRcdG9wYWNpdHk6ICcxJyxcblx0XHRcdFx0fSksXG5cdFx0XHQpLFxuXHRcdF0pLFxuXHRcdHRyYW5zaXRpb24oJ2JvdHRvbSA9PiB2b2lkJywgW1xuXHRcdFx0Ly8gXFwvIGxlYXZpbmdcblx0XHRcdHN0eWxlKHtcblx0XHRcdFx0dHJhbnNmb3JtT3JpZ2luOiAnY2VudGVyJyxcblx0XHRcdFx0dHJhbnNmb3JtOiAndHJhbnNsYXRlWSgwKScsXG5cdFx0XHRcdG9wYWNpdHk6ICcxJyxcblx0XHRcdH0pLFxuXHRcdFx0YW5pbWF0ZShcblx0XHRcdFx0b3V0VGltaW5nLFxuXHRcdFx0XHRzdHlsZSh7XG5cdFx0XHRcdFx0dHJhbnNmb3JtT3JpZ2luOiAnY2VudGVyJyxcblx0XHRcdFx0XHR0cmFuc2Zvcm06ICd0cmFuc2xhdGVZKDIwcHgpJyxcblx0XHRcdFx0XHRvcGFjaXR5OiAnMCcsXG5cdFx0XHRcdH0pLFxuXHRcdFx0KSxcblx0XHRdKSxcblxuXHRcdHRyYW5zaXRpb24oJ3ZvaWQgPT4gbGVmdCwgdm9pZCA9PiAqJywgW1xuXHRcdFx0Ly8gLS0tPiBlbnRlcmluZyAtLS0+XG5cdFx0XHRzdHlsZSh7XG5cdFx0XHRcdHRyYW5zZm9ybU9yaWdpbjogJ2xlZnQgY2VudGVyJyxcblx0XHRcdFx0dHJhbnNmb3JtOiAndHJhbnNsYXRlWCgtNTBweCknLFxuXHRcdFx0XHRvcGFjaXR5OiAnMCcsXG5cdFx0XHR9KSxcblx0XHRcdGFuaW1hdGUoXG5cdFx0XHRcdGluVGltaW5nLFxuXHRcdFx0XHRzdHlsZSh7XG5cdFx0XHRcdFx0dHJhbnNmb3JtT3JpZ2luOiAnbGVmdCBjZW50ZXInLFxuXHRcdFx0XHRcdHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVgoMCknLFxuXHRcdFx0XHRcdG9wYWNpdHk6ICcxJyxcblx0XHRcdFx0fSksXG5cdFx0XHQpLFxuXHRcdF0pLFxuXHRcdHRyYW5zaXRpb24oJ2xlZnQgPT4gdm9pZCwgKiA9PiB2b2lkJywgW1xuXHRcdFx0Ly8gPC0tLSBsZWF2aW5nIDwtLS1cblx0XHRcdHN0eWxlKHtcblx0XHRcdFx0dHJhbnNmb3JtT3JpZ2luOiAnbGVmdCBjZW50ZXInLFxuXHRcdFx0XHR0cmFuc2Zvcm06ICd0cmFuc2xhdGVYKDApJyxcblx0XHRcdFx0b3BhY2l0eTogJzEnLFxuXHRcdFx0fSksXG5cdFx0XHRhbmltYXRlKFxuXHRcdFx0XHRvdXRUaW1pbmcsXG5cdFx0XHRcdHN0eWxlKHtcblx0XHRcdFx0XHR0cmFuc2Zvcm1PcmlnaW46ICdsZWZ0IGNlbnRlcicsXG5cdFx0XHRcdFx0dHJhbnNmb3JtOiAndHJhbnNsYXRlWCgtNTBweCknLFxuXHRcdFx0XHRcdG9wYWNpdHk6ICcwJyxcblx0XHRcdFx0fSksXG5cdFx0XHQpLFxuXHRcdF0pLFxuXHRdO1xufVxuIl19
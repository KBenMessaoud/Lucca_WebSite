import { A11yModule } from '@angular/cdk/a11y';
import { AsyncPipe, NgClass, NgIf } from '@angular/common';
import { ChangeDetectionStrategy, Component, Directive, HostBinding, ViewChild, ViewContainerRef } from '@angular/core';
import { getIntl } from '@lucca-front/ng/core';
import { LuTooltipModule } from '@lucca-front/ng/tooltip';
import { isObservable, Observable, of, ReplaySubject, Subject, Subscription, timer } from 'rxjs';
import { delay, distinctUntilChanged, map, switchMap, tap } from 'rxjs/operators';
import { LU_MODAL_TRANSLATIONS } from './modal.translate';
import * as i0 from "@angular/core";
import * as i1 from "./modal-ref.model";
import * as i2 from "@angular/cdk/a11y";
import * as i3 from "@lucca-front/ng/tooltip";
let modalId = 0;
class ALuModalPanelComponent {
    get isSubmitHidden() {
        return !this._componentInstance.submitAction;
    }
    get submitPalette() {
        return this._componentInstance.submitPalette || 'primary';
    }
    constructor(_ref, _elementRef, _renderer) {
        this._ref = _ref;
        this.doCheck$ = new ReplaySubject(1);
        this.intl = getIntl(LU_MODAL_TRANSLATIONS);
        this.title$ = this.listenComponentValue(() => this._componentInstance.title);
        this.submitLabel$ = this.listenComponentValue(() => this._componentInstance.submitLabel || this.intl.submit);
        this.cancelLabel$ = this.listenComponentValue(() => this._componentInstance.cancelLabel || this.intl.cancel);
        this.submitCounter$ = this.listenComponentValue(() => this._componentInstance.submitCounter);
        this.submitDisabled$ = this.listenComponentValue(() => this._componentInstance.submitDisabled);
        this.hasSubmitCounter$ = this.submitCounter$.pipe(map(Boolean));
        this.closeLabel = this.intl.close;
        this.submitClass$ = new Subject();
        this.error$ = new Subject();
        this.modalId = modalId++;
        this._subs = new Subscription();
        this.modalClasses = _ref.modalClasses;
        _renderer.addClass(_elementRef.nativeElement, this.modalClasses.panel);
    }
    ngDoCheck() {
        this.doCheck$.next();
    }
    attachInnerComponent(componentType, injector) {
        const ref = this._containerRef.createComponent(componentType, { injector });
        this._componentInstance = ref.instance;
        return ref;
    }
    ngOnDestroy() {
        this.doCheck$.complete();
        this._subs.unsubscribe();
    }
    dismiss() {
        this._ref.dismiss();
    }
    submit() {
        this.error$.next(undefined);
        this.submitClass$.next('is-loading');
        const result$ = this._componentInstance.submitAction();
        if (result$ instanceof Observable) {
            this._subs.add(result$
                .pipe(tap((_) => this.submitClass$.next('is-success')), delay(500))
                .subscribe({
                next: (result) => this._ref.close(result),
                error: (err) => {
                    this.submitClass$.next('is-error');
                    this.error$.next(err);
                    timer(2000).subscribe((_) => {
                        this.submitClass$.next('');
                    });
                },
                complete: () => {
                    this.submitClass$.next('');
                },
            }));
        }
        else {
            this._ref.close(result$);
        }
    }
    listenComponentValue(selector) {
        return this.doCheck$.pipe(map(selector), distinctUntilChanged(), switchMap((value) => (isObservable(value) ? value : of(value))));
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: ALuModalPanelComponent, deps: [{ token: i1.ALuModalRef }, { token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.1.3", type: ALuModalPanelComponent, viewQueries: [{ propertyName: "_containerRef", first: true, predicate: ["container"], descendants: true, read: ViewContainerRef, static: true }], ngImport: i0 }); }
}
export { ALuModalPanelComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: ALuModalPanelComponent, decorators: [{
            type: Directive
        }], ctorParameters: function () { return [{ type: i1.ALuModalRef }, { type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { _containerRef: [{
                type: ViewChild,
                args: ['container', { read: ViewContainerRef, static: true }]
            }] } });
const panelImports = [A11yModule, AsyncPipe, LuTooltipModule, NgClass, NgIf];
class LuModalPanelComponent extends ALuModalPanelComponent {
    constructor(_ref, _elementRef, _renderer) {
        super(_ref, _elementRef, _renderer);
        this.class = true;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuModalPanelComponent, deps: [{ token: i1.ALuModalRef }, { token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.3", type: LuModalPanelComponent, isStandalone: true, selector: "lu-modal-panel", host: { properties: { "class.lu-modal-panel": "this.class" } }, usesInheritance: true, ngImport: i0, template: "<div\n\tcdkTrapFocus=\"true\"\n\tcdkTrapFocusAutoCapture=\"true\"\n\trole=\"dialog\"\n\taria-modal=\"true\"\n\t[attr.aria-labelledby]=\"'luModalTitle' + modalId\"\n\t[ngClass]=\"modalClasses.panelInner\"\n>\n\t<div [ngClass]=\"modalClasses.panelContainer\" role=\"document\">\n\t\t<div class=\"lu-modal-header\" tabindex=\"-1\" cdkFocusInitial>\n\t\t\t<button type=\"button\" class=\"actionIcon mod-S lu-modal-header-close\" (click)=\"dismiss()\" [luTooltip]=\"closeLabel\">\n\t\t\t\t<span aria-hidden=\"true\" class=\"lucca-icon icon-signClose\"></span>\n\t\t\t\t<span class=\"u-mask\">{{ closeLabel }}</span>\n\t\t\t</button>\n\t\t\t<h1 [attr.id]=\"'luModalTitle' + modalId\" class=\"lu-modal-header-title\">{{ title$ | async }}</h1>\n\t\t</div>\n\t\t<div class=\"lu-modal-content\">\n\t\t\t<ng-container #container></ng-container>\n\t\t</div>\n\t\t<div class=\"lu-modal-footer\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\t*ngIf=\"!isSubmitHidden\"\n\t\t\t\tclass=\"button palette-{{ submitPalette }}\"\n\t\t\t\t[disabled]=\"submitDisabled$ | async\"\n\t\t\t\t[ngClass]=\"submitClass$ | async\"\n\t\t\t\t(click)=\"submit()\"\n\t\t\t>\n\t\t\t\t{{ submitLabel$ | async }}\n\t\t\t\t<label class=\"numericBadge palette-primary\" *ngIf=\"hasSubmitCounter$ | async\">{{ submitCounter$ | async }}</label>\n\t\t\t</button>\n\t\t\t<button type=\"button\" class=\"button mod-text\" (click)=\"dismiss()\">{{ cancelLabel$ | async }}</button>\n\t\t</div>\n\t</div>\n</div>\n", styles: [""], dependencies: [{ kind: "ngmodule", type: A11yModule }, { kind: "directive", type: i2.CdkTrapFocus, selector: "[cdkTrapFocus]", inputs: ["cdkTrapFocus", "cdkTrapFocusAutoCapture"], exportAs: ["cdkTrapFocus"] }, { kind: "pipe", type: AsyncPipe, name: "async" }, { kind: "ngmodule", type: LuTooltipModule }, { kind: "directive", type: i3.LuTooltipTriggerDirective, selector: "[luTooltip]", inputs: ["luTooltip", "luTooltipEnterDelay", "luTooltipLeaveDelay", "luTooltipDisabled", "luTooltipPosition", "luTooltipWhenEllipsis"], outputs: ["luTooltipOnOpen", "luTooltipOnClose"] }, { kind: "directive", type: NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { LuModalPanelComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuModalPanelComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lu-modal-panel', standalone: true, imports: panelImports, changeDetection: ChangeDetectionStrategy.OnPush, template: "<div\n\tcdkTrapFocus=\"true\"\n\tcdkTrapFocusAutoCapture=\"true\"\n\trole=\"dialog\"\n\taria-modal=\"true\"\n\t[attr.aria-labelledby]=\"'luModalTitle' + modalId\"\n\t[ngClass]=\"modalClasses.panelInner\"\n>\n\t<div [ngClass]=\"modalClasses.panelContainer\" role=\"document\">\n\t\t<div class=\"lu-modal-header\" tabindex=\"-1\" cdkFocusInitial>\n\t\t\t<button type=\"button\" class=\"actionIcon mod-S lu-modal-header-close\" (click)=\"dismiss()\" [luTooltip]=\"closeLabel\">\n\t\t\t\t<span aria-hidden=\"true\" class=\"lucca-icon icon-signClose\"></span>\n\t\t\t\t<span class=\"u-mask\">{{ closeLabel }}</span>\n\t\t\t</button>\n\t\t\t<h1 [attr.id]=\"'luModalTitle' + modalId\" class=\"lu-modal-header-title\">{{ title$ | async }}</h1>\n\t\t</div>\n\t\t<div class=\"lu-modal-content\">\n\t\t\t<ng-container #container></ng-container>\n\t\t</div>\n\t\t<div class=\"lu-modal-footer\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\t*ngIf=\"!isSubmitHidden\"\n\t\t\t\tclass=\"button palette-{{ submitPalette }}\"\n\t\t\t\t[disabled]=\"submitDisabled$ | async\"\n\t\t\t\t[ngClass]=\"submitClass$ | async\"\n\t\t\t\t(click)=\"submit()\"\n\t\t\t>\n\t\t\t\t{{ submitLabel$ | async }}\n\t\t\t\t<label class=\"numericBadge palette-primary\" *ngIf=\"hasSubmitCounter$ | async\">{{ submitCounter$ | async }}</label>\n\t\t\t</button>\n\t\t\t<button type=\"button\" class=\"button mod-text\" (click)=\"dismiss()\">{{ cancelLabel$ | async }}</button>\n\t\t</div>\n\t</div>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.ALuModalRef }, { type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { class: [{
                type: HostBinding,
                args: ['class.lu-modal-panel']
            }] } });
class LuModalPanelComponentDefaultCD extends ALuModalPanelComponent {
    constructor(_ref, _elementRef, _renderer) {
        super(_ref, _elementRef, _renderer);
        this.class = true;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuModalPanelComponentDefaultCD, deps: [{ token: i1.ALuModalRef }, { token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.3", type: LuModalPanelComponentDefaultCD, isStandalone: true, selector: "lu-modal-panel-default", host: { properties: { "class.lu-modal-panel": "this.class" } }, usesInheritance: true, ngImport: i0, template: "<div\n\tcdkTrapFocus=\"true\"\n\tcdkTrapFocusAutoCapture=\"true\"\n\trole=\"dialog\"\n\taria-modal=\"true\"\n\t[attr.aria-labelledby]=\"'luModalTitle' + modalId\"\n\t[ngClass]=\"modalClasses.panelInner\"\n>\n\t<div [ngClass]=\"modalClasses.panelContainer\" role=\"document\">\n\t\t<div class=\"lu-modal-header\" tabindex=\"-1\" cdkFocusInitial>\n\t\t\t<button type=\"button\" class=\"actionIcon mod-S lu-modal-header-close\" (click)=\"dismiss()\" [luTooltip]=\"closeLabel\">\n\t\t\t\t<span aria-hidden=\"true\" class=\"lucca-icon icon-signClose\"></span>\n\t\t\t\t<span class=\"u-mask\">{{ closeLabel }}</span>\n\t\t\t</button>\n\t\t\t<h1 [attr.id]=\"'luModalTitle' + modalId\" class=\"lu-modal-header-title\">{{ title$ | async }}</h1>\n\t\t</div>\n\t\t<div class=\"lu-modal-content\">\n\t\t\t<ng-container #container></ng-container>\n\t\t</div>\n\t\t<div class=\"lu-modal-footer\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\t*ngIf=\"!isSubmitHidden\"\n\t\t\t\tclass=\"button palette-{{ submitPalette }}\"\n\t\t\t\t[disabled]=\"submitDisabled$ | async\"\n\t\t\t\t[ngClass]=\"submitClass$ | async\"\n\t\t\t\t(click)=\"submit()\"\n\t\t\t>\n\t\t\t\t{{ submitLabel$ | async }}\n\t\t\t\t<label class=\"numericBadge palette-primary\" *ngIf=\"hasSubmitCounter$ | async\">{{ submitCounter$ | async }}</label>\n\t\t\t</button>\n\t\t\t<button type=\"button\" class=\"button mod-text\" (click)=\"dismiss()\">{{ cancelLabel$ | async }}</button>\n\t\t</div>\n\t</div>\n</div>\n", styles: [""], dependencies: [{ kind: "ngmodule", type: A11yModule }, { kind: "directive", type: i2.CdkTrapFocus, selector: "[cdkTrapFocus]", inputs: ["cdkTrapFocus", "cdkTrapFocusAutoCapture"], exportAs: ["cdkTrapFocus"] }, { kind: "pipe", type: AsyncPipe, name: "async" }, { kind: "ngmodule", type: LuTooltipModule }, { kind: "directive", type: i3.LuTooltipTriggerDirective, selector: "[luTooltip]", inputs: ["luTooltip", "luTooltipEnterDelay", "luTooltipLeaveDelay", "luTooltipDisabled", "luTooltipPosition", "luTooltipWhenEllipsis"], outputs: ["luTooltipOnOpen", "luTooltipOnClose"] }, { kind: "directive", type: NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.Default }); }
}
export { LuModalPanelComponentDefaultCD };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuModalPanelComponentDefaultCD, decorators: [{
            type: Component,
            args: [{ selector: 'lu-modal-panel-default', standalone: true, imports: panelImports, changeDetection: ChangeDetectionStrategy.Default, template: "<div\n\tcdkTrapFocus=\"true\"\n\tcdkTrapFocusAutoCapture=\"true\"\n\trole=\"dialog\"\n\taria-modal=\"true\"\n\t[attr.aria-labelledby]=\"'luModalTitle' + modalId\"\n\t[ngClass]=\"modalClasses.panelInner\"\n>\n\t<div [ngClass]=\"modalClasses.panelContainer\" role=\"document\">\n\t\t<div class=\"lu-modal-header\" tabindex=\"-1\" cdkFocusInitial>\n\t\t\t<button type=\"button\" class=\"actionIcon mod-S lu-modal-header-close\" (click)=\"dismiss()\" [luTooltip]=\"closeLabel\">\n\t\t\t\t<span aria-hidden=\"true\" class=\"lucca-icon icon-signClose\"></span>\n\t\t\t\t<span class=\"u-mask\">{{ closeLabel }}</span>\n\t\t\t</button>\n\t\t\t<h1 [attr.id]=\"'luModalTitle' + modalId\" class=\"lu-modal-header-title\">{{ title$ | async }}</h1>\n\t\t</div>\n\t\t<div class=\"lu-modal-content\">\n\t\t\t<ng-container #container></ng-container>\n\t\t</div>\n\t\t<div class=\"lu-modal-footer\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\t*ngIf=\"!isSubmitHidden\"\n\t\t\t\tclass=\"button palette-{{ submitPalette }}\"\n\t\t\t\t[disabled]=\"submitDisabled$ | async\"\n\t\t\t\t[ngClass]=\"submitClass$ | async\"\n\t\t\t\t(click)=\"submit()\"\n\t\t\t>\n\t\t\t\t{{ submitLabel$ | async }}\n\t\t\t\t<label class=\"numericBadge palette-primary\" *ngIf=\"hasSubmitCounter$ | async\">{{ submitCounter$ | async }}</label>\n\t\t\t</button>\n\t\t\t<button type=\"button\" class=\"button mod-text\" (click)=\"dismiss()\">{{ cancelLabel$ | async }}</button>\n\t\t</div>\n\t</div>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.ALuModalRef }, { type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { class: [{
                type: HostBinding,
                args: ['class.lu-modal-panel']
            }] } });
//# sourceMappingURL=data:application/json;base64,
import { InjectionToken } from '@angular/core';
import { ALuModalRef as ALuSidepanelRef, luDefaultSidepanelConfig, luModalTranslations, LU_MODAL_DATA } from '@lucca-front/ng/modal';
/**
 * For backward compatibility, we re-export modal tokens as sidepanel tokens.
 * We should remove all sidepanel related files in the next major version (16+).
 */
/**
 * @deprecated Use LU_MODAL_CONFIG from @lucca-front/ng/modal instead.
 */
export const LU_SIDEPANEL_CONFIG = new InjectionToken('LuSidepanelDefaultConfig', {
    factory: () => luDefaultSidepanelConfig,
});
/**
 * @deprecated Use LU_MODAL_DATA from @lucca-front/ng/modal instead.
 */
export const LU_SIDEPANEL_DATA = LU_MODAL_DATA;
/**
 * @deprecated Use LU_MODAL_TRANSLATIONS from @lucca-front/ng/modal instead.
 */
export const LU_SIDEPANEL_TRANSLATIONS = new InjectionToken('LuSidepanelTranslations', {
    factory: () => luSidepanelTranslations,
});
/**
 * @deprecated Use luModalTranslations from @lucca-front/ng/modal instead.
 */
export const luSidepanelTranslations = luModalTranslations;
export { 
/**
 * @deprecated Use ALuModalRef from @lucca-front/ng/modal instead.
 */
ALuSidepanelRef, };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZXBhbmVsLm1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcGFja2FnZXMvbmcvc2lkZXBhbmVsL3NpZGVwYW5lbC5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRS9DLE9BQU8sRUFBRSxXQUFXLElBQUksZUFBZSxFQUErQyx3QkFBd0IsRUFBaUIsbUJBQW1CLEVBQUUsYUFBYSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFFak07OztHQUdHO0FBRUg7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyxJQUFJLGNBQWMsQ0FBb0IsMEJBQTBCLEVBQUU7SUFDcEcsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLHdCQUF3QjtDQUN2QyxDQUFDLENBQUM7QUFFSDs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHLGFBQWEsQ0FBQztBQUUvQzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLHlCQUF5QixHQUFHLElBQUksY0FBYyxDQUFDLHlCQUF5QixFQUFFO0lBQ3RGLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyx1QkFBdUI7Q0FDdEMsQ0FBQyxDQUFDO0FBT0g7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSx1QkFBdUIsR0FBc0MsbUJBQW1CLENBQUM7QUFzQjlGLE9BQU87QUFDTjs7R0FFRztBQUNILGVBQWUsR0FDZixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0aW9uVG9rZW4gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElMdVRyYW5zbGF0aW9uIH0gZnJvbSAnQGx1Y2NhLWZyb250L25nL2NvcmUnO1xuaW1wb3J0IHsgQUx1TW9kYWxSZWYgYXMgQUx1U2lkZXBhbmVsUmVmLCBJTHVNb2RhbENvbnRlbnQsIElMdU1vZGFsTGFiZWwsIElMdU1vZGFsUmVmLCBsdURlZmF1bHRTaWRlcGFuZWxDb25maWcsIEx1TW9kYWxDb25maWcsIGx1TW9kYWxUcmFuc2xhdGlvbnMsIExVX01PREFMX0RBVEEgfSBmcm9tICdAbHVjY2EtZnJvbnQvbmcvbW9kYWwnO1xuXG4vKipcbiAqIEZvciBiYWNrd2FyZCBjb21wYXRpYmlsaXR5LCB3ZSByZS1leHBvcnQgbW9kYWwgdG9rZW5zIGFzIHNpZGVwYW5lbCB0b2tlbnMuXG4gKiBXZSBzaG91bGQgcmVtb3ZlIGFsbCBzaWRlcGFuZWwgcmVsYXRlZCBmaWxlcyBpbiB0aGUgbmV4dCBtYWpvciB2ZXJzaW9uICgxNispLlxuICovXG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIExVX01PREFMX0NPTkZJRyBmcm9tIEBsdWNjYS1mcm9udC9uZy9tb2RhbCBpbnN0ZWFkLlxuICovXG5leHBvcnQgY29uc3QgTFVfU0lERVBBTkVMX0NPTkZJRyA9IG5ldyBJbmplY3Rpb25Ub2tlbjxMdVNpZGVwYW5lbENvbmZpZz4oJ0x1U2lkZXBhbmVsRGVmYXVsdENvbmZpZycsIHtcblx0ZmFjdG9yeTogKCkgPT4gbHVEZWZhdWx0U2lkZXBhbmVsQ29uZmlnLFxufSk7XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIExVX01PREFMX0RBVEEgZnJvbSBAbHVjY2EtZnJvbnQvbmcvbW9kYWwgaW5zdGVhZC5cbiAqL1xuZXhwb3J0IGNvbnN0IExVX1NJREVQQU5FTF9EQVRBID0gTFVfTU9EQUxfREFUQTtcblxuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2UgTFVfTU9EQUxfVFJBTlNMQVRJT05TIGZyb20gQGx1Y2NhLWZyb250L25nL21vZGFsIGluc3RlYWQuXG4gKi9cbmV4cG9ydCBjb25zdCBMVV9TSURFUEFORUxfVFJBTlNMQVRJT05TID0gbmV3IEluamVjdGlvblRva2VuKCdMdVNpZGVwYW5lbFRyYW5zbGF0aW9ucycsIHtcblx0ZmFjdG9yeTogKCkgPT4gbHVTaWRlcGFuZWxUcmFuc2xhdGlvbnMsXG59KTtcblxuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2UgSUx1TW9kYWxMYWJlbCBmcm9tIEBsdWNjYS1mcm9udC9uZy9tb2RhbCBpbnN0ZWFkLlxuICovXG5leHBvcnQgdHlwZSBJTHVTaWRlcGFuZWxMYWJlbCA9IElMdU1vZGFsTGFiZWw7XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIGx1TW9kYWxUcmFuc2xhdGlvbnMgZnJvbSBAbHVjY2EtZnJvbnQvbmcvbW9kYWwgaW5zdGVhZC5cbiAqL1xuZXhwb3J0IGNvbnN0IGx1U2lkZXBhbmVsVHJhbnNsYXRpb25zOiBJTHVUcmFuc2xhdGlvbjxJTHVTaWRlcGFuZWxMYWJlbD4gPSBsdU1vZGFsVHJhbnNsYXRpb25zO1xuXG4vKipcbiAqIEBkZXByZWNhdGVkIFVzZSBMdU1vZGFsQ29uZmlnIGZyb20gQGx1Y2NhLWZyb250L25nL21vZGFsIGluc3RlYWQuXG4gKi9cbmV4cG9ydCB0eXBlIEx1U2lkZXBhbmVsQ29uZmlnID0gTHVNb2RhbENvbmZpZztcblxuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2UgTHVNb2RhbENvbmZpZyBmcm9tIEBsdWNjYS1mcm9udC9uZy9tb2RhbCBpbnN0ZWFkLlxuICovXG5leHBvcnQgdHlwZSBJTHVTaWRlcGFuZWxDb25maWcgPSBMdU1vZGFsQ29uZmlnO1xuXG4vKipcbiAqIEBkZXByZWNhdGVkIFVzZSBJTHVNb2RhbENvbnRlbnQgZnJvbSBAbHVjY2EtZnJvbnQvbmcvbW9kYWwgaW5zdGVhZC5cbiAqL1xuZXhwb3J0IHR5cGUgSUx1U2lkZXBhbmVsQ29udGVudDxUID0gdW5rbm93bj4gPSBJTHVNb2RhbENvbnRlbnQ8VD47XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIElMdU1vZGFsUmVmIGZyb20gQGx1Y2NhLWZyb250L25nL21vZGFsIGluc3RlYWQuXG4gKi9cbmV4cG9ydCB0eXBlIElMdVNpZGVwYW5lbFJlZjxEID0gdW5rbm93biwgUiA9IHVua25vd24+ID0gSUx1TW9kYWxSZWY8RCwgUj47XG5cbmV4cG9ydCB7XG5cdC8qKlxuXHQgKiBAZGVwcmVjYXRlZCBVc2UgQUx1TW9kYWxSZWYgZnJvbSBAbHVjY2EtZnJvbnQvbmcvbW9kYWwgaW5zdGVhZC5cblx0ICovXG5cdEFMdVNpZGVwYW5lbFJlZixcbn07XG4iXX0=
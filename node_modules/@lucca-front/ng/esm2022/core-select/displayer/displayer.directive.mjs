import { Directive, Input } from '@angular/core';
import * as i0 from "@angular/core";
class LuDisplayerDirective {
    set select(select) {
        select.valueTpl = this.templateRef;
    }
    constructor(templateRef) {
        this.templateRef = templateRef;
    }
    static ngTemplateContextGuard(_dir, ctx) {
        return true;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuDisplayerDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.1.3", type: LuDisplayerDirective, isStandalone: true, selector: "[luDisplayer]", inputs: { select: ["luDisplayerSelect", "select"] }, ngImport: i0 }); }
}
export { LuDisplayerDirective };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuDisplayerDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[luDisplayer]',
                    standalone: true,
                }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { select: [{
                type: Input,
                args: ['luDisplayerSelect']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlzcGxheWVyLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL25nL2NvcmUtc2VsZWN0L2Rpc3BsYXllci9kaXNwbGF5ZXIuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFlLE1BQU0sZUFBZSxDQUFDOztBQUk5RCxNQUlhLG9CQUFvQjtJQUNoQyxJQUFnQyxNQUFNLENBQUMsTUFBMkM7UUFDakYsTUFBTSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDO0lBQ3BDLENBQUM7SUFFRCxZQUEyQixXQUE0QztRQUE1QyxnQkFBVyxHQUFYLFdBQVcsQ0FBaUM7SUFBRyxDQUFDO0lBRXBFLE1BQU0sQ0FBQyxzQkFBc0IsQ0FBSSxJQUE2QixFQUFFLEdBQVk7UUFDbEYsT0FBTyxJQUFJLENBQUM7SUFDYixDQUFDOzhHQVRXLG9CQUFvQjtrR0FBcEIsb0JBQW9COztTQUFwQixvQkFBb0I7MkZBQXBCLG9CQUFvQjtrQkFKaEMsU0FBUzttQkFBQztvQkFDVixRQUFRLEVBQUUsZUFBZTtvQkFDekIsVUFBVSxFQUFFLElBQUk7aUJBQ2hCO2tHQUVnQyxNQUFNO3NCQUFyQyxLQUFLO3VCQUFDLG1CQUFtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBTHVTZWxlY3RJbnB1dENvbXBvbmVudCB9IGZyb20gJy4uL2lucHV0JztcbmltcG9ydCB7IEx1T3B0aW9uQ29udGV4dCB9IGZyb20gJy4uL3NlbGVjdC5tb2RlbCc7XG5cbkBEaXJlY3RpdmUoe1xuXHRzZWxlY3RvcjogJ1tsdURpc3BsYXllcl0nLFxuXHRzdGFuZGFsb25lOiB0cnVlLFxufSlcbmV4cG9ydCBjbGFzcyBMdURpc3BsYXllckRpcmVjdGl2ZTxUPiB7XG5cdEBJbnB1dCgnbHVEaXNwbGF5ZXJTZWxlY3QnKSBzZXQgc2VsZWN0KHNlbGVjdDogQUx1U2VsZWN0SW5wdXRDb21wb25lbnQ8VCwgdW5rbm93bj4pIHtcblx0XHRzZWxlY3QudmFsdWVUcGwgPSB0aGlzLnRlbXBsYXRlUmVmO1xuXHR9XG5cblx0cHVibGljIGNvbnN0cnVjdG9yKHByaXZhdGUgdGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPEx1T3B0aW9uQ29udGV4dDxUPj4pIHt9XG5cblx0cHVibGljIHN0YXRpYyBuZ1RlbXBsYXRlQ29udGV4dEd1YXJkPFQ+KF9kaXI6IEx1RGlzcGxheWVyRGlyZWN0aXZlPFQ+LCBjdHg6IHVua25vd24pOiBjdHggaXMgTHVPcHRpb25Db250ZXh0PFQ+IHtcblx0XHRyZXR1cm4gdHJ1ZTtcblx0fVxufVxuIl19
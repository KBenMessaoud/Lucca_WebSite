import { CommonModule } from '@angular/common';
import { ChangeDetectionStrategy, Component, EventEmitter, forwardRef, Output } from '@angular/core';
import { ALuClearer } from './clearer.model';
import * as i0 from "@angular/core";
class LuInputClearerComponent extends ALuClearer {
    constructor() {
        super(...arguments);
        // eslint-disable-next-line @angular-eslint/no-output-on-prefix
        this.onClear = new EventEmitter();
    }
    onClick($event) {
        this.onClear.emit();
        $event.preventDefault();
        $event.stopPropagation();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuInputClearerComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.3", type: LuInputClearerComponent, isStandalone: true, selector: "lu-input-clearer", outputs: { onClear: "onClear" }, providers: [
            {
                provide: ALuClearer,
                useExisting: forwardRef(() => LuInputClearerComponent),
            },
        ], exportAs: ["luClearer"], usesInheritance: true, ngImport: i0, template: "<a href=\"#\" role=\"button\" class=\"clear\" (click)=\"onClick($event)\">\n\t<span class=\"u-mask\">Clear</span>\n</a>\n", styles: [":root{--components-options-item-padding-vertical: var(--spacings-XS);--components-options-item-padding-horizontal: var(--spacings-XS);--components-options-item-multiple-padding: 2.25rem;--components-options-item-icon-color: var(--palettes-grey-800);--components-options-checkbox-left: .5rem;--components-options-checkbox-size: 1.25rem;--components-options-checkbox-color: var(--palettes-primary-700);--components-options-checkbox-border-radius: 6px;--components-options-checkbox-border-color: var(--palettes-grey-700);--components-options-establishment-multiple-padding: 2rem}:host{display:none}:host-context(.textfield-input.is-filled){display:block}:host-context(.textfield-input.is-disabled,.textfield-input[disabled]){display:none}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { LuInputClearerComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuInputClearerComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lu-input-clearer', changeDetection: ChangeDetectionStrategy.OnPush, exportAs: 'luClearer', standalone: true, imports: [CommonModule], providers: [
                        {
                            provide: ALuClearer,
                            useExisting: forwardRef(() => LuInputClearerComponent),
                        },
                    ], template: "<a href=\"#\" role=\"button\" class=\"clear\" (click)=\"onClick($event)\">\n\t<span class=\"u-mask\">Clear</span>\n</a>\n", styles: [":root{--components-options-item-padding-vertical: var(--spacings-XS);--components-options-item-padding-horizontal: var(--spacings-XS);--components-options-item-multiple-padding: 2.25rem;--components-options-item-icon-color: var(--palettes-grey-800);--components-options-checkbox-left: .5rem;--components-options-checkbox-size: 1.25rem;--components-options-checkbox-color: var(--palettes-primary-700);--components-options-checkbox-border-radius: 6px;--components-options-checkbox-border-color: var(--palettes-grey-700);--components-options-establishment-multiple-padding: 2rem}:host{display:none}:host-context(.textfield-input.is-filled){display:block}:host-context(.textfield-input.is-disabled,.textfield-input[disabled]){display:none}\n"] }]
        }], propDecorators: { onClear: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xlYXJlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9uZy9pbnB1dC9jbGVhcmVyL2NsZWFyZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvbmcvaW5wdXQvY2xlYXJlci9jbGVhcmVyLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3JHLE9BQU8sRUFBRSxVQUFVLEVBQWMsTUFBTSxpQkFBaUIsQ0FBQzs7QUFFekQsTUFlYSx1QkFBMkIsU0FBUSxVQUFhO0lBZjdEOztRQWdCQywrREFBK0Q7UUFDNUMsWUFBTyxHQUFHLElBQUksWUFBWSxFQUFLLENBQUM7S0FNbkQ7SUFMQSxPQUFPLENBQUMsTUFBYTtRQUNwQixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ3BCLE1BQU0sQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN4QixNQUFNLENBQUMsZUFBZSxFQUFFLENBQUM7SUFDMUIsQ0FBQzs4R0FQVyx1QkFBdUI7a0dBQXZCLHVCQUF1QixnR0FQeEI7WUFDVjtnQkFDQyxPQUFPLEVBQUUsVUFBVTtnQkFDbkIsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQzthQUN0RDtTQUNELDBFQ2pCRiwySEFHQSwweEJEUVcsWUFBWTs7U0FRVix1QkFBdUI7MkZBQXZCLHVCQUF1QjtrQkFmbkMsU0FBUzsrQkFDQyxrQkFBa0IsbUJBR1gsdUJBQXVCLENBQUMsTUFBTSxZQUNyQyxXQUFXLGNBQ1QsSUFBSSxXQUNQLENBQUMsWUFBWSxDQUFDLGFBQ1o7d0JBQ1Y7NEJBQ0MsT0FBTyxFQUFFLFVBQVU7NEJBQ25CLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLHdCQUF3QixDQUFDO3lCQUN0RDtxQkFDRDs4QkFJa0IsT0FBTztzQkFBekIsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIGZvcndhcmRSZWYsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQUx1Q2xlYXJlciwgSUx1Q2xlYXJlciB9IGZyb20gJy4vY2xlYXJlci5tb2RlbCc7XG5cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogJ2x1LWlucHV0LWNsZWFyZXInLFxuXHR0ZW1wbGF0ZVVybDogJy4vY2xlYXJlci5jb21wb25lbnQuaHRtbCcsXG5cdHN0eWxlVXJsczogWycuL2NsZWFyZXIuY29tcG9uZW50LnNjc3MnXSxcblx0Y2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG5cdGV4cG9ydEFzOiAnbHVDbGVhcmVyJyxcblx0c3RhbmRhbG9uZTogdHJ1ZSxcblx0aW1wb3J0czogW0NvbW1vbk1vZHVsZV0sXG5cdHByb3ZpZGVyczogW1xuXHRcdHtcblx0XHRcdHByb3ZpZGU6IEFMdUNsZWFyZXIsXG5cdFx0XHR1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBMdUlucHV0Q2xlYXJlckNvbXBvbmVudCksXG5cdFx0fSxcblx0XSxcbn0pXG5leHBvcnQgY2xhc3MgTHVJbnB1dENsZWFyZXJDb21wb25lbnQ8VD4gZXh0ZW5kcyBBTHVDbGVhcmVyPFQ+IGltcGxlbWVudHMgSUx1Q2xlYXJlcjxUPiB7XG5cdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAYW5ndWxhci1lc2xpbnQvbm8tb3V0cHV0LW9uLXByZWZpeFxuXHRAT3V0cHV0KCkgb3ZlcnJpZGUgb25DbGVhciA9IG5ldyBFdmVudEVtaXR0ZXI8VD4oKTtcblx0b25DbGljaygkZXZlbnQ6IEV2ZW50KSB7XG5cdFx0dGhpcy5vbkNsZWFyLmVtaXQoKTtcblx0XHQkZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0XHQkZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdH1cbn1cbiIsIjxhIGhyZWY9XCIjXCIgcm9sZT1cImJ1dHRvblwiIGNsYXNzPVwiY2xlYXJcIiAoY2xpY2spPVwib25DbGljaygkZXZlbnQpXCI+XG5cdDxzcGFuIGNsYXNzPVwidS1tYXNrXCI+Q2xlYXI8L3NwYW4+XG48L2E+XG4iXX0=
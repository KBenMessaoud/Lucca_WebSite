//FIXME
/* eslint-disable @angular-eslint/no-output-on-prefix */
/* eslint-disable @angular-eslint/no-output-native */
import { A11yModule } from '@angular/cdk/a11y';
import { CommonModule } from '@angular/common';
import { ChangeDetectionStrategy, Component, EventEmitter, forwardRef, Input, Output, TemplateRef, ViewChild } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { ELuDateGranularity } from '@lucca-front/ng/core';
import { ALuPickerPanel } from '@lucca-front/ng/picker';
import { luTransformPopover } from '@lucca-front/ng/popover';
import { LuCalendarInputComponent } from '../calendar';
import { LuDateInputDirective } from '../input';
import * as i0 from "@angular/core";
import * as i1 from "@lucca-front/ng/core";
import * as i2 from "@angular/forms";
import * as i3 from "@angular/common";
import * as i4 from "@angular/cdk/a11y";
class LuDatePickerComponent extends ALuPickerPanel {
    set vcTemplateRef(tr) {
        this.templateRef = tr;
    }
    constructor(_adapter) {
        super();
        this._adapter = _adapter;
        this.granularity = ELuDateGranularity.day;
        this.startOn = this._adapter.forgeToday();
        this.close = new EventEmitter();
        this.open = new EventEmitter();
        this.hovered = new EventEmitter();
        this.onSelectValue = new EventEmitter();
    }
    _emitOpenEvent() {
        this.open.emit();
    }
    _emitCloseEvent() {
        this.close.emit();
    }
    _emitHoveredEvent(h) {
        this.hovered.emit(h);
    }
    _emitSelectValue(val) {
        this.onSelectValue.emit(val);
    }
    setValue(value) {
        this._value = value;
    }
    _onCalendar(val) {
        this._value = val;
        this._emitSelectValue(val);
        // if (!this.multiple) {
        this._emitCloseEvent();
        // }
    }
    _onInput(val) {
        this._value = val;
        this._emitSelectValue(val);
    }
    _onEnter() {
        this._emitCloseEvent();
    }
    _handleKeydown(event) {
        switch (event.key) {
            case 'Escape':
                this._emitCloseEvent();
                event.preventDefault();
                event.stopPropagation();
                break;
            case 'Tab':
                this._emitCloseEvent();
                break;
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuDatePickerComponent, deps: [{ token: i1.ALuDateAdapter }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.3", type: LuDatePickerComponent, isStandalone: true, selector: "lu-date-picker", inputs: { min: "min", max: "max", granularity: "granularity", startOn: "startOn" }, outputs: { close: "close", open: "open", hovered: "hovered", onSelectValue: "onSelectValue" }, providers: [
            {
                provide: ALuPickerPanel,
                useExisting: forwardRef(() => LuDatePickerComponent),
            },
        ], viewQueries: [{ propertyName: "vcTemplateRef", first: true, predicate: TemplateRef, descendants: true, static: true }], exportAs: ["LuDatePicker"], usesInheritance: true, ngImport: i0, template: "<ng-template>\n\t<div\n\t\tclass=\"lu-picker-panel lu-date-picker-panel\"\n\t\trole=\"dialog\"\n\t\t[ngClass]=\"panelClassesMap\"\n\t\t(click)=\"onClick()\"\n\t\t(mouseover)=\"onMouseOver()\"\n\t\t(mouseleave)=\"onMouseLeave()\"\n\t\t(mousedown)=\"onMouseDown()\"\n\t>\n\t\t<div class=\"lu-picker-content\" [ngClass]=\"contentClassesMap\" cdkTrapFocus=\"false\" cdkTrapFocusAutoCapture=\"true\">\n\t\t\t<label class=\"textfield lu-picker-textfield\">\n\t\t\t\t<input\n\t\t\t\t\tluDateInput\n\t\t\t\t\tclass=\"textfield-input\"\n\t\t\t\t\t[ngModel]=\"_value\"\n\t\t\t\t\t(ngModelChange)=\"_onInput($event)\"\n\t\t\t\t\t(keydown.enter)=\"_onEnter()\"\n\t\t\t\t\t[min]=\"min\"\n\t\t\t\t\t[max]=\"max\"\n\t\t\t\t\t[granularity]=\"granularity\"\n\t\t\t\t/>\n\t\t\t</label>\n\t\t\t<lu-calendar\n\t\t\t\t[ngModel]=\"_value\"\n\t\t\t\t(ngModelChange)=\"_onCalendar($event)\"\n\t\t\t\t[min]=\"min\"\n\t\t\t\t[max]=\"max\"\n\t\t\t\t[granularity]=\"granularity\"\n\t\t\t\t[startOn]=\"startOn\"\n\t\t\t></lu-calendar>\n\t\t</div>\n\t</div>\n</ng-template>\n", dependencies: [{ kind: "ngmodule", type: FormsModule }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i3.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "component", type: LuCalendarInputComponent, selector: "lu-calendar", inputs: ["min", "max", "granularity", "startOn"] }, { kind: "directive", type: LuDateInputDirective, selector: "input[luDateInput]", inputs: ["min", "max", "granularity", "placeholder"] }, { kind: "ngmodule", type: A11yModule }, { kind: "directive", type: i4.CdkTrapFocus, selector: "[cdkTrapFocus]", inputs: ["cdkTrapFocus", "cdkTrapFocusAutoCapture"], exportAs: ["cdkTrapFocus"] }], animations: [luTransformPopover], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { LuDatePickerComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuDatePickerComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lu-date-picker', changeDetection: ChangeDetectionStrategy.OnPush, exportAs: 'LuDatePicker', animations: [luTransformPopover], standalone: true, imports: [FormsModule, CommonModule, LuCalendarInputComponent, LuDateInputDirective, A11yModule], providers: [
                        {
                            provide: ALuPickerPanel,
                            useExisting: forwardRef(() => LuDatePickerComponent),
                        },
                    ], template: "<ng-template>\n\t<div\n\t\tclass=\"lu-picker-panel lu-date-picker-panel\"\n\t\trole=\"dialog\"\n\t\t[ngClass]=\"panelClassesMap\"\n\t\t(click)=\"onClick()\"\n\t\t(mouseover)=\"onMouseOver()\"\n\t\t(mouseleave)=\"onMouseLeave()\"\n\t\t(mousedown)=\"onMouseDown()\"\n\t>\n\t\t<div class=\"lu-picker-content\" [ngClass]=\"contentClassesMap\" cdkTrapFocus=\"false\" cdkTrapFocusAutoCapture=\"true\">\n\t\t\t<label class=\"textfield lu-picker-textfield\">\n\t\t\t\t<input\n\t\t\t\t\tluDateInput\n\t\t\t\t\tclass=\"textfield-input\"\n\t\t\t\t\t[ngModel]=\"_value\"\n\t\t\t\t\t(ngModelChange)=\"_onInput($event)\"\n\t\t\t\t\t(keydown.enter)=\"_onEnter()\"\n\t\t\t\t\t[min]=\"min\"\n\t\t\t\t\t[max]=\"max\"\n\t\t\t\t\t[granularity]=\"granularity\"\n\t\t\t\t/>\n\t\t\t</label>\n\t\t\t<lu-calendar\n\t\t\t\t[ngModel]=\"_value\"\n\t\t\t\t(ngModelChange)=\"_onCalendar($event)\"\n\t\t\t\t[min]=\"min\"\n\t\t\t\t[max]=\"max\"\n\t\t\t\t[granularity]=\"granularity\"\n\t\t\t\t[startOn]=\"startOn\"\n\t\t\t></lu-calendar>\n\t\t</div>\n\t</div>\n</ng-template>\n" }]
        }], ctorParameters: function () { return [{ type: i1.ALuDateAdapter }]; }, propDecorators: { min: [{
                type: Input
            }], max: [{
                type: Input
            }], granularity: [{
                type: Input
            }], startOn: [{
                type: Input
            }], close: [{
                type: Output
            }], open: [{
                type: Output
            }], hovered: [{
                type: Output
            }], onSelectValue: [{
                type: Output
            }], vcTemplateRef: [{
                type: ViewChild,
                args: [TemplateRef, { static: true }]
            }] } });
//# sourceMappingURL=data:application/json;base64,
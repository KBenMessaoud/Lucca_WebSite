import { ChangeDetectionStrategy, Component, forwardRef, Input } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { ALuOptionOperator } from '../option-operator.model';
import * as i0 from "@angular/core";
class LuOptionFeederComponent {
    constructor() {
        this.outOptions$ = new BehaviorSubject([]);
    }
    set options(options) {
        this.outOptions$.next(options);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuOptionFeederComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.3", type: LuOptionFeederComponent, isStandalone: true, selector: "lu-option-feeder", inputs: { options: "options" }, providers: [
            {
                provide: ALuOptionOperator,
                useExisting: forwardRef(() => LuOptionFeederComponent),
                multi: true,
            },
        ], ngImport: i0, template: '', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { LuOptionFeederComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuOptionFeederComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lu-option-feeder', template: '', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, providers: [
                        {
                            provide: ALuOptionOperator,
                            useExisting: forwardRef(() => LuOptionFeederComponent),
                            multi: true,
                        },
                    ] }]
        }], propDecorators: { options: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3B0aW9uLWZlZWRlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9uZy9vcHRpb24vb3BlcmF0b3IvZmVlZGVyL29wdGlvbi1mZWVkZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN0RixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQ3ZDLE9BQU8sRUFBRSxpQkFBaUIsRUFBcUIsTUFBTSwwQkFBMEIsQ0FBQzs7QUFFaEYsTUFjYSx1QkFBdUI7SUFkcEM7UUFlQyxnQkFBVyxHQUFHLElBQUksZUFBZSxDQUFNLEVBQUUsQ0FBQyxDQUFDO0tBSTNDO0lBSEEsSUFBYSxPQUFPLENBQUMsT0FBWTtRQUNoQyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNoQyxDQUFDOzhHQUpXLHVCQUF1QjtrR0FBdkIsdUJBQXVCLCtGQVJ4QjtZQUNWO2dCQUNDLE9BQU8sRUFBRSxpQkFBaUI7Z0JBQzFCLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsdUJBQXVCLENBQUM7Z0JBQ3RELEtBQUssRUFBRSxJQUFJO2FBQ1g7U0FDRCwwQkFWUyxFQUFFOztTQVlBLHVCQUF1QjsyRkFBdkIsdUJBQXVCO2tCQWRuQyxTQUFTOytCQUNDLGtCQUFrQixZQUNsQixFQUFFLG1CQUVLLHVCQUF1QixDQUFDLE1BQU0sY0FDbkMsSUFBSSxhQUNMO3dCQUNWOzRCQUNDLE9BQU8sRUFBRSxpQkFBaUI7NEJBQzFCLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLHdCQUF3QixDQUFDOzRCQUN0RCxLQUFLLEVBQUUsSUFBSTt5QkFDWDtxQkFDRDs4QkFJWSxPQUFPO3NCQUFuQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgZm9yd2FyZFJlZiwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJlaGF2aW9yU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgQUx1T3B0aW9uT3BlcmF0b3IsIElMdU9wdGlvbk9wZXJhdG9yIH0gZnJvbSAnLi4vb3B0aW9uLW9wZXJhdG9yLm1vZGVsJztcblxuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiAnbHUtb3B0aW9uLWZlZWRlcicsXG5cdHRlbXBsYXRlOiAnJyxcblx0c3R5bGVVcmxzOiBbXSxcblx0Y2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG5cdHN0YW5kYWxvbmU6IHRydWUsXG5cdHByb3ZpZGVyczogW1xuXHRcdHtcblx0XHRcdHByb3ZpZGU6IEFMdU9wdGlvbk9wZXJhdG9yLFxuXHRcdFx0dXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gTHVPcHRpb25GZWVkZXJDb21wb25lbnQpLFxuXHRcdFx0bXVsdGk6IHRydWUsXG5cdFx0fSxcblx0XSxcbn0pXG5leHBvcnQgY2xhc3MgTHVPcHRpb25GZWVkZXJDb21wb25lbnQ8VD4gaW1wbGVtZW50cyBJTHVPcHRpb25PcGVyYXRvcjxUPiB7XG5cdG91dE9wdGlvbnMkID0gbmV3IEJlaGF2aW9yU3ViamVjdDxUW10+KFtdKTtcblx0QElucHV0KCkgc2V0IG9wdGlvbnMob3B0aW9uczogVFtdKSB7XG5cdFx0dGhpcy5vdXRPcHRpb25zJC5uZXh0KG9wdGlvbnMpO1xuXHR9XG59XG4iXX0=
import { ChangeDetectionStrategy, Component, forwardRef, HostBinding } from '@angular/core';
import { getIntl } from '@lucca-front/ng/core';
import { Subject } from 'rxjs';
import { tap } from 'rxjs/operators';
import { ALuOptionOperator } from '../../operator/option-operator.model';
import { ALuOptionSelector } from '../option-selector.model';
import { LU_OPTION_SELECT_ALL_TRANSLATIONS } from './select-all.translate';
import * as i0 from "@angular/core";
class LuOptionSelectAllComponent extends ALuOptionOperator {
    constructor() {
        super(...arguments);
        this.multiple = true;
        this.onSelectValue = new Subject();
        this.fixed = true;
        this.intl = getIntl(LU_OPTION_SELECT_ALL_TRANSLATIONS);
    }
    set inOptions$(in$) {
        this.outOptions$ = in$.pipe(tap((options) => (this.options = options)));
    }
    selectAll() {
        this.onSelectValue.next([...this.options]);
    }
    deselectAll() {
        this.onSelectValue.next([]);
    }
    setValue(values) {
        this._values = values;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuOptionSelectAllComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.3", type: LuOptionSelectAllComponent, isStandalone: true, selector: "lu-option-select-all", host: { properties: { "class.position-fixed": "this.fixed" } }, providers: [
            {
                provide: ALuOptionOperator,
                useExisting: forwardRef(() => LuOptionSelectAllComponent),
                multi: true,
            },
            {
                provide: ALuOptionSelector,
                useExisting: forwardRef(() => LuOptionSelectAllComponent),
                multi: true,
            },
        ], usesInheritance: true, ngImport: i0, template: "<button type=\"button\" (click)=\"selectAll()\" class=\"link selectAll-button\">{{ intl.select }}</button>\n<button type=\"button\" (click)=\"deselectAll()\" class=\"link selectAll-button u-marginLeftXS\">{{ intl.deselect }}</button>\n", styles: [":root{--components-options-item-padding-vertical: var(--spacings-XS);--components-options-item-padding-horizontal: var(--spacings-XS);--components-options-item-multiple-padding: 2.25rem;--components-options-item-icon-color: var(--palettes-grey-800);--components-options-checkbox-left: .5rem;--components-options-checkbox-size: 1.25rem;--components-options-checkbox-color: var(--palettes-primary-700);--components-options-checkbox-border-radius: 6px;--components-options-checkbox-border-color: var(--palettes-grey-700);--components-options-establishment-multiple-padding: 2rem}:host .selectAll-button{color:var(--palettes-grey-600);font-size:var(--sizes-S-fontSize);outline:none}:host .selectAll-button:hover{color:var(--palettes-grey-800)}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { LuOptionSelectAllComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuOptionSelectAllComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lu-option-select-all', changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, providers: [
                        {
                            provide: ALuOptionOperator,
                            useExisting: forwardRef(() => LuOptionSelectAllComponent),
                            multi: true,
                        },
                        {
                            provide: ALuOptionSelector,
                            useExisting: forwardRef(() => LuOptionSelectAllComponent),
                            multi: true,
                        },
                    ], template: "<button type=\"button\" (click)=\"selectAll()\" class=\"link selectAll-button\">{{ intl.select }}</button>\n<button type=\"button\" (click)=\"deselectAll()\" class=\"link selectAll-button u-marginLeftXS\">{{ intl.deselect }}</button>\n", styles: [":root{--components-options-item-padding-vertical: var(--spacings-XS);--components-options-item-padding-horizontal: var(--spacings-XS);--components-options-item-multiple-padding: 2.25rem;--components-options-item-icon-color: var(--palettes-grey-800);--components-options-checkbox-left: .5rem;--components-options-checkbox-size: 1.25rem;--components-options-checkbox-color: var(--palettes-primary-700);--components-options-checkbox-border-radius: 6px;--components-options-checkbox-border-color: var(--palettes-grey-700);--components-options-establishment-multiple-padding: 2rem}:host .selectAll-button{color:var(--palettes-grey-600);font-size:var(--sizes-S-fontSize);outline:none}:host .selectAll-button:hover{color:var(--palettes-grey-800)}\n"] }]
        }], propDecorators: { fixed: [{
                type: HostBinding,
                args: ['class.position-fixed']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LWFsbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9uZy9vcHRpb24vc2VsZWN0b3IvYWxsL3NlbGVjdC1hbGwuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvbmcvb3B0aW9uL3NlbGVjdG9yL2FsbC9zZWxlY3QtYWxsLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM1RixPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDL0MsT0FBTyxFQUFjLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUMzQyxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDckMsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDekUsT0FBTyxFQUFFLGlCQUFpQixFQUFxQixNQUFNLDBCQUEwQixDQUFDO0FBQ2hGLE9BQU8sRUFBRSxpQ0FBaUMsRUFBRSxNQUFNLHdCQUF3QixDQUFDOztBQUUzRSxNQW1CYSwwQkFBOEIsU0FBUSxpQkFBb0I7SUFuQnZFOztRQW9CQyxhQUFRLEdBQUcsSUFBSSxDQUFDO1FBQ2hCLGtCQUFhLEdBQUcsSUFBSSxPQUFPLEVBQVcsQ0FBQztRQUdGLFVBQUssR0FBRyxJQUFJLENBQUM7UUFPM0MsU0FBSSxHQUFHLE9BQU8sQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDO0tBV3pEO0lBZkEsSUFBSSxVQUFVLENBQUMsR0FBb0I7UUFDbEMsSUFBSSxDQUFDLFdBQVcsR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sRUFBRSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN6RSxDQUFDO0lBSUQsU0FBUztRQUNSLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztJQUM1QyxDQUFDO0lBQ0QsV0FBVztRQUNWLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQzdCLENBQUM7SUFDRCxRQUFRLENBQUMsTUFBZTtRQUN2QixJQUFJLENBQUMsT0FBTyxHQUFHLE1BQWEsQ0FBQztJQUM5QixDQUFDOzhHQXRCVywwQkFBMEI7a0dBQTFCLDBCQUEwQixtSUFiM0I7WUFDVjtnQkFDQyxPQUFPLEVBQUUsaUJBQWlCO2dCQUMxQixXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLDBCQUEwQixDQUFDO2dCQUN6RCxLQUFLLEVBQUUsSUFBSTthQUNYO1lBQ0Q7Z0JBQ0MsT0FBTyxFQUFFLGlCQUFpQjtnQkFDMUIsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQywwQkFBMEIsQ0FBQztnQkFDekQsS0FBSyxFQUFFLElBQUk7YUFDWDtTQUNELGlEQ3pCRiw2T0FFQTs7U0R5QmEsMEJBQTBCOzJGQUExQiwwQkFBMEI7a0JBbkJ0QyxTQUFTOytCQUNDLHNCQUFzQixtQkFHZix1QkFBdUIsQ0FBQyxNQUFNLGNBQ25DLElBQUksYUFDTDt3QkFDVjs0QkFDQyxPQUFPLEVBQUUsaUJBQWlCOzRCQUMxQixXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSwyQkFBMkIsQ0FBQzs0QkFDekQsS0FBSyxFQUFFLElBQUk7eUJBQ1g7d0JBQ0Q7NEJBQ0MsT0FBTyxFQUFFLGlCQUFpQjs0QkFDMUIsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsMkJBQTJCLENBQUM7NEJBQ3pELEtBQUssRUFBRSxJQUFJO3lCQUNYO3FCQUNEOzhCQU9vQyxLQUFLO3NCQUF6QyxXQUFXO3VCQUFDLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIGZvcndhcmRSZWYsIEhvc3RCaW5kaW5nIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBnZXRJbnRsIH0gZnJvbSAnQGx1Y2NhLWZyb250L25nL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgdGFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgQUx1T3B0aW9uT3BlcmF0b3IgfSBmcm9tICcuLi8uLi9vcGVyYXRvci9vcHRpb24tb3BlcmF0b3IubW9kZWwnO1xuaW1wb3J0IHsgQUx1T3B0aW9uU2VsZWN0b3IsIElMdU9wdGlvblNlbGVjdG9yIH0gZnJvbSAnLi4vb3B0aW9uLXNlbGVjdG9yLm1vZGVsJztcbmltcG9ydCB7IExVX09QVElPTl9TRUxFQ1RfQUxMX1RSQU5TTEFUSU9OUyB9IGZyb20gJy4vc2VsZWN0LWFsbC50cmFuc2xhdGUnO1xuXG5AQ29tcG9uZW50KHtcblx0c2VsZWN0b3I6ICdsdS1vcHRpb24tc2VsZWN0LWFsbCcsXG5cdHRlbXBsYXRlVXJsOiAnLi9zZWxlY3QtYWxsLmNvbXBvbmVudC5odG1sJyxcblx0c3R5bGVVcmxzOiBbJ3NlbGVjdC1hbGwuY29tcG9uZW50LnNjc3MnXSxcblx0Y2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG5cdHN0YW5kYWxvbmU6IHRydWUsXG5cdHByb3ZpZGVyczogW1xuXHRcdHtcblx0XHRcdHByb3ZpZGU6IEFMdU9wdGlvbk9wZXJhdG9yLFxuXHRcdFx0dXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gTHVPcHRpb25TZWxlY3RBbGxDb21wb25lbnQpLFxuXHRcdFx0bXVsdGk6IHRydWUsXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRwcm92aWRlOiBBTHVPcHRpb25TZWxlY3Rvcixcblx0XHRcdHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IEx1T3B0aW9uU2VsZWN0QWxsQ29tcG9uZW50KSxcblx0XHRcdG11bHRpOiB0cnVlLFxuXHRcdH0sXG5cdF0sXG59KVxuZXhwb3J0IGNsYXNzIEx1T3B0aW9uU2VsZWN0QWxsQ29tcG9uZW50PFQ+IGV4dGVuZHMgQUx1T3B0aW9uT3BlcmF0b3I8VD4gaW1wbGVtZW50cyBJTHVPcHRpb25TZWxlY3RvcjxUPiB7XG5cdG11bHRpcGxlID0gdHJ1ZTtcblx0b25TZWxlY3RWYWx1ZSA9IG5ldyBTdWJqZWN0PFQgfCBUW10+KCk7XG5cdHByaXZhdGUgX3ZhbHVlczogVFtdO1xuXG5cdEBIb3N0QmluZGluZygnY2xhc3MucG9zaXRpb24tZml4ZWQnKSBmaXhlZCA9IHRydWU7XG5cdG9wdGlvbnM6IFRbXTtcblx0b3V0T3B0aW9ucyQ6IE9ic2VydmFibGU8VFtdPjtcblx0c2V0IGluT3B0aW9ucyQoaW4kOiBPYnNlcnZhYmxlPFRbXT4pIHtcblx0XHR0aGlzLm91dE9wdGlvbnMkID0gaW4kLnBpcGUodGFwKChvcHRpb25zKSA9PiAodGhpcy5vcHRpb25zID0gb3B0aW9ucykpKTtcblx0fVxuXG5cdHB1YmxpYyBpbnRsID0gZ2V0SW50bChMVV9PUFRJT05fU0VMRUNUX0FMTF9UUkFOU0xBVElPTlMpO1xuXG5cdHNlbGVjdEFsbCgpIHtcblx0XHR0aGlzLm9uU2VsZWN0VmFsdWUubmV4dChbLi4udGhpcy5vcHRpb25zXSk7XG5cdH1cblx0ZGVzZWxlY3RBbGwoKSB7XG5cdFx0dGhpcy5vblNlbGVjdFZhbHVlLm5leHQoW10pO1xuXHR9XG5cdHNldFZhbHVlKHZhbHVlczogVCB8IFRbXSk6IHZvaWQge1xuXHRcdHRoaXMuX3ZhbHVlcyA9IHZhbHVlcyBhcyBUW107XG5cdH1cbn1cbiIsIjxidXR0b24gdHlwZT1cImJ1dHRvblwiIChjbGljayk9XCJzZWxlY3RBbGwoKVwiIGNsYXNzPVwibGluayBzZWxlY3RBbGwtYnV0dG9uXCI+e3sgaW50bC5zZWxlY3QgfX08L2J1dHRvbj5cbjxidXR0b24gdHlwZT1cImJ1dHRvblwiIChjbGljayk9XCJkZXNlbGVjdEFsbCgpXCIgY2xhc3M9XCJsaW5rIHNlbGVjdEFsbC1idXR0b24gdS1tYXJnaW5MZWZ0WFNcIj57eyBpbnRsLmRlc2VsZWN0IH19PC9idXR0b24+XG4iXX0=
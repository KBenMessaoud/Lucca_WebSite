import { ChangeDetectionStrategy, Component } from '@angular/core';
import { FieldType } from '@ngx-formly/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@lucca-front/ng/api";
import * as i3 from "@ngx-formly/core";
class LuFormlyFieldApi extends FieldType {
    get _api() {
        return this.props['api'];
    }
    get _filters() {
        return (this.props['filters'] || []);
    }
    get _orderBy() {
        return this.props['orderBy'];
    }
    get _sort() {
        return this.props['sort'];
    }
    get _standard() {
        return (this.props['standard'] || 'v3');
    }
    focus() {
        this.props['_isFocused'] = true;
    }
    blur() {
        this.props['_isFocused'] = false;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuFormlyFieldApi, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.3", type: LuFormlyFieldApi, selector: "lu-formly-field-api", usesInheritance: true, ngImport: i0, template: "<lu-api-select\n\tclass=\"textfield-input\"\n\t[formControl]=\"formControl\"\n\t[formlyAttributes]=\"field\"\n\t[multiple]=\"props['multiple']\"\n\t(focus)=\"focus()\"\n\t(blur)=\"blur()\"\n\t[placeholder]=\"props.placeholder\"\n\t[api]=\"_api\"\n\t[filters]=\"_filters\"\n\t[orderBy]=\"_orderBy\"\n\t[sort]=\"_sort\"\n\t[standard]=\"_standard\"\n>\n</lu-api-select>\n<span [attr.for]=\"id\" class=\"textfield-label\">{{ props.label }}</span>\n", styles: [":host{width:100%;display:inherit;align-items:inherit;flex-direction:inherit}\n", ":host-context(.mod-framed) lu-select{display:block}:host-context(.mod-framed) lu-api-select{display:block}:host-context(.mod-framed) lu-user-select{display:block}:host-context(.mod-framed) lu-date-select{display:block}:host-context(.mod-framed) lu-department-select{display:block}\n"], dependencies: [{ kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "component", type: i2.LuApiSelectInputComponent, selector: "lu-api-select", inputs: ["standard", "api", "fields", "filters", "orderBy", "sort"] }, { kind: "directive", type: i3.ɵFormlyAttributes, selector: "[formlyAttributes]", inputs: ["formlyAttributes", "id"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { LuFormlyFieldApi };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuFormlyFieldApi, decorators: [{
            type: Component,
            args: [{ selector: 'lu-formly-field-api', changeDetection: ChangeDetectionStrategy.OnPush, template: "<lu-api-select\n\tclass=\"textfield-input\"\n\t[formControl]=\"formControl\"\n\t[formlyAttributes]=\"field\"\n\t[multiple]=\"props['multiple']\"\n\t(focus)=\"focus()\"\n\t(blur)=\"blur()\"\n\t[placeholder]=\"props.placeholder\"\n\t[api]=\"_api\"\n\t[filters]=\"_filters\"\n\t[orderBy]=\"_orderBy\"\n\t[sort]=\"_sort\"\n\t[standard]=\"_standard\"\n>\n</lu-api-select>\n<span [attr.for]=\"id\" class=\"textfield-label\">{{ props.label }}</span>\n", styles: [":host{width:100%;display:inherit;align-items:inherit;flex-direction:inherit}\n", ":host-context(.mod-framed) lu-select{display:block}:host-context(.mod-framed) lu-api-select{display:block}:host-context(.mod-framed) lu-user-select{display:block}:host-context(.mod-framed) lu-date-select{display:block}:host-context(.mod-framed) lu-department-select{display:block}\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBpLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvbmcvZm9ybWx5L3R5cGVzL2FwaS50cyIsIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL25nL2Zvcm1seS90eXBlcy9hcGkuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25FLE9BQU8sRUFBRSxTQUFTLEVBQW1CLE1BQU0sa0JBQWtCLENBQUM7Ozs7O0FBRTlELE1BT2EsZ0JBQWlCLFNBQVEsU0FBMEI7SUFDL0QsSUFBSSxJQUFJO1FBQ1AsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBVyxDQUFDO0lBQ3BDLENBQUM7SUFDRCxJQUFJLFFBQVE7UUFDWCxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFLENBQWEsQ0FBQztJQUNsRCxDQUFDO0lBQ0QsSUFBSSxRQUFRO1FBQ1gsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBVyxDQUFDO0lBQ3hDLENBQUM7SUFDRCxJQUFJLEtBQUs7UUFDUixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFXLENBQUM7SUFDckMsQ0FBQztJQUNELElBQUksU0FBUztRQUNaLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxJQUFJLElBQUksQ0FBZ0IsQ0FBQztJQUN4RCxDQUFDO0lBQ0QsS0FBSztRQUNKLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLEdBQUcsSUFBSSxDQUFDO0lBQ2pDLENBQUM7SUFDRCxJQUFJO1FBQ0gsSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDbEMsQ0FBQzs4R0FyQlcsZ0JBQWdCO2tHQUFoQixnQkFBZ0Isa0ZDVjdCLDhiQWdCQTs7U0ROYSxnQkFBZ0I7MkZBQWhCLGdCQUFnQjtrQkFQNUIsU0FBUzsrQkFDQyxxQkFBcUIsbUJBR2QsdUJBQXVCLENBQUMsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZpZWxkVHlwZSwgRmllbGRUeXBlQ29uZmlnIH0gZnJvbSAnQG5neC1mb3JtbHkvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuXHRzZWxlY3RvcjogJ2x1LWZvcm1seS1maWVsZC1hcGknLFxuXHRzdHlsZVVybHM6IFsnZm9ybWx5LWZpZWxkLmNvbW1vbi5zY3NzJywgJ3NlbGVjdC5zY3NzJ10sXG5cdHRlbXBsYXRlVXJsOiAnLi9hcGkuaHRtbCcsXG5cdGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAYW5ndWxhci1lc2xpbnQvY29tcG9uZW50LWNsYXNzLXN1ZmZpeFxuZXhwb3J0IGNsYXNzIEx1Rm9ybWx5RmllbGRBcGkgZXh0ZW5kcyBGaWVsZFR5cGU8RmllbGRUeXBlQ29uZmlnPiB7XG5cdGdldCBfYXBpKCkge1xuXHRcdHJldHVybiB0aGlzLnByb3BzWydhcGknXSBhcyBzdHJpbmc7XG5cdH1cblx0Z2V0IF9maWx0ZXJzKCkge1xuXHRcdHJldHVybiAodGhpcy5wcm9wc1snZmlsdGVycyddIHx8IFtdKSBhcyBzdHJpbmdbXTtcblx0fVxuXHRnZXQgX29yZGVyQnkoKSB7XG5cdFx0cmV0dXJuIHRoaXMucHJvcHNbJ29yZGVyQnknXSBhcyBzdHJpbmc7XG5cdH1cblx0Z2V0IF9zb3J0KCkge1xuXHRcdHJldHVybiB0aGlzLnByb3BzWydzb3J0J10gYXMgc3RyaW5nO1xuXHR9XG5cdGdldCBfc3RhbmRhcmQoKSB7XG5cdFx0cmV0dXJuICh0aGlzLnByb3BzWydzdGFuZGFyZCddIHx8ICd2MycpIGFzICd2MycgfCAndjQnO1xuXHR9XG5cdGZvY3VzKCkge1xuXHRcdHRoaXMucHJvcHNbJ19pc0ZvY3VzZWQnXSA9IHRydWU7XG5cdH1cblx0Ymx1cigpIHtcblx0XHR0aGlzLnByb3BzWydfaXNGb2N1c2VkJ10gPSBmYWxzZTtcblx0fVxufVxuIiwiPGx1LWFwaS1zZWxlY3Rcblx0Y2xhc3M9XCJ0ZXh0ZmllbGQtaW5wdXRcIlxuXHRbZm9ybUNvbnRyb2xdPVwiZm9ybUNvbnRyb2xcIlxuXHRbZm9ybWx5QXR0cmlidXRlc109XCJmaWVsZFwiXG5cdFttdWx0aXBsZV09XCJwcm9wc1snbXVsdGlwbGUnXVwiXG5cdChmb2N1cyk9XCJmb2N1cygpXCJcblx0KGJsdXIpPVwiYmx1cigpXCJcblx0W3BsYWNlaG9sZGVyXT1cInByb3BzLnBsYWNlaG9sZGVyXCJcblx0W2FwaV09XCJfYXBpXCJcblx0W2ZpbHRlcnNdPVwiX2ZpbHRlcnNcIlxuXHRbb3JkZXJCeV09XCJfb3JkZXJCeVwiXG5cdFtzb3J0XT1cIl9zb3J0XCJcblx0W3N0YW5kYXJkXT1cIl9zdGFuZGFyZFwiXG4+XG48L2x1LWFwaS1zZWxlY3Q+XG48c3BhbiBbYXR0ci5mb3JdPVwiaWRcIiBjbGFzcz1cInRleHRmaWVsZC1sYWJlbFwiPnt7IHByb3BzLmxhYmVsIH19PC9zcGFuPlxuIl19
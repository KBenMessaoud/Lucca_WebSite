import { ChangeDetectionStrategy, Component } from '@angular/core';
import { FieldType } from '@ngx-formly/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/forms";
import * as i3 from "@lucca-front/ng/select";
import * as i4 from "@lucca-front/ng/option";
import * as i5 from "@lucca-front/ng/input";
import * as i6 from "@ngx-formly/core";
class LuFormlyFieldSelect extends FieldType {
    get _options() {
        return (this.props.options || []);
    }
    focus() {
        this.props['_isFocused'] = true;
    }
    blur() {
        this.props['_isFocused'] = false;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuFormlyFieldSelect, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.3", type: LuFormlyFieldSelect, selector: "lu-formly-field-select", usesInheritance: true, ngImport: i0, template: "<lu-select\n\tclass=\"textfield-input\"\n\t[formControl]=\"formControl\"\n\t[formlyAttributes]=\"field\"\n\t(focus)=\"focus()\"\n\t(blur)=\"blur()\"\n\t[multiple]=\"props['multiple']\"\n\t[placeholder]=\"props.placeholder\"\n>\n\t<ng-container *luDisplayer=\"let option\">\n\t\t<span [class.chip]=\"props['multiple']\" [class.mod-unkillable]=\"props['multiple']\">{{ option.name }}</span>\n\t</ng-container>\n\t<lu-option-picker>\n\t\t<lu-option *ngFor=\"let option of _options\" [value]=\"option\"> {{ option.name }} </lu-option>\n\t</lu-option-picker>\n\t<lu-input-clearer *ngIf=\"!props.required && !props['multiple']\"></lu-input-clearer>\n</lu-select>\n<span class=\"textfield-label\">{{ props.label }}</span>\n", styles: [":host{width:100%;display:inherit;align-items:inherit;flex-direction:inherit}\n", ":host-context(.mod-framed) lu-select{display:block}:host-context(.mod-framed) lu-api-select{display:block}:host-context(.mod-framed) lu-user-select{display:block}:host-context(.mod-framed) lu-date-select{display:block}:host-context(.mod-framed) lu-department-select{display:block}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "component", type: i3.LuSelectInputComponent, selector: "lu-select" }, { kind: "component", type: i4.LuOptionItemComponent, selector: "lu-option", inputs: ["selected", "highlighted", "value", "disabled"], outputs: ["onSelect"] }, { kind: "component", type: i4.LuOptionPickerComponent, selector: "lu-option-picker", exportAs: ["LuOptionPicker"] }, { kind: "directive", type: i5.LuInputDisplayerDirective, selector: "[luDisplayer]", inputs: ["luDisplayerMultiple", "multiple"] }, { kind: "component", type: i5.LuInputClearerComponent, selector: "lu-input-clearer", outputs: ["onClear"], exportAs: ["luClearer"] }, { kind: "directive", type: i6.ɵFormlyAttributes, selector: "[formlyAttributes]", inputs: ["formlyAttributes", "id"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { LuFormlyFieldSelect };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuFormlyFieldSelect, decorators: [{
            type: Component,
            args: [{ selector: 'lu-formly-field-select', changeDetection: ChangeDetectionStrategy.OnPush, template: "<lu-select\n\tclass=\"textfield-input\"\n\t[formControl]=\"formControl\"\n\t[formlyAttributes]=\"field\"\n\t(focus)=\"focus()\"\n\t(blur)=\"blur()\"\n\t[multiple]=\"props['multiple']\"\n\t[placeholder]=\"props.placeholder\"\n>\n\t<ng-container *luDisplayer=\"let option\">\n\t\t<span [class.chip]=\"props['multiple']\" [class.mod-unkillable]=\"props['multiple']\">{{ option.name }}</span>\n\t</ng-container>\n\t<lu-option-picker>\n\t\t<lu-option *ngFor=\"let option of _options\" [value]=\"option\"> {{ option.name }} </lu-option>\n\t</lu-option-picker>\n\t<lu-input-clearer *ngIf=\"!props.required && !props['multiple']\"></lu-input-clearer>\n</lu-select>\n<span class=\"textfield-label\">{{ props.label }}</span>\n", styles: [":host{width:100%;display:inherit;align-items:inherit;flex-direction:inherit}\n", ":host-context(.mod-framed) lu-select{display:block}:host-context(.mod-framed) lu-api-select{display:block}:host-context(.mod-framed) lu-user-select{display:block}:host-context(.mod-framed) lu-date-select{display:block}:host-context(.mod-framed) lu-department-select{display:block}\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvbmcvZm9ybWx5L3R5cGVzL3NlbGVjdC50cyIsIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL25nL2Zvcm1seS90eXBlcy9zZWxlY3QuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25FLE9BQU8sRUFBRSxTQUFTLEVBQW1CLE1BQU0sa0JBQWtCLENBQUM7Ozs7Ozs7O0FBRTlELE1BT2EsbUJBQW9CLFNBQVEsU0FBMEI7SUFDbEUsSUFBSSxRQUFRO1FBQ1gsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxJQUFJLEVBQUUsQ0FBdUQsQ0FBQztJQUN6RixDQUFDO0lBQ0QsS0FBSztRQUNKLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLEdBQUcsSUFBSSxDQUFDO0lBQ2pDLENBQUM7SUFDRCxJQUFJO1FBQ0gsSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDbEMsQ0FBQzs4R0FUVyxtQkFBbUI7a0dBQW5CLG1CQUFtQixxRkNWaEMsOHNCQWtCQTs7U0RSYSxtQkFBbUI7MkZBQW5CLG1CQUFtQjtrQkFQL0IsU0FBUzsrQkFDQyx3QkFBd0IsbUJBR2pCLHVCQUF1QixDQUFDLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGaWVsZFR5cGUsIEZpZWxkVHlwZUNvbmZpZyB9IGZyb20gJ0BuZ3gtZm9ybWx5L2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcblx0c2VsZWN0b3I6ICdsdS1mb3JtbHktZmllbGQtc2VsZWN0Jyxcblx0c3R5bGVVcmxzOiBbJ2Zvcm1seS1maWVsZC5jb21tb24uc2NzcycsICdzZWxlY3Quc2NzcyddLFxuXHR0ZW1wbGF0ZVVybDogJy4vc2VsZWN0Lmh0bWwnLFxuXHRjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQGFuZ3VsYXItZXNsaW50L2NvbXBvbmVudC1jbGFzcy1zdWZmaXhcbmV4cG9ydCBjbGFzcyBMdUZvcm1seUZpZWxkU2VsZWN0IGV4dGVuZHMgRmllbGRUeXBlPEZpZWxkVHlwZUNvbmZpZz4ge1xuXHRnZXQgX29wdGlvbnMoKSB7XG5cdFx0cmV0dXJuICh0aGlzLnByb3BzLm9wdGlvbnMgfHwgW10pIGFzIHsgdmFsdWU6IHVua25vd247IGxhYmVsOiB1bmtub3duOyBuYW1lOiBzdHJpbmcgfVtdO1xuXHR9XG5cdGZvY3VzKCkge1xuXHRcdHRoaXMucHJvcHNbJ19pc0ZvY3VzZWQnXSA9IHRydWU7XG5cdH1cblx0Ymx1cigpIHtcblx0XHR0aGlzLnByb3BzWydfaXNGb2N1c2VkJ10gPSBmYWxzZTtcblx0fVxufVxuIiwiPGx1LXNlbGVjdFxuXHRjbGFzcz1cInRleHRmaWVsZC1pbnB1dFwiXG5cdFtmb3JtQ29udHJvbF09XCJmb3JtQ29udHJvbFwiXG5cdFtmb3JtbHlBdHRyaWJ1dGVzXT1cImZpZWxkXCJcblx0KGZvY3VzKT1cImZvY3VzKClcIlxuXHQoYmx1cik9XCJibHVyKClcIlxuXHRbbXVsdGlwbGVdPVwicHJvcHNbJ211bHRpcGxlJ11cIlxuXHRbcGxhY2Vob2xkZXJdPVwicHJvcHMucGxhY2Vob2xkZXJcIlxuPlxuXHQ8bmctY29udGFpbmVyICpsdURpc3BsYXllcj1cImxldCBvcHRpb25cIj5cblx0XHQ8c3BhbiBbY2xhc3MuY2hpcF09XCJwcm9wc1snbXVsdGlwbGUnXVwiIFtjbGFzcy5tb2QtdW5raWxsYWJsZV09XCJwcm9wc1snbXVsdGlwbGUnXVwiPnt7IG9wdGlvbi5uYW1lIH19PC9zcGFuPlxuXHQ8L25nLWNvbnRhaW5lcj5cblx0PGx1LW9wdGlvbi1waWNrZXI+XG5cdFx0PGx1LW9wdGlvbiAqbmdGb3I9XCJsZXQgb3B0aW9uIG9mIF9vcHRpb25zXCIgW3ZhbHVlXT1cIm9wdGlvblwiPiB7eyBvcHRpb24ubmFtZSB9fSA8L2x1LW9wdGlvbj5cblx0PC9sdS1vcHRpb24tcGlja2VyPlxuXHQ8bHUtaW5wdXQtY2xlYXJlciAqbmdJZj1cIiFwcm9wcy5yZXF1aXJlZCAmJiAhcHJvcHNbJ211bHRpcGxlJ11cIj48L2x1LWlucHV0LWNsZWFyZXI+XG48L2x1LXNlbGVjdD5cbjxzcGFuIGNsYXNzPVwidGV4dGZpZWxkLWxhYmVsXCI+e3sgcHJvcHMubGFiZWwgfX08L3NwYW4+XG4iXX0=
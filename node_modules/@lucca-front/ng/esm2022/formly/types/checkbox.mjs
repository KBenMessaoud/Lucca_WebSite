import { ChangeDetectionStrategy, Component } from '@angular/core';
import { FieldType } from '@ngx-formly/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/forms";
import * as i3 from "@ngx-formly/core";
class LuFormlyFieldCheckbox extends FieldType {
    focus() {
        this.props['_isFocused'] = true;
    }
    blur() {
        this.props['_isFocused'] = false;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuFormlyFieldCheckbox, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.3", type: LuFormlyFieldCheckbox, selector: "lu-formly-field-checkbox", usesInheritance: true, ngImport: i0, template: "<label class=\"checkbox\" [ngClass]=\"props['mod']\">\n\t<input\n\t\tclass=\"checkbox-input\"\n\t\ttype=\"checkbox\"\n\t\t[name]=\"props['name']\"\n\t\t[id]=\"id\"\n\t\t[formControl]=\"formControl\"\n\t\t[formlyAttributes]=\"field\"\n\t\t(focus)=\"focus()\"\n\t\t(blur)=\"blur()\"\n\t/>\n\t<span class=\"checkbox-label\">{{props.label}}</span>\n</label>\n", styles: [":host{width:100%;display:inherit;align-items:inherit;flex-direction:inherit}\n"], dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i2.CheckboxControlValueAccessor, selector: "input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]" }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "directive", type: i3.ɵFormlyAttributes, selector: "[formlyAttributes]", inputs: ["formlyAttributes", "id"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { LuFormlyFieldCheckbox };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuFormlyFieldCheckbox, decorators: [{
            type: Component,
            args: [{ selector: 'lu-formly-field-checkbox', changeDetection: ChangeDetectionStrategy.OnPush, template: "<label class=\"checkbox\" [ngClass]=\"props['mod']\">\n\t<input\n\t\tclass=\"checkbox-input\"\n\t\ttype=\"checkbox\"\n\t\t[name]=\"props['name']\"\n\t\t[id]=\"id\"\n\t\t[formControl]=\"formControl\"\n\t\t[formlyAttributes]=\"field\"\n\t\t(focus)=\"focus()\"\n\t\t(blur)=\"blur()\"\n\t/>\n\t<span class=\"checkbox-label\">{{props.label}}</span>\n</label>\n", styles: [":host{width:100%;display:inherit;align-items:inherit;flex-direction:inherit}\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tib3guanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9uZy9mb3JtbHkvdHlwZXMvY2hlY2tib3gudHMiLCIuLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9uZy9mb3JtbHkvdHlwZXMvY2hlY2tib3guaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25FLE9BQU8sRUFBRSxTQUFTLEVBQW1CLE1BQU0sa0JBQWtCLENBQUM7Ozs7O0FBRTlELE1BT2EscUJBQXNCLFNBQVEsU0FBMEI7SUFDcEUsS0FBSztRQUNKLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLEdBQUcsSUFBSSxDQUFDO0lBQ2pDLENBQUM7SUFDRCxJQUFJO1FBQ0gsSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDbEMsQ0FBQzs4R0FOVyxxQkFBcUI7a0dBQXJCLHFCQUFxQix1RkNWbEMscVdBYUE7O1NESGEscUJBQXFCOzJGQUFyQixxQkFBcUI7a0JBUGpDLFNBQVM7K0JBQ0MsMEJBQTBCLG1CQUduQix1QkFBdUIsQ0FBQyxNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRmllbGRUeXBlLCBGaWVsZFR5cGVDb25maWcgfSBmcm9tICdAbmd4LWZvcm1seS9jb3JlJztcblxuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiAnbHUtZm9ybWx5LWZpZWxkLWNoZWNrYm94Jyxcblx0c3R5bGVVcmxzOiBbJ2Zvcm1seS1maWVsZC5jb21tb24uc2NzcyddLFxuXHR0ZW1wbGF0ZVVybDogJy4vY2hlY2tib3guaHRtbCcsXG5cdGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAYW5ndWxhci1lc2xpbnQvY29tcG9uZW50LWNsYXNzLXN1ZmZpeFxuZXhwb3J0IGNsYXNzIEx1Rm9ybWx5RmllbGRDaGVja2JveCBleHRlbmRzIEZpZWxkVHlwZTxGaWVsZFR5cGVDb25maWc+IHtcblx0Zm9jdXMoKSB7XG5cdFx0dGhpcy5wcm9wc1snX2lzRm9jdXNlZCddID0gdHJ1ZTtcblx0fVxuXHRibHVyKCkge1xuXHRcdHRoaXMucHJvcHNbJ19pc0ZvY3VzZWQnXSA9IGZhbHNlO1xuXHR9XG59XG4iLCI8bGFiZWwgY2xhc3M9XCJjaGVja2JveFwiIFtuZ0NsYXNzXT1cInByb3BzWydtb2QnXVwiPlxuXHQ8aW5wdXRcblx0XHRjbGFzcz1cImNoZWNrYm94LWlucHV0XCJcblx0XHR0eXBlPVwiY2hlY2tib3hcIlxuXHRcdFtuYW1lXT1cInByb3BzWyduYW1lJ11cIlxuXHRcdFtpZF09XCJpZFwiXG5cdFx0W2Zvcm1Db250cm9sXT1cImZvcm1Db250cm9sXCJcblx0XHRbZm9ybWx5QXR0cmlidXRlc109XCJmaWVsZFwiXG5cdFx0KGZvY3VzKT1cImZvY3VzKClcIlxuXHRcdChibHVyKT1cImJsdXIoKVwiXG5cdC8+XG5cdDxzcGFuIGNsYXNzPVwiY2hlY2tib3gtbGFiZWxcIj57e3Byb3BzLmxhYmVsfX08L3NwYW4+XG48L2xhYmVsPlxuIl19
import { ChangeDetectionStrategy, Component } from '@angular/core';
import { FieldType } from '@ngx-formly/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/forms";
import * as i3 from "@lucca-front/ng/input";
import * as i4 from "@ngx-formly/core";
class LuFormlyFieldInput extends FieldType {
    get type() {
        return this.props.type || 'text';
    }
    focus() {
        this.props['_isFocused'] = true;
    }
    blur() {
        this.props['_isFocused'] = false;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuFormlyFieldInput, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.3", type: LuFormlyFieldInput, selector: "lu-formly-field-input", usesInheritance: true, ngImport: i0, template: "<ng-template [ngIf]=\"type !== 'number'\" [ngIfElse]=\"numberInput\">\n\t<input\n\t\t[type]=\"type\"\n\t\tclass=\"textfield-input\"\n\t\t[name]=\"props['name']\"\n\t\t[formControl]=\"formControl\"\n\t\t[formlyAttributes]=\"field\"\n\t\tluInput\n\t\t(focus)=\"focus()\"\n\t\t(blur)=\"blur()\"\n\t\t[placeholder]=\"props.placeholder\"\n\t/>\n</ng-template>\n<!-- type=\"number\" has to be static in order to have NumberValueAccessor instead of DefaultValueAccessor -->\n<ng-template #numberInput>\n\t<input\n\t\ttype=\"number\"\n\t\tclass=\"textfield-input\"\n\t\t[name]=\"props['name']\"\n\t\t[formControl]=\"formControl\"\n\t\t[formlyAttributes]=\"field\"\n\t\tluInput\n\t\t(focus)=\"focus()\"\n\t\t(blur)=\"blur()\"\n\t\t[placeholder]=\"props.placeholder\"\n\t/>\n</ng-template>\n<span class=\"textfield-label\">{{ props.label }}</span>\n", styles: [":host{width:100%;display:inherit;align-items:inherit;flex-direction:inherit}\n"], dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.NumberValueAccessor, selector: "input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]" }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "directive", type: i3.LuInputDirective, selector: "[luInput]" }, { kind: "directive", type: i4.ɵFormlyAttributes, selector: "[formlyAttributes]", inputs: ["formlyAttributes", "id"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { LuFormlyFieldInput };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuFormlyFieldInput, decorators: [{
            type: Component,
            args: [{ selector: 'lu-formly-field-input', changeDetection: ChangeDetectionStrategy.OnPush, template: "<ng-template [ngIf]=\"type !== 'number'\" [ngIfElse]=\"numberInput\">\n\t<input\n\t\t[type]=\"type\"\n\t\tclass=\"textfield-input\"\n\t\t[name]=\"props['name']\"\n\t\t[formControl]=\"formControl\"\n\t\t[formlyAttributes]=\"field\"\n\t\tluInput\n\t\t(focus)=\"focus()\"\n\t\t(blur)=\"blur()\"\n\t\t[placeholder]=\"props.placeholder\"\n\t/>\n</ng-template>\n<!-- type=\"number\" has to be static in order to have NumberValueAccessor instead of DefaultValueAccessor -->\n<ng-template #numberInput>\n\t<input\n\t\ttype=\"number\"\n\t\tclass=\"textfield-input\"\n\t\t[name]=\"props['name']\"\n\t\t[formControl]=\"formControl\"\n\t\t[formlyAttributes]=\"field\"\n\t\tluInput\n\t\t(focus)=\"focus()\"\n\t\t(blur)=\"blur()\"\n\t\t[placeholder]=\"props.placeholder\"\n\t/>\n</ng-template>\n<span class=\"textfield-label\">{{ props.label }}</span>\n", styles: [":host{width:100%;display:inherit;align-items:inherit;flex-direction:inherit}\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9uZy9mb3JtbHkvdHlwZXMvaW5wdXQudHMiLCIuLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9uZy9mb3JtbHkvdHlwZXMvaW5wdXQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25FLE9BQU8sRUFBRSxTQUFTLEVBQW1CLE1BQU0sa0JBQWtCLENBQUM7Ozs7OztBQUM5RCxNQU9hLGtCQUFtQixTQUFRLFNBQTBCO0lBQ2pFLElBQUksSUFBSTtRQUNQLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLElBQUksTUFBTSxDQUFDO0lBQ2xDLENBQUM7SUFDRCxLQUFLO1FBQ0osSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDakMsQ0FBQztJQUNELElBQUk7UUFDSCxJQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxHQUFHLEtBQUssQ0FBQztJQUNsQyxDQUFDOzhHQVRXLGtCQUFrQjtrR0FBbEIsa0JBQWtCLG9GQ1QvQix5MEJBNEJBOztTRG5CYSxrQkFBa0I7MkZBQWxCLGtCQUFrQjtrQkFQOUIsU0FBUzsrQkFDQyx1QkFBdUIsbUJBR2hCLHVCQUF1QixDQUFDLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGaWVsZFR5cGUsIEZpZWxkVHlwZUNvbmZpZyB9IGZyb20gJ0BuZ3gtZm9ybWx5L2NvcmUnO1xuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiAnbHUtZm9ybWx5LWZpZWxkLWlucHV0Jyxcblx0c3R5bGVVcmxzOiBbJ2Zvcm1seS1maWVsZC5jb21tb24uc2NzcyddLFxuXHR0ZW1wbGF0ZVVybDogJy4vaW5wdXQuaHRtbCcsXG5cdGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAYW5ndWxhci1lc2xpbnQvY29tcG9uZW50LWNsYXNzLXN1ZmZpeFxuZXhwb3J0IGNsYXNzIEx1Rm9ybWx5RmllbGRJbnB1dCBleHRlbmRzIEZpZWxkVHlwZTxGaWVsZFR5cGVDb25maWc+IHtcblx0Z2V0IHR5cGUoKSB7XG5cdFx0cmV0dXJuIHRoaXMucHJvcHMudHlwZSB8fCAndGV4dCc7XG5cdH1cblx0Zm9jdXMoKSB7XG5cdFx0dGhpcy5wcm9wc1snX2lzRm9jdXNlZCddID0gdHJ1ZTtcblx0fVxuXHRibHVyKCkge1xuXHRcdHRoaXMucHJvcHNbJ19pc0ZvY3VzZWQnXSA9IGZhbHNlO1xuXHR9XG59XG4iLCI8bmctdGVtcGxhdGUgW25nSWZdPVwidHlwZSAhPT0gJ251bWJlcidcIiBbbmdJZkVsc2VdPVwibnVtYmVySW5wdXRcIj5cblx0PGlucHV0XG5cdFx0W3R5cGVdPVwidHlwZVwiXG5cdFx0Y2xhc3M9XCJ0ZXh0ZmllbGQtaW5wdXRcIlxuXHRcdFtuYW1lXT1cInByb3BzWyduYW1lJ11cIlxuXHRcdFtmb3JtQ29udHJvbF09XCJmb3JtQ29udHJvbFwiXG5cdFx0W2Zvcm1seUF0dHJpYnV0ZXNdPVwiZmllbGRcIlxuXHRcdGx1SW5wdXRcblx0XHQoZm9jdXMpPVwiZm9jdXMoKVwiXG5cdFx0KGJsdXIpPVwiYmx1cigpXCJcblx0XHRbcGxhY2Vob2xkZXJdPVwicHJvcHMucGxhY2Vob2xkZXJcIlxuXHQvPlxuPC9uZy10ZW1wbGF0ZT5cbjwhLS0gdHlwZT1cIm51bWJlclwiIGhhcyB0byBiZSBzdGF0aWMgaW4gb3JkZXIgdG8gaGF2ZSBOdW1iZXJWYWx1ZUFjY2Vzc29yIGluc3RlYWQgb2YgRGVmYXVsdFZhbHVlQWNjZXNzb3IgLS0+XG48bmctdGVtcGxhdGUgI251bWJlcklucHV0PlxuXHQ8aW5wdXRcblx0XHR0eXBlPVwibnVtYmVyXCJcblx0XHRjbGFzcz1cInRleHRmaWVsZC1pbnB1dFwiXG5cdFx0W25hbWVdPVwicHJvcHNbJ25hbWUnXVwiXG5cdFx0W2Zvcm1Db250cm9sXT1cImZvcm1Db250cm9sXCJcblx0XHRbZm9ybWx5QXR0cmlidXRlc109XCJmaWVsZFwiXG5cdFx0bHVJbnB1dFxuXHRcdChmb2N1cyk9XCJmb2N1cygpXCJcblx0XHQoYmx1cik9XCJibHVyKClcIlxuXHRcdFtwbGFjZWhvbGRlcl09XCJwcm9wcy5wbGFjZWhvbGRlclwiXG5cdC8+XG48L25nLXRlbXBsYXRlPlxuPHNwYW4gY2xhc3M9XCJ0ZXh0ZmllbGQtbGFiZWxcIj57eyBwcm9wcy5sYWJlbCB9fTwvc3Bhbj5cbiJdfQ==
import { ChangeDetectionStrategy, Component } from '@angular/core';
import { FieldType } from '@ngx-formly/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/forms";
import * as i3 from "@ngx-formly/core";
class LuFormlyFieldRadios extends FieldType {
    get _options() {
        return (this.props.options || []);
    }
    focus() {
        this.props['_isFocused'] = true;
    }
    blur() {
        this.props['_isFocused'] = false;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuFormlyFieldRadios, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.3", type: LuFormlyFieldRadios, selector: "lu-formly-field-radios", usesInheritance: true, ngImport: i0, template: "<legend class=\"radiosfield-label\">{{props.label}}</legend>\n<div class=\"radiosfield-input\">\n\t<label *ngFor=\"let option of _options, let i = index\" class=\"radio\">\n\t\t<input\n\t\t\tclass=\"radio-input\"\n\t\t\ttype=\"radio\"\n\t\t\t[name]=\"props['name']\"\n\t\t\t[value]=\"option.value\"\n\t\t\t[id]=\"id + '_'+ i\"\n\t\t\t[formControl]=\"formControl\"\n\t\t\t[formlyAttributes]=\"field\"\n\t\t/>\n\t\t<span class=\"radio-label\">{{option.label}}</span>\n\t</label>\n</div>\n", styles: [":host{width:100%;display:inherit;align-items:inherit;flex-direction:inherit}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.RadioControlValueAccessor, selector: "input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]", inputs: ["name", "formControlName", "value"] }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "directive", type: i3.ɵFormlyAttributes, selector: "[formlyAttributes]", inputs: ["formlyAttributes", "id"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { LuFormlyFieldRadios };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuFormlyFieldRadios, decorators: [{
            type: Component,
            args: [{ selector: 'lu-formly-field-radios', changeDetection: ChangeDetectionStrategy.OnPush, template: "<legend class=\"radiosfield-label\">{{props.label}}</legend>\n<div class=\"radiosfield-input\">\n\t<label *ngFor=\"let option of _options, let i = index\" class=\"radio\">\n\t\t<input\n\t\t\tclass=\"radio-input\"\n\t\t\ttype=\"radio\"\n\t\t\t[name]=\"props['name']\"\n\t\t\t[value]=\"option.value\"\n\t\t\t[id]=\"id + '_'+ i\"\n\t\t\t[formControl]=\"formControl\"\n\t\t\t[formlyAttributes]=\"field\"\n\t\t/>\n\t\t<span class=\"radio-label\">{{option.label}}</span>\n\t</label>\n</div>\n", styles: [":host{width:100%;display:inherit;align-items:inherit;flex-direction:inherit}\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFkaW9zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvbmcvZm9ybWx5L3R5cGVzL3JhZGlvcy50cyIsIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL25nL2Zvcm1seS90eXBlcy9yYWRpb3MuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25FLE9BQU8sRUFBRSxTQUFTLEVBQW1CLE1BQU0sa0JBQWtCLENBQUM7Ozs7O0FBRTlELE1BT2EsbUJBQW9CLFNBQVEsU0FBMEI7SUFDbEUsSUFBSSxRQUFRO1FBQ1gsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxJQUFJLEVBQUUsQ0FBeUMsQ0FBQztJQUMzRSxDQUFDO0lBQ0QsS0FBSztRQUNKLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLEdBQUcsSUFBSSxDQUFDO0lBQ2pDLENBQUM7SUFDRCxJQUFJO1FBQ0gsSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDbEMsQ0FBQzs4R0FUVyxtQkFBbUI7a0dBQW5CLG1CQUFtQixxRkNWaEMsd2VBZUE7O1NETGEsbUJBQW1COzJGQUFuQixtQkFBbUI7a0JBUC9CLFNBQVM7K0JBQ0Msd0JBQXdCLG1CQUdqQix1QkFBdUIsQ0FBQyxNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRmllbGRUeXBlLCBGaWVsZFR5cGVDb25maWcgfSBmcm9tICdAbmd4LWZvcm1seS9jb3JlJztcblxuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiAnbHUtZm9ybWx5LWZpZWxkLXJhZGlvcycsXG5cdHN0eWxlVXJsczogWydmb3JtbHktZmllbGQuY29tbW9uLnNjc3MnXSxcblx0dGVtcGxhdGVVcmw6ICcuL3JhZGlvcy5odG1sJyxcblx0Y2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEBhbmd1bGFyLWVzbGludC9jb21wb25lbnQtY2xhc3Mtc3VmZml4XG5leHBvcnQgY2xhc3MgTHVGb3JtbHlGaWVsZFJhZGlvcyBleHRlbmRzIEZpZWxkVHlwZTxGaWVsZFR5cGVDb25maWc+IHtcblx0Z2V0IF9vcHRpb25zKCkge1xuXHRcdHJldHVybiAodGhpcy5wcm9wcy5vcHRpb25zIHx8IFtdKSBhcyB7IHZhbHVlOiB1bmtub3duOyBsYWJlbDogdW5rbm93biB9W107XG5cdH1cblx0Zm9jdXMoKSB7XG5cdFx0dGhpcy5wcm9wc1snX2lzRm9jdXNlZCddID0gdHJ1ZTtcblx0fVxuXHRibHVyKCkge1xuXHRcdHRoaXMucHJvcHNbJ19pc0ZvY3VzZWQnXSA9IGZhbHNlO1xuXHR9XG59XG4iLCI8bGVnZW5kIGNsYXNzPVwicmFkaW9zZmllbGQtbGFiZWxcIj57e3Byb3BzLmxhYmVsfX08L2xlZ2VuZD5cbjxkaXYgY2xhc3M9XCJyYWRpb3NmaWVsZC1pbnB1dFwiPlxuXHQ8bGFiZWwgKm5nRm9yPVwibGV0IG9wdGlvbiBvZiBfb3B0aW9ucywgbGV0IGkgPSBpbmRleFwiIGNsYXNzPVwicmFkaW9cIj5cblx0XHQ8aW5wdXRcblx0XHRcdGNsYXNzPVwicmFkaW8taW5wdXRcIlxuXHRcdFx0dHlwZT1cInJhZGlvXCJcblx0XHRcdFtuYW1lXT1cInByb3BzWyduYW1lJ11cIlxuXHRcdFx0W3ZhbHVlXT1cIm9wdGlvbi52YWx1ZVwiXG5cdFx0XHRbaWRdPVwiaWQgKyAnXycrIGlcIlxuXHRcdFx0W2Zvcm1Db250cm9sXT1cImZvcm1Db250cm9sXCJcblx0XHRcdFtmb3JtbHlBdHRyaWJ1dGVzXT1cImZpZWxkXCJcblx0XHQvPlxuXHRcdDxzcGFuIGNsYXNzPVwicmFkaW8tbGFiZWxcIj57e29wdGlvbi5sYWJlbH19PC9zcGFuPlxuXHQ8L2xhYmVsPlxuPC9kaXY+XG4iXX0=
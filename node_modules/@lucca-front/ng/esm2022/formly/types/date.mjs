import { ChangeDetectionStrategy, Component } from '@angular/core';
import { FieldType } from '@ngx-formly/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@lucca-front/ng/date";
import * as i3 from "@ngx-formly/core";
class LuFormlyFieldDate extends FieldType {
    focus() {
        this.props['_isFocused'] = true;
    }
    blur() {
        this.props['_isFocused'] = false;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuFormlyFieldDate, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.3", type: LuFormlyFieldDate, selector: "lu-formly-field-date", usesInheritance: true, ngImport: i0, template: "<lu-date-select\n\tclass=\"textfield-input\"\n\t[formControl]=\"formControl\"\n\t[formlyAttributes]=\"field\"\n\t(focus)=\"focus()\"\n\t(blur)=\"blur()\"\n\t[placeholder]=\"props.placeholder\"\n\t[min]=\"props.min\"\n\t[max]=\"props.max\"\n></lu-date-select>\n<span class=\"textfield-label\">{{ props.label }}</span>\n", styles: [":host{width:100%;display:inherit;align-items:inherit;flex-direction:inherit}\n", ":host-context(.mod-framed) lu-select{display:block}:host-context(.mod-framed) lu-api-select{display:block}:host-context(.mod-framed) lu-user-select{display:block}:host-context(.mod-framed) lu-date-select{display:block}:host-context(.mod-framed) lu-department-select{display:block}\n"], dependencies: [{ kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "component", type: i2.LuDateSelectInputComponent, selector: "lu-date-select", inputs: ["min", "max", "granularity", "placeholder", "hideClearer", "startOn"] }, { kind: "directive", type: i3.ɵFormlyAttributes, selector: "[formlyAttributes]", inputs: ["formlyAttributes", "id"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { LuFormlyFieldDate };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuFormlyFieldDate, decorators: [{
            type: Component,
            args: [{ selector: 'lu-formly-field-date', changeDetection: ChangeDetectionStrategy.OnPush, template: "<lu-date-select\n\tclass=\"textfield-input\"\n\t[formControl]=\"formControl\"\n\t[formlyAttributes]=\"field\"\n\t(focus)=\"focus()\"\n\t(blur)=\"blur()\"\n\t[placeholder]=\"props.placeholder\"\n\t[min]=\"props.min\"\n\t[max]=\"props.max\"\n></lu-date-select>\n<span class=\"textfield-label\">{{ props.label }}</span>\n", styles: [":host{width:100%;display:inherit;align-items:inherit;flex-direction:inherit}\n", ":host-context(.mod-framed) lu-select{display:block}:host-context(.mod-framed) lu-api-select{display:block}:host-context(.mod-framed) lu-user-select{display:block}:host-context(.mod-framed) lu-date-select{display:block}:host-context(.mod-framed) lu-department-select{display:block}\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL25nL2Zvcm1seS90eXBlcy9kYXRlLnRzIiwiLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvbmcvZm9ybWx5L3R5cGVzL2RhdGUuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25FLE9BQU8sRUFBRSxTQUFTLEVBQW1CLE1BQU0sa0JBQWtCLENBQUM7Ozs7O0FBRTlELE1BT2EsaUJBQWtCLFNBQVEsU0FBMEI7SUFDaEUsS0FBSztRQUNKLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLEdBQUcsSUFBSSxDQUFDO0lBQ2pDLENBQUM7SUFDRCxJQUFJO1FBQ0gsSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDbEMsQ0FBQzs4R0FOVyxpQkFBaUI7a0dBQWpCLGlCQUFpQixtRkNWOUIsZ1VBV0E7O1NERGEsaUJBQWlCOzJGQUFqQixpQkFBaUI7a0JBUDdCLFNBQVM7K0JBQ0Msc0JBQXNCLG1CQUdmLHVCQUF1QixDQUFDLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGaWVsZFR5cGUsIEZpZWxkVHlwZUNvbmZpZyB9IGZyb20gJ0BuZ3gtZm9ybWx5L2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcblx0c2VsZWN0b3I6ICdsdS1mb3JtbHktZmllbGQtZGF0ZScsXG5cdHN0eWxlVXJsczogWydmb3JtbHktZmllbGQuY29tbW9uLnNjc3MnLCAnc2VsZWN0LnNjc3MnXSxcblx0dGVtcGxhdGVVcmw6ICcuL2RhdGUuaHRtbCcsXG5cdGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAYW5ndWxhci1lc2xpbnQvY29tcG9uZW50LWNsYXNzLXN1ZmZpeFxuZXhwb3J0IGNsYXNzIEx1Rm9ybWx5RmllbGREYXRlIGV4dGVuZHMgRmllbGRUeXBlPEZpZWxkVHlwZUNvbmZpZz4ge1xuXHRmb2N1cygpIHtcblx0XHR0aGlzLnByb3BzWydfaXNGb2N1c2VkJ10gPSB0cnVlO1xuXHR9XG5cdGJsdXIoKSB7XG5cdFx0dGhpcy5wcm9wc1snX2lzRm9jdXNlZCddID0gZmFsc2U7XG5cdH1cbn1cbiIsIjxsdS1kYXRlLXNlbGVjdFxuXHRjbGFzcz1cInRleHRmaWVsZC1pbnB1dFwiXG5cdFtmb3JtQ29udHJvbF09XCJmb3JtQ29udHJvbFwiXG5cdFtmb3JtbHlBdHRyaWJ1dGVzXT1cImZpZWxkXCJcblx0KGZvY3VzKT1cImZvY3VzKClcIlxuXHQoYmx1cik9XCJibHVyKClcIlxuXHRbcGxhY2Vob2xkZXJdPVwicHJvcHMucGxhY2Vob2xkZXJcIlxuXHRbbWluXT1cInByb3BzLm1pblwiXG5cdFttYXhdPVwicHJvcHMubWF4XCJcbj48L2x1LWRhdGUtc2VsZWN0PlxuPHNwYW4gY2xhc3M9XCJ0ZXh0ZmllbGQtbGFiZWxcIj57eyBwcm9wcy5sYWJlbCB9fTwvc3Bhbj5cbiJdfQ==
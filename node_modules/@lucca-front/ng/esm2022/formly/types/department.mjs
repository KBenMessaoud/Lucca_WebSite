import { ChangeDetectionStrategy, Component } from '@angular/core';
import { FieldType } from '@ngx-formly/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@lucca-front/ng/department";
import * as i3 from "@ngx-formly/core";
class LuFormlyFieldDepartment extends FieldType {
    focus() {
        this.props['_isFocused'] = true;
    }
    blur() {
        this.props['_isFocused'] = false;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuFormlyFieldDepartment, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.3", type: LuFormlyFieldDepartment, selector: "lu-formly-field-department", usesInheritance: true, ngImport: i0, template: "<lu-department-select\n\tclass=\"textfield-input\"\n\t[formControl]=\"formControl\"\n\t[formlyAttributes]=\"field\"\n\t[multiple]=\"props['multiple']\"\n\t(focus)=\"focus()\"\n\t(blur)=\"blur()\"\n\t[placeholder]=\"props.placeholder\"\n\t[filters]=\"props['filters']\"\n\t[appInstanceId]=\"props['appInstanceId']\"\n\t[operations]=\"props['operations']\"\n>\n</lu-department-select>\n<span class=\"textfield-label\">{{ props.label }}</span>\n", styles: [":host{width:100%;display:inherit;align-items:inherit;flex-direction:inherit}\n", ":host-context(.mod-framed) lu-select{display:block}:host-context(.mod-framed) lu-api-select{display:block}:host-context(.mod-framed) lu-user-select{display:block}:host-context(.mod-framed) lu-date-select{display:block}:host-context(.mod-framed) lu-department-select{display:block}\n"], dependencies: [{ kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "component", type: i2.LuDepartmentSelectInputComponent, selector: "lu-department-select", inputs: ["appInstanceId", "operations", "filters"] }, { kind: "directive", type: i3.ɵFormlyAttributes, selector: "[formlyAttributes]", inputs: ["formlyAttributes", "id"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { LuFormlyFieldDepartment };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuFormlyFieldDepartment, decorators: [{
            type: Component,
            args: [{ selector: 'lu-formly-field-department', changeDetection: ChangeDetectionStrategy.OnPush, template: "<lu-department-select\n\tclass=\"textfield-input\"\n\t[formControl]=\"formControl\"\n\t[formlyAttributes]=\"field\"\n\t[multiple]=\"props['multiple']\"\n\t(focus)=\"focus()\"\n\t(blur)=\"blur()\"\n\t[placeholder]=\"props.placeholder\"\n\t[filters]=\"props['filters']\"\n\t[appInstanceId]=\"props['appInstanceId']\"\n\t[operations]=\"props['operations']\"\n>\n</lu-department-select>\n<span class=\"textfield-label\">{{ props.label }}</span>\n", styles: [":host{width:100%;display:inherit;align-items:inherit;flex-direction:inherit}\n", ":host-context(.mod-framed) lu-select{display:block}:host-context(.mod-framed) lu-api-select{display:block}:host-context(.mod-framed) lu-user-select{display:block}:host-context(.mod-framed) lu-date-select{display:block}:host-context(.mod-framed) lu-department-select{display:block}\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVwYXJ0bWVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL25nL2Zvcm1seS90eXBlcy9kZXBhcnRtZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvbmcvZm9ybWx5L3R5cGVzL2RlcGFydG1lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25FLE9BQU8sRUFBRSxTQUFTLEVBQW1CLE1BQU0sa0JBQWtCLENBQUM7Ozs7O0FBRTlELE1BT2EsdUJBQXdCLFNBQVEsU0FBMEI7SUFDdEUsS0FBSztRQUNKLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLEdBQUcsSUFBSSxDQUFDO0lBQ2pDLENBQUM7SUFDRCxJQUFJO1FBQ0gsSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDbEMsQ0FBQzs4R0FOVyx1QkFBdUI7a0dBQXZCLHVCQUF1Qix5RkNWcEMsNGJBY0E7O1NESmEsdUJBQXVCOzJGQUF2Qix1QkFBdUI7a0JBUG5DLFNBQVM7K0JBQ0MsNEJBQTRCLG1CQUdyQix1QkFBdUIsQ0FBQyxNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRmllbGRUeXBlLCBGaWVsZFR5cGVDb25maWcgfSBmcm9tICdAbmd4LWZvcm1seS9jb3JlJztcblxuQENvbXBvbmVudCh7XG5cdHNlbGVjdG9yOiAnbHUtZm9ybWx5LWZpZWxkLWRlcGFydG1lbnQnLFxuXHRzdHlsZVVybHM6IFsnZm9ybWx5LWZpZWxkLmNvbW1vbi5zY3NzJywgJ3NlbGVjdC5zY3NzJ10sXG5cdHRlbXBsYXRlVXJsOiAnLi9kZXBhcnRtZW50Lmh0bWwnLFxuXHRjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQGFuZ3VsYXItZXNsaW50L2NvbXBvbmVudC1jbGFzcy1zdWZmaXhcbmV4cG9ydCBjbGFzcyBMdUZvcm1seUZpZWxkRGVwYXJ0bWVudCBleHRlbmRzIEZpZWxkVHlwZTxGaWVsZFR5cGVDb25maWc+IHtcblx0Zm9jdXMoKSB7XG5cdFx0dGhpcy5wcm9wc1snX2lzRm9jdXNlZCddID0gdHJ1ZTtcblx0fVxuXHRibHVyKCkge1xuXHRcdHRoaXMucHJvcHNbJ19pc0ZvY3VzZWQnXSA9IGZhbHNlO1xuXHR9XG59XG4iLCI8bHUtZGVwYXJ0bWVudC1zZWxlY3Rcblx0Y2xhc3M9XCJ0ZXh0ZmllbGQtaW5wdXRcIlxuXHRbZm9ybUNvbnRyb2xdPVwiZm9ybUNvbnRyb2xcIlxuXHRbZm9ybWx5QXR0cmlidXRlc109XCJmaWVsZFwiXG5cdFttdWx0aXBsZV09XCJwcm9wc1snbXVsdGlwbGUnXVwiXG5cdChmb2N1cyk9XCJmb2N1cygpXCJcblx0KGJsdXIpPVwiYmx1cigpXCJcblx0W3BsYWNlaG9sZGVyXT1cInByb3BzLnBsYWNlaG9sZGVyXCJcblx0W2ZpbHRlcnNdPVwicHJvcHNbJ2ZpbHRlcnMnXVwiXG5cdFthcHBJbnN0YW5jZUlkXT1cInByb3BzWydhcHBJbnN0YW5jZUlkJ11cIlxuXHRbb3BlcmF0aW9uc109XCJwcm9wc1snb3BlcmF0aW9ucyddXCJcbj5cbjwvbHUtZGVwYXJ0bWVudC1zZWxlY3Q+XG48c3BhbiBjbGFzcz1cInRleHRmaWVsZC1sYWJlbFwiPnt7IHByb3BzLmxhYmVsIH19PC9zcGFuPlxuIl19
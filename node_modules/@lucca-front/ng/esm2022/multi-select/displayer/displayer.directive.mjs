import { Directive, Input } from '@angular/core';
import * as i0 from "@angular/core";
class LuMultiDisplayerDirective {
    set select(select) {
        select.valuesTpl = this.templateRef;
    }
    constructor(templateRef) {
        this.templateRef = templateRef;
    }
    static ngTemplateContextGuard(_dir, ctx) {
        return true;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuMultiDisplayerDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.1.3", type: LuMultiDisplayerDirective, isStandalone: true, selector: "[luMultiDisplayer]", inputs: { select: ["luMultiDisplayerSelect", "select"] }, ngImport: i0 }); }
}
export { LuMultiDisplayerDirective };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuMultiDisplayerDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[luMultiDisplayer]',
                    standalone: true,
                }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { select: [{
                type: Input,
                args: ['luMultiDisplayerSelect']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlzcGxheWVyLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL25nL211bHRpLXNlbGVjdC9kaXNwbGF5ZXIvZGlzcGxheWVyLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBZSxNQUFNLGVBQWUsQ0FBQzs7QUFJOUQsTUFJYSx5QkFBeUI7SUFDckMsSUFBcUMsTUFBTSxDQUFDLE1BQXNDO1FBQ2pGLE1BQU0sQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQztJQUNyQyxDQUFDO0lBRUQsWUFBMkIsV0FBOEM7UUFBOUMsZ0JBQVcsR0FBWCxXQUFXLENBQW1DO0lBQUcsQ0FBQztJQUV0RSxNQUFNLENBQUMsc0JBQXNCLENBQUksSUFBa0MsRUFBRSxHQUFZO1FBQ3ZGLE9BQU8sSUFBSSxDQUFDO0lBQ2IsQ0FBQzs4R0FUVyx5QkFBeUI7a0dBQXpCLHlCQUF5Qjs7U0FBekIseUJBQXlCOzJGQUF6Qix5QkFBeUI7a0JBSnJDLFNBQVM7bUJBQUM7b0JBQ1YsUUFBUSxFQUFFLG9CQUFvQjtvQkFDOUIsVUFBVSxFQUFFLElBQUk7aUJBQ2hCO2tHQUVxQyxNQUFNO3NCQUExQyxLQUFLO3VCQUFDLHdCQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBMdU9wdGlvbkNvbnRleHQgfSBmcm9tICdAbHVjY2EtZnJvbnQvbmcvY29yZS1zZWxlY3QnO1xuaW1wb3J0IHsgTHVNdWx0aVNlbGVjdElucHV0Q29tcG9uZW50IH0gZnJvbSAnLi4vaW5wdXQnO1xuXG5ARGlyZWN0aXZlKHtcblx0c2VsZWN0b3I6ICdbbHVNdWx0aURpc3BsYXllcl0nLFxuXHRzdGFuZGFsb25lOiB0cnVlLFxufSlcbmV4cG9ydCBjbGFzcyBMdU11bHRpRGlzcGxheWVyRGlyZWN0aXZlPFQ+IHtcblx0QElucHV0KCdsdU11bHRpRGlzcGxheWVyU2VsZWN0Jykgc2V0IHNlbGVjdChzZWxlY3Q6IEx1TXVsdGlTZWxlY3RJbnB1dENvbXBvbmVudDxUPikge1xuXHRcdHNlbGVjdC52YWx1ZXNUcGwgPSB0aGlzLnRlbXBsYXRlUmVmO1xuXHR9XG5cblx0cHVibGljIGNvbnN0cnVjdG9yKHByaXZhdGUgdGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPEx1T3B0aW9uQ29udGV4dDxUW10+Pikge31cblxuXHRwdWJsaWMgc3RhdGljIG5nVGVtcGxhdGVDb250ZXh0R3VhcmQ8VD4oX2RpcjogTHVNdWx0aURpc3BsYXllckRpcmVjdGl2ZTxUPiwgY3R4OiB1bmtub3duKTogY3R4IGlzIEx1T3B0aW9uQ29udGV4dDxUW10+IHtcblx0XHRyZXR1cm4gdHJ1ZTtcblx0fVxufVxuIl19
import { Injectable } from '@angular/core';
import { ALuPopupRef } from './popup-ref.model';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/overlay";
export class LuPopupRef extends ALuPopupRef {
    constructor(_overlay, _injector, _component, _config) {
        super(_overlay, _injector, _component, _config);
        this._overlay = _overlay;
        this._injector = _injector;
        this._component = _component;
        this._config = _config;
    }
}
class LuPopupRefFactory {
    constructor(_overlay, _injector) {
        this._overlay = _overlay;
        this._injector = _injector;
    }
    forge(component, config) {
        return new LuPopupRef(this._overlay, this._injector, component, config);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuPopupRefFactory, deps: [{ token: i1.Overlay }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable }); }
    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuPopupRefFactory }); }
}
export { LuPopupRefFactory };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuPopupRefFactory, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.Overlay }, { type: i0.Injector }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wdXAtcmVmLmZhY3RvcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wYWNrYWdlcy9uZy9wb3B1cC9wb3B1cC1yZWYuZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsVUFBVSxFQUFZLE1BQU0sZUFBZSxDQUFDO0FBRXJELE9BQU8sRUFBRSxXQUFXLEVBQXNCLE1BQU0sbUJBQW1CLENBQUM7OztBQUVwRSxNQUFNLE9BQU8sVUFBa0QsU0FBUSxXQUFvQjtJQUMxRixZQUErQixRQUFpQixFQUFxQixTQUFtQixFQUFxQixVQUE0QixFQUFxQixPQUF1QjtRQUNwTCxLQUFLLENBQUMsUUFBUSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFEbEIsYUFBUSxHQUFSLFFBQVEsQ0FBUztRQUFxQixjQUFTLEdBQVQsU0FBUyxDQUFVO1FBQXFCLGVBQVUsR0FBVixVQUFVLENBQWtCO1FBQXFCLFlBQU8sR0FBUCxPQUFPLENBQWdCO0lBRXJMLENBQUM7Q0FDRDtBQUVELE1BQ2EsaUJBQWlCO0lBQzdCLFlBQXNCLFFBQWlCLEVBQVksU0FBbUI7UUFBaEQsYUFBUSxHQUFSLFFBQVEsQ0FBUztRQUFZLGNBQVMsR0FBVCxTQUFTLENBQVU7SUFBRyxDQUFDO0lBQzFFLEtBQUssQ0FBVSxTQUEyQixFQUFFLE1BQXNCO1FBQ2pFLE9BQU8sSUFBSSxVQUFVLENBQVUsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsU0FBUyxFQUFFLFNBQVMsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUNsRixDQUFDOzhHQUpXLGlCQUFpQjtrSEFBakIsaUJBQWlCOztTQUFqQixpQkFBaUI7MkZBQWpCLGlCQUFpQjtrQkFEN0IsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudFR5cGUsIE92ZXJsYXkgfSBmcm9tICdAYW5ndWxhci9jZGsvb3ZlcmxheSc7XG5pbXBvcnQgeyBJbmplY3RhYmxlLCBJbmplY3RvciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSUx1UG9wdXBDb25maWcgfSBmcm9tICcuL3BvcHVwLWNvbmZpZy5tb2RlbCc7XG5pbXBvcnQgeyBBTHVQb3B1cFJlZiwgSUx1UG9wdXBSZWZGYWN0b3J5IH0gZnJvbSAnLi9wb3B1cC1yZWYubW9kZWwnO1xuXG5leHBvcnQgY2xhc3MgTHVQb3B1cFJlZjxUID0gdW5rbm93biwgRCA9IHVua25vd24sIFIgPSB1bmtub3duPiBleHRlbmRzIEFMdVBvcHVwUmVmPFQsIEQsIFI+IHtcblx0Y29uc3RydWN0b3IocHJvdGVjdGVkIG92ZXJyaWRlIF9vdmVybGF5OiBPdmVybGF5LCBwcm90ZWN0ZWQgb3ZlcnJpZGUgX2luamVjdG9yOiBJbmplY3RvciwgcHJvdGVjdGVkIG92ZXJyaWRlIF9jb21wb25lbnQ6IENvbXBvbmVudFR5cGU8VD4sIHByb3RlY3RlZCBvdmVycmlkZSBfY29uZmlnOiBJTHVQb3B1cENvbmZpZykge1xuXHRcdHN1cGVyKF9vdmVybGF5LCBfaW5qZWN0b3IsIF9jb21wb25lbnQsIF9jb25maWcpO1xuXHR9XG59XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBMdVBvcHVwUmVmRmFjdG9yeSBpbXBsZW1lbnRzIElMdVBvcHVwUmVmRmFjdG9yeSB7XG5cdGNvbnN0cnVjdG9yKHByb3RlY3RlZCBfb3ZlcmxheTogT3ZlcmxheSwgcHJvdGVjdGVkIF9pbmplY3RvcjogSW5qZWN0b3IpIHt9XG5cdGZvcmdlPFQsIEQsIFI+KGNvbXBvbmVudDogQ29tcG9uZW50VHlwZTxUPiwgY29uZmlnOiBJTHVQb3B1cENvbmZpZykge1xuXHRcdHJldHVybiBuZXcgTHVQb3B1cFJlZjxULCBELCBSPih0aGlzLl9vdmVybGF5LCB0aGlzLl9pbmplY3RvciwgY29tcG9uZW50LCBjb25maWcpO1xuXHR9XG59XG4iXX0=
import { OverlayModule } from '@angular/cdk/overlay';
import { CommonModule } from '@angular/common';
import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Output, TemplateRef, ViewChild } from '@angular/core';
import { ALuPopoverPanel } from '@lucca-front/ng/popover';
import { luTransformTooltip } from '../animation/index';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
class LuTooltipPanelComponent extends ALuPopoverPanel {
    get content() {
        return this._content;
    }
    set content(c) {
        this._content = c;
        this._changeDetectorRef.markForCheck();
    }
    set vcTemplateRef(tr) {
        this.templateRef = tr;
    }
    constructor(_changeDetectorRef) {
        super();
        this._changeDetectorRef = _changeDetectorRef;
        this.animationState = 'enter';
        //FIXME output event
        // eslint-disable-next-line @angular-eslint/no-output-native
        this.close = new EventEmitter();
        // eslint-disable-next-line @angular-eslint/no-output-native
        this.open = new EventEmitter();
        this.hovered = new EventEmitter();
        this.scrollStrategy = 'close';
    }
    _emitCloseEvent() {
        this.close.emit();
    }
    _emitOpenEvent() {
        this.open.emit();
    }
    _emitHoveredEvent(hovered) {
        this.hovered.emit(hovered);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuTooltipPanelComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.3", type: LuTooltipPanelComponent, isStandalone: true, selector: "lu-tooltip-panel", outputs: { close: "close", open: "open", hovered: "hovered" }, host: { properties: { "@transformTooltip": "this.animationState" } }, viewQueries: [{ propertyName: "vcTemplateRef", first: true, predicate: TemplateRef, descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: "<div\n\tclass=\"lu-tooltip-panel\"\n\trole=\"tooltip\"\n\t[ngClass]=\"panelClassesMap\"\n\t(mouseover)=\"onMouseOver()\"\n\t(mouseleave)=\"onMouseLeave()\"\n\t[attr.id]=\"panelId\"\n\t[@transformTooltip]=\"'enter'\"\n>\n\t<div class=\"lu-tooltip-content\" [ngClass]=\"contentClassesMap\" [innerHtml]=\"content\"></div>\n</div>\n", styles: [":root{--components-options-item-padding-vertical: var(--spacings-XS);--components-options-item-padding-horizontal: var(--spacings-XS);--components-options-item-multiple-padding: 2.25rem;--components-options-item-icon-color: var(--palettes-grey-800);--components-options-checkbox-left: .5rem;--components-options-checkbox-size: 1.25rem;--components-options-checkbox-color: var(--palettes-primary-700);--components-options-checkbox-border-radius: 6px;--components-options-checkbox-border-color: var(--palettes-grey-700);--components-options-establishment-multiple-padding: 2rem}.lu-tooltip-panel{--components-tooltip-background-color: var(--palettes-grey-900);--components-tooltip-color: var(--colors-white-color);--components-tooltip-max-width: 15rem;background:var(--components-tooltip-background-color);color:var(--components-tooltip-color);padding:var(--spacings-XXS) var(--spacings-XS);max-width:var(--components-tooltip-max-width);border-radius:var(--commons-borderRadius-M);font-size:var(--sizes-XS-fontSize);line-height:var(--sizes-XS-lineHeight);display:block;text-align:center}.lu-tooltip-panel.is-above{transform-origin:bottom center}.lu-tooltip-panel.is-below{transform-origin:top center;margin-top:2px}.lu-tooltip-panel.is-before{transform-origin:center right;margin-right:5px}.lu-tooltip-panel.is-after{transform-origin:center left;margin-left:5px}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "ngmodule", type: OverlayModule }], animations: [luTransformTooltip], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { LuTooltipPanelComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: LuTooltipPanelComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lu-tooltip-panel', animations: [luTransformTooltip], standalone: true, imports: [CommonModule, OverlayModule], changeDetection: ChangeDetectionStrategy.OnPush, template: "<div\n\tclass=\"lu-tooltip-panel\"\n\trole=\"tooltip\"\n\t[ngClass]=\"panelClassesMap\"\n\t(mouseover)=\"onMouseOver()\"\n\t(mouseleave)=\"onMouseLeave()\"\n\t[attr.id]=\"panelId\"\n\t[@transformTooltip]=\"'enter'\"\n>\n\t<div class=\"lu-tooltip-content\" [ngClass]=\"contentClassesMap\" [innerHtml]=\"content\"></div>\n</div>\n", styles: [":root{--components-options-item-padding-vertical: var(--spacings-XS);--components-options-item-padding-horizontal: var(--spacings-XS);--components-options-item-multiple-padding: 2.25rem;--components-options-item-icon-color: var(--palettes-grey-800);--components-options-checkbox-left: .5rem;--components-options-checkbox-size: 1.25rem;--components-options-checkbox-color: var(--palettes-primary-700);--components-options-checkbox-border-radius: 6px;--components-options-checkbox-border-color: var(--palettes-grey-700);--components-options-establishment-multiple-padding: 2rem}.lu-tooltip-panel{--components-tooltip-background-color: var(--palettes-grey-900);--components-tooltip-color: var(--colors-white-color);--components-tooltip-max-width: 15rem;background:var(--components-tooltip-background-color);color:var(--components-tooltip-color);padding:var(--spacings-XXS) var(--spacings-XS);max-width:var(--components-tooltip-max-width);border-radius:var(--commons-borderRadius-M);font-size:var(--sizes-XS-fontSize);line-height:var(--sizes-XS-lineHeight);display:block;text-align:center}.lu-tooltip-panel.is-above{transform-origin:bottom center}.lu-tooltip-panel.is-below{transform-origin:top center;margin-top:2px}.lu-tooltip-panel.is-before{transform-origin:center right;margin-right:5px}.lu-tooltip-panel.is-after{transform-origin:center left;margin-left:5px}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { animationState: [{
                type: HostBinding,
                args: ['@transformTooltip']
            }], close: [{
                type: Output
            }], open: [{
                type: Output
            }], hovered: [{
                type: Output
            }], vcTemplateRef: [{
                type: ViewChild,
                args: [TemplateRef, { static: true }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbHRpcC1wYW5lbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9uZy90b29sdGlwL3BhbmVsL3Rvb2x0aXAtcGFuZWwuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvbmcvdG9vbHRpcC9wYW5lbC90b29sdGlwLXBhbmVsLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLHVCQUF1QixFQUFxQixTQUFTLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsV0FBVyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVqSixPQUFPLEVBQUUsZUFBZSxFQUFtQixNQUFNLHlCQUF5QixDQUFDO0FBQzNFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDOzs7QUFFeEQsTUFTYSx1QkFBd0IsU0FBUSxlQUFlO0lBSTNELElBQUksT0FBTztRQUNWLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN0QixDQUFDO0lBQ0QsSUFBSSxPQUFPLENBQUMsQ0FBQztRQUNaLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDO1FBQ2xCLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUN4QyxDQUFDO0lBUUQsSUFDSSxhQUFhLENBQUMsRUFBK0I7UUFDaEQsSUFBSSxDQUFDLFdBQVcsR0FBRyxFQUFFLENBQUM7SUFDdkIsQ0FBQztJQUNELFlBQW9CLGtCQUFxQztRQUN4RCxLQUFLLEVBQUUsQ0FBQztRQURXLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBbUI7UUFyQnZCLG1CQUFjLEdBQUcsT0FBTyxDQUFDO1FBVzNELG9CQUFvQjtRQUNwQiw0REFBNEQ7UUFDekMsVUFBSyxHQUFHLElBQUksWUFBWSxFQUFRLENBQUM7UUFDcEQsNERBQTREO1FBQ3pDLFNBQUksR0FBRyxJQUFJLFlBQVksRUFBUSxDQUFDO1FBQ2hDLFlBQU8sR0FBRyxJQUFJLFlBQVksRUFBVyxDQUFDO1FBT3hELElBQUksQ0FBQyxjQUFjLEdBQUcsT0FBTyxDQUFDO0lBQy9CLENBQUM7SUFFRCxlQUFlO1FBQ2QsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNuQixDQUFDO0lBRUQsY0FBYztRQUNiLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDbEIsQ0FBQztJQUNELGlCQUFpQixDQUFDLE9BQWdCO1FBQ2pDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzVCLENBQUM7OEdBcENXLHVCQUF1QjtrR0FBdkIsdUJBQXVCLGdRQWtCeEIsV0FBVyxxRkNsQ3ZCLDBVQVdBLDI0Q0RFVyxZQUFZLDRIQUFFLGFBQWEsaUJBRnpCLENBQUMsa0JBQWtCLENBQUM7O1NBS3BCLHVCQUF1QjsyRkFBdkIsdUJBQXVCO2tCQVRuQyxTQUFTOytCQUNDLGtCQUFrQixjQUdoQixDQUFDLGtCQUFrQixDQUFDLGNBQ3BCLElBQUksV0FDUCxDQUFDLFlBQVksRUFBRSxhQUFhLENBQUMsbUJBQ3JCLHVCQUF1QixDQUFDLE1BQU07d0dBR2IsY0FBYztzQkFBL0MsV0FBVzt1QkFBQyxtQkFBbUI7Z0JBYWIsS0FBSztzQkFBdkIsTUFBTTtnQkFFWSxJQUFJO3NCQUF0QixNQUFNO2dCQUNZLE9BQU87c0JBQXpCLE1BQU07Z0JBRUgsYUFBYTtzQkFEaEIsU0FBUzt1QkFBQyxXQUFXLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT3ZlcmxheU1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9vdmVybGF5JztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ2hhbmdlRGV0ZWN0b3JSZWYsIENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBIb3N0QmluZGluZywgT3V0cHV0LCBUZW1wbGF0ZVJlZiwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTYWZlSHRtbCB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xuaW1wb3J0IHsgQUx1UG9wb3ZlclBhbmVsLCBJTHVQb3BvdmVyUGFuZWwgfSBmcm9tICdAbHVjY2EtZnJvbnQvbmcvcG9wb3Zlcic7XG5pbXBvcnQgeyBsdVRyYW5zZm9ybVRvb2x0aXAgfSBmcm9tICcuLi9hbmltYXRpb24vaW5kZXgnO1xuXG5AQ29tcG9uZW50KHtcblx0c2VsZWN0b3I6ICdsdS10b29sdGlwLXBhbmVsJyxcblx0dGVtcGxhdGVVcmw6ICcuL3Rvb2x0aXAtcGFuZWwuY29tcG9uZW50Lmh0bWwnLFxuXHRzdHlsZVVybHM6IFsnLi90b29sdGlwLXBhbmVsLmNvbXBvbmVudC5zY3NzJ10sXG5cdGFuaW1hdGlvbnM6IFtsdVRyYW5zZm9ybVRvb2x0aXBdLFxuXHRzdGFuZGFsb25lOiB0cnVlLFxuXHRpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBPdmVybGF5TW9kdWxlXSxcblx0Y2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIEx1VG9vbHRpcFBhbmVsQ29tcG9uZW50IGV4dGVuZHMgQUx1UG9wb3ZlclBhbmVsIGltcGxlbWVudHMgSUx1UG9wb3ZlclBhbmVsIHtcblx0QEhvc3RCaW5kaW5nKCdAdHJhbnNmb3JtVG9vbHRpcCcpIGFuaW1hdGlvblN0YXRlID0gJ2VudGVyJztcblxuXHRwcml2YXRlIF9jb250ZW50OiBzdHJpbmcgfCBTYWZlSHRtbDtcblx0Z2V0IGNvbnRlbnQoKSB7XG5cdFx0cmV0dXJuIHRoaXMuX2NvbnRlbnQ7XG5cdH1cblx0c2V0IGNvbnRlbnQoYykge1xuXHRcdHRoaXMuX2NvbnRlbnQgPSBjO1xuXHRcdHRoaXMuX2NoYW5nZURldGVjdG9yUmVmLm1hcmtGb3JDaGVjaygpO1xuXHR9XG5cblx0Ly9GSVhNRSBvdXRwdXQgZXZlbnRcblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEBhbmd1bGFyLWVzbGludC9uby1vdXRwdXQtbmF0aXZlXG5cdEBPdXRwdXQoKSBvdmVycmlkZSBjbG9zZSA9IG5ldyBFdmVudEVtaXR0ZXI8dm9pZD4oKTtcblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEBhbmd1bGFyLWVzbGludC9uby1vdXRwdXQtbmF0aXZlXG5cdEBPdXRwdXQoKSBvdmVycmlkZSBvcGVuID0gbmV3IEV2ZW50RW1pdHRlcjx2b2lkPigpO1xuXHRAT3V0cHV0KCkgb3ZlcnJpZGUgaG92ZXJlZCA9IG5ldyBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4oKTtcblx0QFZpZXdDaGlsZChUZW1wbGF0ZVJlZiwgeyBzdGF0aWM6IHRydWUgfSlcblx0c2V0IHZjVGVtcGxhdGVSZWYodHI6IFRlbXBsYXRlUmVmPEhUTUxEaXZFbGVtZW50Pikge1xuXHRcdHRoaXMudGVtcGxhdGVSZWYgPSB0cjtcblx0fVxuXHRjb25zdHJ1Y3Rvcihwcml2YXRlIF9jaGFuZ2VEZXRlY3RvclJlZjogQ2hhbmdlRGV0ZWN0b3JSZWYpIHtcblx0XHRzdXBlcigpO1xuXHRcdHRoaXMuc2Nyb2xsU3RyYXRlZ3kgPSAnY2xvc2UnO1xuXHR9XG5cblx0X2VtaXRDbG9zZUV2ZW50KCk6IHZvaWQge1xuXHRcdHRoaXMuY2xvc2UuZW1pdCgpO1xuXHR9XG5cblx0X2VtaXRPcGVuRXZlbnQoKTogdm9pZCB7XG5cdFx0dGhpcy5vcGVuLmVtaXQoKTtcblx0fVxuXHRfZW1pdEhvdmVyZWRFdmVudChob3ZlcmVkOiBib29sZWFuKTogdm9pZCB7XG5cdFx0dGhpcy5ob3ZlcmVkLmVtaXQoaG92ZXJlZCk7XG5cdH1cbn1cbiIsIjxkaXZcblx0Y2xhc3M9XCJsdS10b29sdGlwLXBhbmVsXCJcblx0cm9sZT1cInRvb2x0aXBcIlxuXHRbbmdDbGFzc109XCJwYW5lbENsYXNzZXNNYXBcIlxuXHQobW91c2VvdmVyKT1cIm9uTW91c2VPdmVyKClcIlxuXHQobW91c2VsZWF2ZSk9XCJvbk1vdXNlTGVhdmUoKVwiXG5cdFthdHRyLmlkXT1cInBhbmVsSWRcIlxuXHRbQHRyYW5zZm9ybVRvb2x0aXBdPVwiJ2VudGVyJ1wiXG4+XG5cdDxkaXYgY2xhc3M9XCJsdS10b29sdGlwLWNvbnRlbnRcIiBbbmdDbGFzc109XCJjb250ZW50Q2xhc3Nlc01hcFwiIFtpbm5lckh0bWxdPVwiY29udGVudFwiPjwvZGl2PlxuPC9kaXY+XG4iXX0=
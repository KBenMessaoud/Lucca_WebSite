import { ChangeDetectorRef, ElementRef, EventEmitter } from '@angular/core';
import { ALuOptionItem, ILuOptionItem } from './option-item.model';
import * as i0 from "@angular/core";
export declare class LuOptionItemComponent<T> extends ALuOptionItem<T> implements ILuOptionItem<T> {
    private _cdr;
    protected _selected: boolean;
    get selected(): boolean;
    set selected(s: boolean);
    protected _highlighted: boolean;
    get highlighted(): boolean;
    set highlighted(h: boolean);
    value: T;
    onSelect: EventEmitter<this>;
    select(): void;
    protected _disabled: boolean;
    get disabled(): boolean;
    set disabled(d: boolean);
    element: ElementRef;
    constructor(_cdr: ChangeDetectorRef);
    static ɵfac: i0.ɵɵFactoryDeclaration<LuOptionItemComponent<any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<LuOptionItemComponent<any>, "lu-option", never, { "selected": { "alias": "selected"; "required": false; }; "highlighted": { "alias": "highlighted"; "required": false; }; "value": { "alias": "value"; "required": false; }; "disabled": { "alias": "disabled"; "required": false; }; }, { "onSelect": "onSelect"; }, never, ["*"], true, never>;
}

import { ElementRef } from '@angular/core';
import { FormControl } from '@angular/forms';
import { ILuOnOpenSubscriber } from '@lucca-front/ng/core';
import { Observable } from 'rxjs';
import { ALuOptionOperator, ILuOptionOperator } from '../option-operator.model';
import * as i0 from "@angular/core";
export declare class LuOptionSearcherComponent<T> extends ALuOptionOperator<T> implements ILuOptionOperator<T>, ILuOnOpenSubscriber {
    searchControl: FormControl<any>;
    clue$: Observable<string>;
    empty$: Observable<boolean>;
    searchInput: ElementRef<HTMLElement>;
    outOptions$: Observable<T[]>;
    set inOptions$(in$: Observable<T[]>);
    searchFn: (option: T, clue: string) => boolean;
    onOpen(): void;
    resetClue(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<LuOptionSearcherComponent<any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<LuOptionSearcherComponent<any>, "lu-option-searcher", never, { "searchFn": { "alias": "searchFn"; "required": false; }; }, {}, never, never, true, never>;
}

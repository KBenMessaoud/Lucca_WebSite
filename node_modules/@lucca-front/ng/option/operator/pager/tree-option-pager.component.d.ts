import { ILuOnScrollBottomSubscriber, ILuTree } from '@lucca-front/ng/core';
import { BehaviorSubject, Observable } from 'rxjs';
import { ALuTreeOptionOperator, ILuTreeOptionOperator } from '../tree-option-operator.model';
import * as i0 from "@angular/core";
export declare class LuTreeOptionPagerComponent<T> extends ALuTreeOptionOperator<T> implements ILuTreeOptionOperator<T>, ILuOnScrollBottomSubscriber {
    outOptions$: Observable<ILuTree<T>[]>;
    set inOptions$(in$: Observable<ILuTree<T>[]>);
    paging$: BehaviorSubject<number>;
    next(): void;
    onScrollBottom(): void;
    trim(trees?: ILuTree<T>[], paging?: number): ILuTree<T>[];
    flatten(trees?: ILuTree<T>[]): T[];
    filter(trees: ILuTree<T>[], values: T[]): ILuTree<T>[];
    static ɵfac: i0.ɵɵFactoryDeclaration<LuTreeOptionPagerComponent<any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<LuTreeOptionPagerComponent<any>, "lu-tree-option-pager", never, {}, {}, never, never, true, never>;
}

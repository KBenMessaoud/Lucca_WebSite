"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScssValueAst = void 0;
class ScssValueAst {
    get nodes() {
        return this.parsed.nodes;
    }
    set nodes(nodes) {
        this.parsed.nodes = nodes;
    }
    constructor(value, postcssValueParser) {
        this.postcssValueParser = postcssValueParser;
        this.parsed = postcssValueParser(value);
    }
    getParent(node) {
        let parent = null;
        if (this.nodes.includes(node)) {
            return parent;
        }
        this.walkFunction(/.*/, (funcNode) => {
            if (funcNode.nodes.includes(node)) {
                parent = funcNode;
                return false;
            }
            return undefined;
        });
        return parent;
    }
    getSiblings(node) {
        const parent = this.getParent(node);
        const nodes = parent === null ? this.nodes : parent.type === 'function' ? parent.nodes : [];
        return nodes.filter((n) => n !== node);
    }
    stringify(...nodes) {
        const parsed = this.postcssValueParser('');
        parsed.nodes = nodes;
        return parsed.toString();
    }
    toString() {
        return this.parsed.toString();
    }
    walk(callback, bubble) {
        this.parsed.walk(callback, bubble);
    }
    walkFunction(functionFilter, callback) {
        this.parsed.walk((node) => {
            if (node.type !== 'function') {
                return;
            }
            if (!this.matchFilter(node.value, functionFilter)) {
                return;
            }
            return callback(node);
        });
    }
    matchFilter(value, filter) {
        return typeof filter === 'string' ? value === filter : !!value.match(filter);
    }
}
exports.ScssValueAst = ScssValueAst;

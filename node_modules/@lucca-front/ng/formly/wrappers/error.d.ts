import { ViewContainerRef } from '@angular/core';
import { FormControl } from '@angular/forms';
import { FieldTypeConfig, FieldWrapper, FormlyFieldConfig } from '@ngx-formly/core';
import * as i0 from "@angular/core";
export declare class LuFormlyWrapperError extends FieldWrapper<FieldTypeConfig> {
    fieldComponent: ViewContainerRef;
    get validationId(): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<LuFormlyWrapperError, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<LuFormlyWrapperError, "lu-formly-wrapper-error", never, {}, {}, never, never, false, never>;
}
export declare class LuFormlyErrorMessage {
    formControl?: FormControl;
    field: FormlyFieldConfig;
    get errorMessages(): string[];
    static ɵfac: i0.ɵɵFactoryDeclaration<LuFormlyErrorMessage, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<LuFormlyErrorMessage, "lu-formly-error-message", never, { "formControl": { "alias": "formControl"; "required": false; }; "field": { "alias": "field"; "required": false; }; }, {}, never, never, false, never>;
}
export declare const templateErrorExtension: import("@ngx-formly/core").FormlyExtension<FormlyFieldConfig<import("@ngx-formly/core").FormlyFieldProps & {
    [additionalProperties: string]: any;
}>>;

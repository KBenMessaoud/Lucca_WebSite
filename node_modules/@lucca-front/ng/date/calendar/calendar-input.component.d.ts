import { ChangeDetectorRef, ElementRef, OnInit, Renderer2 } from '@angular/core';
import { AbstractControl, ControlValueAccessor, ValidationErrors, Validator } from '@angular/forms';
import { ALuDateAdapter, ELuDateGranularity } from '@lucca-front/ng/core';
import { ALuInput } from '@lucca-front/ng/input';
import { LuCalendarItemFactory } from './calendar-item.factory';
import { ICalendarItem } from './calendar-item.interface';
import * as i0 from "@angular/core";
export declare class LuCalendarInputComponent<D> extends ALuInput<D> implements ControlValueAccessor, OnInit, Validator {
    private _locale;
    private _factory;
    private _adapter;
    min?: D;
    max?: D;
    granularity: ELuDateGranularity;
    startOn: D;
    viewGranularity: ELuDateGranularity;
    header: ICalendarItem<D>;
    items: ICalendarItem<D>[];
    get mod(): "mod-yearlyView" | "mod-monthlyView" | "mod-dailyView";
    labels: string[];
    constructor(_changeDetectorRef: ChangeDetectorRef, _elementRef: ElementRef<HTMLElement>, _renderer: Renderer2, _locale: string, _factory: LuCalendarItemFactory<D>, _adapter: ALuDateAdapter<D>);
    ngOnInit(): void;
    writeValue(value?: D): void;
    initDayLabels(): void;
    protected render(): void;
    protected renderDailyView(month?: D): void;
    protected renderMonthlyView(year?: D): void;
    protected renderYearlyView(decade?: D): void;
    protected applyDailyMods(): void;
    protected applyMonthlyMods(): void;
    protected applyYearlyMods(): void;
    select(item: ICalendarItem<D>): void;
    protected selectDay(item: ICalendarItem<D>): void;
    protected selectMonth(item: ICalendarItem<D>): void;
    protected selectYear(item: ICalendarItem<D>): void;
    previous(): void;
    next(): void;
    trackBy(_idx: any, item: ICalendarItem<D>): string;
    increaseGranularity(): void;
    protected nextMonth(): void;
    protected nextYear(): void;
    protected nextDecade(): void;
    protected previousMonth(): void;
    protected previousYear(): void;
    protected previousDecade(): void;
    validate(control: AbstractControl): ValidationErrors | null;
    static ɵfac: i0.ɵɵFactoryDeclaration<LuCalendarInputComponent<any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<LuCalendarInputComponent<any>, "lu-calendar", never, { "min": { "alias": "min"; "required": false; }; "max": { "alias": "max"; "required": false; }; "granularity": { "alias": "granularity"; "required": false; }; "startOn": { "alias": "startOn"; "required": false; }; }, {}, never, never, true, never>;
}

import { ChangeDetectorRef, ElementRef, OnInit, Renderer2 } from '@angular/core';
import { AbstractControl, ValidationErrors, Validator } from '@angular/forms';
import { ALuDateAdapter, ELuDateGranularity } from '@lucca-front/ng/core';
import { ALuInput } from '@lucca-front/ng/input';
import * as i0 from "@angular/core";
export declare class LuDateInputDirective<D> extends ALuInput<D, HTMLInputElement> implements Validator, OnInit {
    private _adapter;
    private _focused;
    min?: D;
    max?: D;
    granularity: ELuDateGranularity;
    set placeholder(p: string);
    private _intl;
    constructor(_changeDetectorRef: ChangeDetectorRef, _elementRef: ElementRef<HTMLInputElement>, _renderer: Renderer2, _adapter: ALuDateAdapter<D>);
    ngOnInit(): void;
    protected render(): void;
    onInput(event: any): void;
    private parse;
    onFocus(): void;
    onBlur(): void;
    validate(control: AbstractControl): ValidationErrors | null;
    static ɵfac: i0.ɵɵFactoryDeclaration<LuDateInputDirective<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<LuDateInputDirective<any>, "input[luDateInput]", never, { "min": { "alias": "min"; "required": false; }; "max": { "alias": "max"; "required": false; }; "granularity": { "alias": "granularity"; "required": false; }; "placeholder": { "alias": "placeholder"; "required": false; }; }, {}, never, never, true, never>;
}

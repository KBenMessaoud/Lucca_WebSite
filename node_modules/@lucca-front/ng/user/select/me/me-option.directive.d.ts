import { TemplateRef, ViewContainerRef } from '@angular/core';
import { ILuOptionOperator } from '@lucca-front/ng/option';
import { Observable } from 'rxjs';
import { LuUserV3Service } from '../../service/index';
import { ILuUser } from '../../user.model';
import * as i0 from "@angular/core";
export declare class LuUserMeOptionDirective<U extends ILuUser = ILuUser> implements ILuOptionOperator<U> {
    private _vcr;
    private _templateRef;
    set luUserMeOptionFields(fields: string);
    set luUserMeOptionFilters(filters: string[]);
    set luUserMeOptionOrderBy(orderBy: string);
    set luUserMeOptionAppInstanceId(appInstanceId: number | string);
    set luUserMeOptionOperations(operations: number[]);
    set luUserMeOptionClue(clue: string);
    set inOptions$(in$: Observable<U[]>);
    outOptions$: Observable<U[]>;
    private _service;
    private _viewRef;
    constructor(hostService: LuUserV3Service<U>, selfService: LuUserV3Service<U>, _vcr: ViewContainerRef, _templateRef: TemplateRef<{
        $implicit: U;
    }>);
    me: ILuUser;
    private meDisplayed$;
    onOpen(): void;
    displayMe(): void;
    hideMe(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<LuUserMeOptionDirective<any>, [{ optional: true; skipSelf: true; }, { self: true; }, null, null]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<LuUserMeOptionDirective<any>, "[luUserMeOption]", never, { "luUserMeOptionFields": { "alias": "luUserMeOptionFields"; "required": false; }; "luUserMeOptionFilters": { "alias": "luUserMeOptionFilters"; "required": false; }; "luUserMeOptionOrderBy": { "alias": "luUserMeOptionOrderBy"; "required": false; }; "luUserMeOptionAppInstanceId": { "alias": "luUserMeOptionAppInstanceId"; "required": false; }; "luUserMeOptionOperations": { "alias": "luUserMeOptionOperations"; "required": false; }; "luUserMeOptionClue": { "alias": "luUserMeOptionClue"; "required": false; }; }, {}, never, never, true, never>;
}

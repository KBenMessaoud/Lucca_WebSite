import { Overlay } from '@angular/cdk/overlay';
import { AfterViewInit, ChangeDetectorRef, ElementRef, Renderer2, ViewContainerRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { LuOptionComparer } from '@lucca-front/ng/option';
import { ILuInputWithPicker } from '@lucca-front/ng/picker';
import { ALuSelectInputComponent } from '@lucca-front/ng/select';
import { LuDisplayFullname } from '../../display/index';
import * as i0 from "@angular/core";
/**
 * Displays user'picture or a placeholder with his/her initials and random bg color'
 */
export declare class LuUserSelectInputComponent<U extends import('../../user.model').ILuUser = import('../../user.model').ILuUser> extends ALuSelectInputComponent<U> implements ControlValueAccessor, ILuInputWithPicker<U>, AfterViewInit {
    protected _changeDetectorRef: ChangeDetectorRef;
    protected _overlay: Overlay;
    protected _elementRef: ElementRef<HTMLElement>;
    protected _viewContainerRef: ViewContainerRef;
    protected _renderer: Renderer2;
    searchFormat: LuDisplayFullname;
    set inputPlaceholder(p: string);
    fields: string;
    filters: string[];
    orderBy: string;
    appInstanceId: number | string;
    operations: number[];
    enableFormerEmployees: boolean;
    clue: string;
    byId: LuOptionComparer<U>;
    intl: import("./user-select-input.translate").ILuUserSelectInputLabel;
    constructor(_changeDetectorRef: ChangeDetectorRef, _overlay: Overlay, _elementRef: ElementRef<HTMLElement>, _viewContainerRef: ViewContainerRef, _renderer: Renderer2);
    static ɵfac: i0.ɵɵFactoryDeclaration<LuUserSelectInputComponent<any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<LuUserSelectInputComponent<any>, "lu-user-select", never, { "inputPlaceholder": { "alias": "placeholder"; "required": false; }; "fields": { "alias": "fields"; "required": false; }; "filters": { "alias": "filters"; "required": false; }; "orderBy": { "alias": "orderBy"; "required": false; }; "appInstanceId": { "alias": "appInstanceId"; "required": false; }; "operations": { "alias": "operations"; "required": false; }; "enableFormerEmployees": { "alias": "enableFormerEmployees"; "required": false; }; }, {}, never, never, true, never>;
}

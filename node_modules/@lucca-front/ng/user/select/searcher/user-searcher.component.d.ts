import { ElementRef, OnDestroy, OnInit } from '@angular/core';
import { FormGroup } from '@angular/forms';
import { ILuOnCloseSubscriber, ILuOnOpenSubscriber, ILuOnScrollBottomSubscriber } from '@lucca-front/ng/core';
import { Observable, Subject } from 'rxjs';
import { LuUserV3Service } from '../../service/index';
import { ILuUser } from '../../user.model';
import * as i0 from "@angular/core";
export declare class LuUserPagedSearcherComponent<U extends ILuUser = ILuUser> implements OnInit, OnDestroy, ILuOnOpenSubscriber, ILuOnScrollBottomSubscriber, ILuOnCloseSubscriber {
    private _service;
    private _subs;
    fixed: boolean;
    searchInput: ElementRef<HTMLInputElement>;
    set fields(fields: string);
    set filters(filters: string[]);
    set orderBy(orderBy: string);
    set appInstanceId(appInstanceId: number | string);
    set operations(operations: number[]);
    enableFormerEmployees: boolean;
    clueChange: Observable<string>;
    form: FormGroup;
    outOptions$: Subject<U[]>;
    loading$: Observable<boolean>;
    empty$: Observable<boolean>;
    private _loading;
    private _isOpened$;
    private _page$;
    private _isLastPage;
    private _options;
    intl: import("./user-searcher.translate").ILuUserSearcherLabel;
    constructor(hostService: LuUserV3Service<U>, selfService: LuUserV3Service<U>);
    ngOnInit(): void;
    ngOnDestroy(): void;
    onOpen(): void;
    onScrollBottom(): void;
    onClose(): void;
    reset(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<LuUserPagedSearcherComponent<any>, [{ optional: true; skipSelf: true; }, { self: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<LuUserPagedSearcherComponent<any>, "lu-user-paged-searcher", never, { "fields": { "alias": "fields"; "required": false; }; "filters": { "alias": "filters"; "required": false; }; "orderBy": { "alias": "orderBy"; "required": false; }; "appInstanceId": { "alias": "appInstanceId"; "required": false; }; "operations": { "alias": "operations"; "required": false; }; "enableFormerEmployees": { "alias": "enableFormerEmployees"; "required": false; }; }, { "clueChange": "clueChange"; }, never, never, true, never>;
}

import { ElementRef } from '@angular/core';
import { FormFieldSize } from '@lucca-front/ng/form-field';
import { TextfieldAddon } from './textfield-addon';
import { InlineMessageState } from '@lucca-front/ng/inline-message';
import { LuccaIcon } from '@lucca-front/icons';
import { AbstractFieldComponent } from '../abstract-field-component';
import { SafeHtml } from '@angular/platform-browser';
import * as i0 from "@angular/core";
import * as i1 from "../noop-value-accessor.directive";
export declare class TextfieldComponent extends AbstractFieldComponent {
    label: string;
    placeholder: string;
    hiddenLabel: boolean;
    tooltip: string | SafeHtml;
    inlineMessage: string;
    inlineMessageState: InlineMessageState;
    size: FormFieldSize;
    hasClearer: boolean;
    hasSearchIcon: boolean;
    inputElementRef: ElementRef<HTMLInputElement>;
    prefix: TextfieldAddon;
    suffix: TextfieldAddon;
    type: 'text' | 'email' | 'password' | 'number';
    /**
     * Search icon to use for when `hasSearchIcon` is true, defaults to 'search'
     */
    searchIcon: LuccaIcon;
    intl: import("./textfield.translate").LuTextfieldLabel;
    clearValue(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TextfieldComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TextfieldComponent, "lu-textfield", never, { "label": { "alias": "label"; "required": true; }; "placeholder": { "alias": "placeholder"; "required": false; }; "hiddenLabel": { "alias": "hiddenLabel"; "required": false; }; "tooltip": { "alias": "tooltip"; "required": false; }; "inlineMessage": { "alias": "inlineMessage"; "required": false; }; "inlineMessageState": { "alias": "inlineMessageState"; "required": false; }; "size": { "alias": "size"; "required": false; }; "hasClearer": { "alias": "hasClearer"; "required": false; }; "hasSearchIcon": { "alias": "hasSearchIcon"; "required": false; }; "prefix": { "alias": "prefix"; "required": false; }; "suffix": { "alias": "suffix"; "required": false; }; "type": { "alias": "type"; "required": false; }; "searchIcon": { "alias": "searchIcon"; "required": false; }; }, {}, never, never, true, [{ directive: typeof i1.NoopValueAccessorDirective; inputs: {}; outputs: {}; }]>;
    static ngAcceptInputType_hiddenLabel: unknown;
    static ngAcceptInputType_hasClearer: unknown;
    static ngAcceptInputType_hasSearchIcon: unknown;
}

{"version":3,"file":"lucca-front-ng-modal.mjs","sources":["../../../packages/ng/modal/modal-config.default.ts","../../../packages/ng/modal/modal-config.model.ts","../../../packages/ng/modal/modal.translate.ts","../../../packages/ng/modal/modal-ref.model.ts","../../../packages/ng/modal/modal-panel.component.ts","../../../packages/ng/modal/modal-panel.component.html","../../../packages/ng/modal/modal.token.ts","../../../packages/ng/modal/modal.utils.ts","../../../packages/ng/modal/modal-ref.factory.ts","../../../packages/ng/modal/modal.service.ts","../../../packages/ng/modal/modal.module.ts","../../../packages/ng/modal/lucca-front-ng-modal.ts"],"sourcesContent":["import { ChangeDetectionStrategy } from '@angular/core';\nimport { LuModalConfig } from './modal-config.model';\n\nexport const luDefaultModalConfig: LuModalConfig = {\n\tmode: 'modal',\n\tposition: 'center',\n\tnoBackdrop: false,\n\tundismissable: false,\n\tbackdropClass: ['cdk-overlay-dark-backdrop', 'lu-popup-backdrop'],\n\tpanelClass: 'lu-popup-panel',\n\tsize: 'M',\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n};\n\nexport const luDefaultSidepanelConfig: LuModalConfig = {\n\t...luDefaultModalConfig,\n\tmode: 'sidepanel',\n\tposition: 'right',\n};\n","import { ChangeDetectionStrategy } from '@angular/core';\nimport { ILuPopupConfig } from '@lucca-front/ng/popup';\n\nexport type LuModalMode = 'modal' | 'sidepanel';\n\nexport interface LuModalClasses {\n\tpanel: string;\n\tpanelContainer: string;\n\tpanelInner: string;\n\toverlayPane?: string;\n}\n\nexport const luModalClasses: Record<LuModalMode, LuModalClasses> = {\n\tmodal: { panel: 'lu-modal-panel', panelInner: 'lu-modal-panel-inner', panelContainer: 'lu-modal-container' },\n\tsidepanel: { panel: 'lu-sidepanel-panel', panelInner: 'lu-sidepanel-panel-inner', overlayPane: 'mod-sidepanel', panelContainer: 'lu-sidepanel-container' },\n};\n\ntype LuModalModeWithPosition = { mode?: 'modal'; position: undefined | 'center' } | { mode: 'sidepanel'; position: 'left' | 'right' };\n\nexport type LuModalConfig = ILuPopupConfig &\n\tLuModalModeWithPosition & {\n\t\tchangeDetection: ChangeDetectionStrategy;\n\t};\n\n/**\n * @deprecated Use LuModalConfig instead.\n */\nexport type ILuModalConfig = LuModalConfig;\n","import { InjectionToken } from '@angular/core';\nimport { ILuTranslation } from '@lucca-front/ng/core';\n\nexport const LU_MODAL_TRANSLATIONS = new InjectionToken('LuModalTranslations', {\n\tfactory: () => luModalTranslations,\n});\n\nexport interface ILuModalLabel {\n\tsubmit: string;\n\tcancel: string;\n\tclose: string;\n}\n\nexport const luModalTranslations: ILuTranslation<ILuModalLabel> = {\n\ten: {\n\t\tsubmit: 'Ok',\n\t\tcancel: 'Cancel',\n\t\tclose: 'Close',\n\t},\n\tfr: {\n\t\tsubmit: 'Ok',\n\t\tcancel: 'Annuler',\n\t\tclose: 'Fermer',\n\t},\n\tes: {\n\t\tsubmit: 'Ok',\n\t\tcancel: 'Cancelar',\n\t\tclose: 'Cerrar',\n\t},\n};\n","import { ComponentType } from '@angular/cdk/portal';\nimport { ALuPopupRef, ILuPopupRef } from '@lucca-front/ng/popup';\nimport { LuModalClasses, luModalClasses, LuModalConfig, LuModalMode } from './modal-config.model';\nimport { ILuModalContent, LuModalContentResult } from './modal.model';\n\nexport interface ILuModalRef<D = unknown, R = unknown> extends ILuPopupRef<D, R> {\n\tmode: LuModalMode;\n\tmodalClasses: LuModalClasses;\n}\n\nexport interface IModalRefFactory {\n\tforge<T extends ILuModalContent, C extends LuModalConfig, D>(component: ComponentType<T>, config: C): ILuModalRef<D, LuModalContentResult<T>>;\n}\n\nexport abstract class ALuModalRef<T extends ILuModalContent = ILuModalContent, D = unknown, R = unknown, C extends LuModalConfig = LuModalConfig>\n\textends ALuPopupRef<T, D, R, C>\n\timplements ILuModalRef<D, R>\n{\n\tpublic get mode(): LuModalMode {\n\t\treturn this._config.mode || 'modal';\n\t}\n\n\tpublic get modalClasses(): LuModalClasses {\n\t\treturn luModalClasses[this.mode];\n\t}\n}\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { AsyncPipe, NgClass, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, Directive, DoCheck, ElementRef, HostBinding, Injector, OnDestroy, Renderer2, Type, ViewChild, ViewContainerRef } from '@angular/core';\nimport { getIntl } from '@lucca-front/ng/core';\nimport { LuTooltipModule } from '@lucca-front/ng/tooltip';\nimport { isObservable, Observable, of, ReplaySubject, Subject, Subscription, timer } from 'rxjs';\nimport { delay, distinctUntilChanged, map, switchMap, tap } from 'rxjs/operators';\nimport { LuModalClasses } from './modal-config.model';\nimport { ALuModalRef } from './modal-ref.model';\nimport { ILuModalContent } from './modal.model';\nimport { LU_MODAL_TRANSLATIONS } from './modal.translate';\n\nlet modalId = 0;\n\n@Directive()\nexport abstract class ALuModalPanelComponent<T extends ILuModalContent> implements OnDestroy, DoCheck {\n\t@ViewChild('container', { read: ViewContainerRef, static: true })\n\tprotected _containerRef: ViewContainerRef;\n\tprotected _componentInstance: ILuModalContent;\n\tprotected doCheck$ = new ReplaySubject<void>(1);\n\n\tpublic intl = getIntl(LU_MODAL_TRANSLATIONS);\n\tprotected title$ = this.listenComponentValue(() => this._componentInstance.title);\n\tprotected submitLabel$ = this.listenComponentValue(() => this._componentInstance.submitLabel || this.intl.submit);\n\tprotected cancelLabel$ = this.listenComponentValue(() => this._componentInstance.cancelLabel || this.intl.cancel);\n\tprotected submitCounter$ = this.listenComponentValue(() => this._componentInstance.submitCounter);\n\tprotected submitDisabled$ = this.listenComponentValue(() => this._componentInstance.submitDisabled);\n\tprotected hasSubmitCounter$ = this.submitCounter$.pipe(map(Boolean));\n\n\tprotected closeLabel = this.intl.close;\n\n\tget isSubmitHidden() {\n\t\treturn !this._componentInstance.submitAction;\n\t}\n\tget submitPalette() {\n\t\treturn this._componentInstance.submitPalette || 'primary';\n\t}\n\n\tsubmitClass$ = new Subject();\n\terror$ = new Subject();\n\n\tpublic readonly modalId = modalId++;\n\n\tprivate _subs = new Subscription();\n\tpublic modalClasses: LuModalClasses;\n\n\tconstructor(protected _ref: ALuModalRef<T>, _elementRef: ElementRef<HTMLElement>, _renderer: Renderer2) {\n\t\tthis.modalClasses = _ref.modalClasses;\n\t\t_renderer.addClass(_elementRef.nativeElement, this.modalClasses.panel);\n\t}\n\tngDoCheck(): void {\n\t\tthis.doCheck$.next();\n\t}\n\tattachInnerComponent(componentType: Type<T>, injector: Injector) {\n\t\tconst ref = this._containerRef.createComponent(componentType, { injector });\n\t\tthis._componentInstance = ref.instance;\n\t\treturn ref;\n\t}\n\tngOnDestroy() {\n\t\tthis.doCheck$.complete();\n\t\tthis._subs.unsubscribe();\n\t}\n\tdismiss() {\n\t\tthis._ref.dismiss();\n\t}\n\tsubmit() {\n\t\tthis.error$.next(undefined);\n\t\tthis.submitClass$.next('is-loading');\n\t\tconst result$ = this._componentInstance.submitAction();\n\t\tif (result$ instanceof Observable) {\n\t\t\tthis._subs.add(\n\t\t\t\tresult$\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\ttap((_) => this.submitClass$.next('is-success')),\n\t\t\t\t\t\tdelay(500),\n\t\t\t\t\t)\n\t\t\t\t\t.subscribe({\n\t\t\t\t\t\tnext: (result) => this._ref.close(result),\n\t\t\t\t\t\terror: (err) => {\n\t\t\t\t\t\t\tthis.submitClass$.next('is-error');\n\t\t\t\t\t\t\tthis.error$.next(err);\n\t\t\t\t\t\t\ttimer(2000).subscribe((_) => {\n\t\t\t\t\t\t\t\tthis.submitClass$.next('');\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcomplete: () => {\n\t\t\t\t\t\t\tthis.submitClass$.next('');\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t);\n\t\t} else {\n\t\t\tthis._ref.close(result$);\n\t\t}\n\t}\n\n\tprivate listenComponentValue<TValue>(selector: () => TValue | Observable<TValue>): Observable<TValue> {\n\t\treturn this.doCheck$.pipe(\n\t\t\tmap(selector),\n\t\t\tdistinctUntilChanged(),\n\t\t\tswitchMap((value) => (isObservable(value) ? value : of(value))),\n\t\t);\n\t}\n}\n\nconst panelImports = [A11yModule, AsyncPipe, LuTooltipModule, NgClass, NgIf];\n\n@Component({\n\tselector: 'lu-modal-panel',\n\tstandalone: true,\n\timports: panelImports,\n\ttemplateUrl: './modal-panel.component.html',\n\tstyleUrls: ['./modal-panel.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LuModalPanelComponent<T extends ILuModalContent = ILuModalContent> extends ALuModalPanelComponent<T> {\n\t@HostBinding('class.lu-modal-panel') class = true;\n\tconstructor(_ref: ALuModalRef<T>, _elementRef: ElementRef<HTMLElement>, _renderer: Renderer2) {\n\t\tsuper(_ref, _elementRef, _renderer);\n\t}\n}\n@Component({\n\tselector: 'lu-modal-panel-default',\n\tstandalone: true,\n\timports: panelImports,\n\ttemplateUrl: './modal-panel.component.html',\n\tstyleUrls: ['./modal-panel.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.Default,\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class LuModalPanelComponentDefaultCD<T extends ILuModalContent = ILuModalContent> extends ALuModalPanelComponent<T> {\n\t@HostBinding('class.lu-modal-panel') class = true;\n\tconstructor(_ref: ALuModalRef<T>, _elementRef: ElementRef<HTMLElement>, _renderer: Renderer2) {\n\t\tsuper(_ref, _elementRef, _renderer);\n\t}\n}\n","<div\n\tcdkTrapFocus=\"true\"\n\tcdkTrapFocusAutoCapture=\"true\"\n\trole=\"dialog\"\n\taria-modal=\"true\"\n\t[attr.aria-labelledby]=\"'luModalTitle' + modalId\"\n\t[ngClass]=\"modalClasses.panelInner\"\n>\n\t<div [ngClass]=\"modalClasses.panelContainer\" role=\"document\">\n\t\t<div class=\"lu-modal-header\" tabindex=\"-1\" cdkFocusInitial>\n\t\t\t<button type=\"button\" class=\"actionIcon mod-S lu-modal-header-close\" (click)=\"dismiss()\" [luTooltip]=\"closeLabel\">\n\t\t\t\t<span aria-hidden=\"true\" class=\"lucca-icon icon-signClose\"></span>\n\t\t\t\t<span class=\"u-mask\">{{ closeLabel }}</span>\n\t\t\t</button>\n\t\t\t<h1 [attr.id]=\"'luModalTitle' + modalId\" class=\"lu-modal-header-title\">{{ title$ | async }}</h1>\n\t\t</div>\n\t\t<div class=\"lu-modal-content\">\n\t\t\t<ng-container #container></ng-container>\n\t\t</div>\n\t\t<div class=\"lu-modal-footer\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\t*ngIf=\"!isSubmitHidden\"\n\t\t\t\tclass=\"button palette-{{ submitPalette }}\"\n\t\t\t\t[disabled]=\"submitDisabled$ | async\"\n\t\t\t\t[ngClass]=\"submitClass$ | async\"\n\t\t\t\t(click)=\"submit()\"\n\t\t\t>\n\t\t\t\t{{ submitLabel$ | async }}\n\t\t\t\t<label class=\"numericBadge palette-primary\" *ngIf=\"hasSubmitCounter$ | async\">{{ submitCounter$ | async }}</label>\n\t\t\t</button>\n\t\t\t<button type=\"button\" class=\"button mod-text\" (click)=\"dismiss()\">{{ cancelLabel$ | async }}</button>\n\t\t</div>\n\t</div>\n</div>\n","import { InjectionToken } from '@angular/core';\nimport { luDefaultModalConfig } from './modal-config.default';\nimport { LuModalConfig } from './modal-config.model';\nimport { IModalRefFactory } from './modal-ref.model';\n\n/** Injection token that can be used to access the data that was passed in to a dialog. */\nexport const LU_MODAL_DATA = new InjectionToken<unknown>('LuModalData');\nexport const LU_MODAL_CONFIG = new InjectionToken<LuModalConfig>('LuModalDefaultConfig', {\n\tfactory: () => luDefaultModalConfig,\n});\nexport const LU_MODAL_REF_FACTORY = new InjectionToken<IModalRefFactory>('LuModalRefFactory');\n","import { ApplicationRef } from '@angular/core';\n\nexport function setAriaHiddenOnApplicationRoot(applicationRef: ApplicationRef, hidden: boolean): void {\n\tfor (const component of applicationRef.components) {\n\t\tconst nativeElement = component.location.nativeElement as unknown;\n\n\t\tif (nativeElement instanceof HTMLElement) {\n\t\t\tnativeElement.ariaHidden = hidden ? 'true' : undefined;\n\t\t}\n\t}\n}\n","import { ComponentType, Overlay } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ApplicationRef, ChangeDetectionStrategy, ComponentRef, inject, Injectable, Injector } from '@angular/core';\nimport { ILuPopupRefFactory } from '@lucca-front/ng/popup';\nimport { LuModalConfig } from './modal-config.model';\nimport { ALuModalPanelComponent, LuModalPanelComponent, LuModalPanelComponentDefaultCD } from './modal-panel.component';\nimport { ALuModalRef, ILuModalRef } from './modal-ref.model';\nimport { ILuModalContent } from './modal.model';\nimport { LU_MODAL_DATA } from './modal.token';\nimport { setAriaHiddenOnApplicationRoot } from './modal.utils';\n\nclass LuModalRef<T extends ILuModalContent = ILuModalContent, D = unknown, R = unknown, C extends LuModalConfig = LuModalConfig> extends ALuModalRef<T, D, R, C> implements ILuModalRef<D, R> {\n\tprotected _containerRef: ComponentRef<ALuModalPanelComponent<T>>;\n\tconstructor(\n\t\tprotected override _overlay: Overlay,\n\t\tprotected override _injector: Injector,\n\t\tprotected override _component: ComponentType<T>,\n\t\tprotected override _config: C,\n\t\tprotected _applicationRef: ApplicationRef,\n\t) {\n\t\tsuper(_overlay, _injector, _component, _config);\n\t}\n\tprotected override _openPopup(data?: D) {\n\t\tconst injector = Injector.create({\n\t\t\tproviders: [\n\t\t\t\t{ provide: ALuModalRef, useValue: this },\n\t\t\t\t{ provide: LU_MODAL_DATA, useValue: data },\n\t\t\t],\n\t\t\tparent: this._injector,\n\t\t});\n\n\t\tconst containerPortal = new ComponentPortal<ALuModalPanelComponent<T>>(\n\t\t\tthis._config.changeDetection === ChangeDetectionStrategy.OnPush ? LuModalPanelComponent : LuModalPanelComponentDefaultCD,\n\t\t\tundefined,\n\t\t\tinjector,\n\t\t);\n\t\tthis._containerRef = this._overlayRef.attach<ALuModalPanelComponent<T>>(containerPortal);\n\t\tconst panel = this._containerRef.instance;\n\t\tthis._componentRef = panel.attachInnerComponent(this._component, injector);\n\t\tsetAriaHiddenOnApplicationRoot(this._applicationRef, true);\n\t}\n\tprotected override _closePopup() {\n\t\tthis._componentRef.destroy();\n\t\tthis._containerRef.destroy();\n\t\tsetAriaHiddenOnApplicationRoot(this._applicationRef, false);\n\t}\n\n\tprotected override _getOverlayPanelClasses(): string[] {\n\t\tconst classes = super._getOverlayPanelClasses();\n\n\t\tif (this.modalClasses.overlayPane) {\n\t\t\tclasses.push(this.modalClasses.overlayPane);\n\t\t}\n\n\t\treturn classes;\n\t}\n}\n\n@Injectable()\nexport class LuModalRefFactory implements ILuPopupRefFactory<ILuModalContent, LuModalConfig> {\n\tprotected _applicationRef = inject(ApplicationRef);\n\n\tconstructor(protected _overlay: Overlay, protected _injector: Injector) {}\n\tforge<T extends ILuModalContent, C extends LuModalConfig, D, R>(component: ComponentType<T>, config: C) {\n\t\treturn new LuModalRef<T, D, R>(this._overlay, this._injector, component, config, this._applicationRef);\n\t}\n}\n","import { ComponentType } from '@angular/cdk/portal';\nimport { inject, Injectable } from '@angular/core';\nimport { LuModalConfig } from './modal-config.model';\nimport { ILuModalRef } from './modal-ref.model';\nimport { ILuModalContent, LuModalContentResult } from './modal.model';\nimport { LU_MODAL_CONFIG, LU_MODAL_REF_FACTORY } from './modal.token';\n\n@Injectable()\nexport class LuModal {\n\tprotected _factory = inject(LU_MODAL_REF_FACTORY);\n\tprotected _config = inject(LU_MODAL_CONFIG);\n\n\topen<T extends ILuModalContent, D>(component: ComponentType<T>, data: D = undefined, config: Partial<LuModalConfig> = {}): ILuModalRef<D, LuModalContentResult<T>> {\n\t\tconst extendedConfig = { ...this._config, ...config } as LuModalConfig;\n\t\tconst ref = this._factory.forge<T, LuModalConfig, D>(component, extendedConfig);\n\t\tref.open(data);\n\t\treturn ref;\n\t}\n}\n","import { OverlayModule } from '@angular/cdk/overlay';\nimport { NgModule, Provider } from '@angular/core';\nimport { LuModalRefFactory } from './modal-ref.factory';\nimport { LuModal } from './modal.service';\nimport { LU_MODAL_REF_FACTORY } from './modal.token';\n\n/**\n * Provide LuModal.\n * Note that OverlayModule should be imported in one of the EnvironmentInjectors (AppModule, lazy-loaded route) using `providers: [importProvidersFrom(OverlayModule)]`.\n */\nexport function provideLuModal(): Provider[] {\n\treturn [LuModal, { provide: LU_MODAL_REF_FACTORY, useClass: LuModalRefFactory }];\n}\n\n@NgModule({\n\timports: [OverlayModule],\n\tproviders: [provideLuModal()],\n})\nexport class LuModalModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.ALuModalRef"],"mappings":";;;;;;;;;;;;;;;AAGa,MAAA,oBAAoB,GAAkB;AAClD,IAAA,IAAI,EAAE,OAAO;AACb,IAAA,QAAQ,EAAE,QAAQ;AAClB,IAAA,UAAU,EAAE,KAAK;AACjB,IAAA,aAAa,EAAE,KAAK;AACpB,IAAA,aAAa,EAAE,CAAC,2BAA2B,EAAE,mBAAmB,CAAC;AACjE,IAAA,UAAU,EAAE,gBAAgB;AAC5B,IAAA,IAAI,EAAE,GAAG;IACT,eAAe,EAAE,uBAAuB,CAAC,MAAM;EAC9C;AAEW,MAAA,wBAAwB,GAAkB;AACtD,IAAA,GAAG,oBAAoB;AACvB,IAAA,IAAI,EAAE,WAAW;AACjB,IAAA,QAAQ,EAAE,OAAO;;;ACLL,MAAA,cAAc,GAAwC;AAClE,IAAA,KAAK,EAAE,EAAE,KAAK,EAAE,gBAAgB,EAAE,UAAU,EAAE,sBAAsB,EAAE,cAAc,EAAE,oBAAoB,EAAE;AAC5G,IAAA,SAAS,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,UAAU,EAAE,0BAA0B,EAAE,WAAW,EAAE,eAAe,EAAE,cAAc,EAAE,wBAAwB,EAAE;;;MCX9I,qBAAqB,GAAG,IAAI,cAAc,CAAC,qBAAqB,EAAE;AAC9E,IAAA,OAAO,EAAE,MAAM,mBAAmB;AAClC,CAAA,EAAE;AAQU,MAAA,mBAAmB,GAAkC;AACjE,IAAA,EAAE,EAAE;AACH,QAAA,MAAM,EAAE,IAAI;AACZ,QAAA,MAAM,EAAE,QAAQ;AAChB,QAAA,KAAK,EAAE,OAAO;AACd,KAAA;AACD,IAAA,EAAE,EAAE;AACH,QAAA,MAAM,EAAE,IAAI;AACZ,QAAA,MAAM,EAAE,SAAS;AACjB,QAAA,KAAK,EAAE,QAAQ;AACf,KAAA;AACD,IAAA,EAAE,EAAE;AACH,QAAA,MAAM,EAAE,IAAI;AACZ,QAAA,MAAM,EAAE,UAAU;AAClB,QAAA,KAAK,EAAE,QAAQ;AACf,KAAA;;;ACdI,MAAgB,WACrB,SAAQ,WAAuB,CAAA;AAG/B,IAAA,IAAW,IAAI,GAAA;AACd,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC;KACpC;AAED,IAAA,IAAW,YAAY,GAAA;AACtB,QAAA,OAAO,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACjC;AACD;;ACbD,IAAI,OAAO,GAAG,CAAC,CAAC;AAEhB,MACsB,sBAAsB,CAAA;AAgB3C,IAAA,IAAI,cAAc,GAAA;AACjB,QAAA,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC;KAC7C;AACD,IAAA,IAAI,aAAa,GAAA;AAChB,QAAA,OAAO,IAAI,CAAC,kBAAkB,CAAC,aAAa,IAAI,SAAS,CAAC;KAC1D;AAUD,IAAA,WAAA,CAAsB,IAAoB,EAAE,WAAoC,EAAE,SAAoB,EAAA;QAAhF,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAgB;AA3BhC,QAAA,IAAA,CAAA,QAAQ,GAAG,IAAI,aAAa,CAAO,CAAC,CAAC,CAAC;AAEzC,QAAA,IAAA,CAAA,IAAI,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;AACnC,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;QACxE,IAAY,CAAA,YAAA,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,IAAI,CAAC,kBAAkB,CAAC,WAAW,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACxG,IAAY,CAAA,YAAA,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,IAAI,CAAC,kBAAkB,CAAC,WAAW,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACxG,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;AACxF,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,CAAC;AAC1F,QAAA,IAAA,CAAA,iBAAiB,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;AAE3D,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;AASvC,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,OAAO,EAAE,CAAC;AAC7B,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;QAEP,IAAO,CAAA,OAAA,GAAG,OAAO,EAAE,CAAC;AAE5B,QAAA,IAAA,CAAA,KAAK,GAAG,IAAI,YAAY,EAAE,CAAC;AAIlC,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;AACtC,QAAA,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;KACvE;IACD,SAAS,GAAA;AACR,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;KACrB;IACD,oBAAoB,CAAC,aAAsB,EAAE,QAAkB,EAAA;AAC9D,QAAA,MAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,aAAa,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC;AAC5E,QAAA,IAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC,QAAQ,CAAC;AACvC,QAAA,OAAO,GAAG,CAAC;KACX;IACD,WAAW,GAAA;AACV,QAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;AACzB,QAAA,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;KACzB;IACD,OAAO,GAAA;AACN,QAAA,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;KACpB;IACD,MAAM,GAAA;AACL,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC5B,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACrC,MAAM,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;QACvD,IAAI,OAAO,YAAY,UAAU,EAAE;AAClC,YAAA,IAAI,CAAC,KAAK,CAAC,GAAG,CACb,OAAO;iBACL,IAAI,CACJ,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EAChD,KAAK,CAAC,GAAG,CAAC,CACV;AACA,iBAAA,SAAS,CAAC;AACV,gBAAA,IAAI,EAAE,CAAC,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;AACzC,gBAAA,KAAK,EAAE,CAAC,GAAG,KAAI;AACd,oBAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACnC,oBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACtB,KAAK,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAI;AAC3B,wBAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC5B,qBAAC,CAAC,CAAC;iBACH;gBACD,QAAQ,EAAE,MAAK;AACd,oBAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;iBAC3B;AACD,aAAA,CAAC,CACH,CAAC;AACF,SAAA;AAAM,aAAA;AACN,YAAA,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AACzB,SAAA;KACD;AAEO,IAAA,oBAAoB,CAAS,QAA2C,EAAA;AAC/E,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CACxB,GAAG,CAAC,QAAQ,CAAC,EACb,oBAAoB,EAAE,EACtB,SAAS,CAAC,CAAC,KAAK,MAAM,YAAY,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAC/D,CAAC;KACF;8GAtFoB,sBAAsB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;AAAtB,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,sBAAsB,iHACX,gBAAgB,EAAA,MAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA;;2FAD3B,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBAD3C,SAAS;gJAGC,aAAa,EAAA,CAAA;sBADtB,SAAS;uBAAC,WAAW,EAAE,EAAE,IAAI,EAAE,gBAAgB,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;;AAwFjE,MAAM,YAAY,GAAG,CAAC,UAAU,EAAE,SAAS,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;AAE7E,MAQa,qBAAmE,SAAQ,sBAAyB,CAAA;AAEhH,IAAA,WAAA,CAAY,IAAoB,EAAE,WAAoC,EAAE,SAAoB,EAAA;AAC3F,QAAA,KAAK,CAAC,IAAI,EAAE,WAAW,EAAE,SAAS,CAAC,CAAC;QAFA,IAAK,CAAA,KAAA,GAAG,IAAI,CAAC;KAGjD;8GAJW,qBAAqB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;kGAArB,qBAAqB,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,sBAAA,EAAA,YAAA,EAAA,EAAA,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EClHlC,g8CAmCA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EDqEsB,UAAU,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,EAAA,yBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAE,SAAS,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAAE,eAAe,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,qBAAA,EAAA,qBAAA,EAAA,mBAAA,EAAA,mBAAA,EAAA,uBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,iBAAA,EAAA,kBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAE,OAAO,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAE,IAAI,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA,EAAA;;2FAU9D,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBARjC,SAAS;AACC,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,gBAAgB,cACd,IAAI,EAAA,OAAA,EACP,YAAY,EAGJ,eAAA,EAAA,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,g8CAAA,EAAA,CAAA;gJAGV,KAAK,EAAA,CAAA;sBAAzC,WAAW;uBAAC,sBAAsB,CAAA;;AAKpC,MASa,8BAA4E,SAAQ,sBAAyB,CAAA;AAEzH,IAAA,WAAA,CAAY,IAAoB,EAAE,WAAoC,EAAE,SAAoB,EAAA;AAC3F,QAAA,KAAK,CAAC,IAAI,EAAE,WAAW,EAAE,SAAS,CAAC,CAAC;QAFA,IAAK,CAAA,KAAA,GAAG,IAAI,CAAC;KAGjD;8GAJW,8BAA8B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;kGAA9B,8BAA8B,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,wBAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,sBAAA,EAAA,YAAA,EAAA,EAAA,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,ECjI3C,g8CAmCA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EDqEsB,UAAU,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,EAAA,yBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAE,SAAS,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAAE,eAAe,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,qBAAA,EAAA,qBAAA,EAAA,mBAAA,EAAA,mBAAA,EAAA,uBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,iBAAA,EAAA,kBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAE,OAAO,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAE,IAAI,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,OAAA,EAAA,CAAA,CAAA,EAAA;;2FAyB9D,8BAA8B,EAAA,UAAA,EAAA,CAAA;kBAT1C,SAAS;AACC,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,wBAAwB,cACtB,IAAI,EAAA,OAAA,EACP,YAAY,EAGJ,eAAA,EAAA,uBAAuB,CAAC,OAAO,EAAA,QAAA,EAAA,g8CAAA,EAAA,CAAA;gJAIX,KAAK,EAAA,CAAA;sBAAzC,WAAW;uBAAC,sBAAsB,CAAA;;;AE7HpC;MACa,aAAa,GAAG,IAAI,cAAc,CAAU,aAAa,EAAE;MAC3D,eAAe,GAAG,IAAI,cAAc,CAAgB,sBAAsB,EAAE;AACxF,IAAA,OAAO,EAAE,MAAM,oBAAoB;AACnC,CAAA,EAAE;MACU,oBAAoB,GAAG,IAAI,cAAc,CAAmB,mBAAmB;;ACR5E,SAAA,8BAA8B,CAAC,cAA8B,EAAE,MAAe,EAAA;AAC7F,IAAA,KAAK,MAAM,SAAS,IAAI,cAAc,CAAC,UAAU,EAAE;AAClD,QAAA,MAAM,aAAa,GAAG,SAAS,CAAC,QAAQ,CAAC,aAAwB,CAAC;QAElE,IAAI,aAAa,YAAY,WAAW,EAAE;AACzC,YAAA,aAAa,CAAC,UAAU,GAAG,MAAM,GAAG,MAAM,GAAG,SAAS,CAAC;AACvD,SAAA;AACD,KAAA;AACF;;ACCA,MAAM,UAA2H,SAAQ,WAAuB,CAAA;IAE/J,WACoB,CAAA,QAAiB,EACjB,SAAmB,EACnB,UAA4B,EAC5B,OAAU,EACnB,eAA+B,EAAA;QAEzC,KAAK,CAAC,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;QAN7B,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAS;QACjB,IAAS,CAAA,SAAA,GAAT,SAAS,CAAU;QACnB,IAAU,CAAA,UAAA,GAAV,UAAU,CAAkB;QAC5B,IAAO,CAAA,OAAA,GAAP,OAAO,CAAG;QACnB,IAAe,CAAA,eAAA,GAAf,eAAe,CAAgB;KAGzC;AACkB,IAAA,UAAU,CAAC,IAAQ,EAAA;AACrC,QAAA,MAAM,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC;AAChC,YAAA,SAAS,EAAE;AACV,gBAAA,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE;AACxC,gBAAA,EAAE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAE;AAC1C,aAAA;YACD,MAAM,EAAE,IAAI,CAAC,SAAS;AACtB,SAAA,CAAC,CAAC;QAEH,MAAM,eAAe,GAAG,IAAI,eAAe,CAC1C,IAAI,CAAC,OAAO,CAAC,eAAe,KAAK,uBAAuB,CAAC,MAAM,GAAG,qBAAqB,GAAG,8BAA8B,EACxH,SAAS,EACT,QAAQ,CACR,CAAC;QACF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAA4B,eAAe,CAAC,CAAC;AACzF,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;AAC1C,QAAA,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;AAC3E,QAAA,8BAA8B,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;KAC3D;IACkB,WAAW,GAAA;AAC7B,QAAA,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;AAC7B,QAAA,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;AAC7B,QAAA,8BAA8B,CAAC,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;KAC5D;IAEkB,uBAAuB,GAAA;AACzC,QAAA,MAAM,OAAO,GAAG,KAAK,CAAC,uBAAuB,EAAE,CAAC;AAEhD,QAAA,IAAI,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE;YAClC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;AAC5C,SAAA;AAED,QAAA,OAAO,OAAO,CAAC;KACf;AACD,CAAA;AAED,MACa,iBAAiB,CAAA;IAG7B,WAAsB,CAAA,QAAiB,EAAY,SAAmB,EAAA;QAAhD,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAS;QAAY,IAAS,CAAA,SAAA,GAAT,SAAS,CAAU;AAF5D,QAAA,IAAA,CAAA,eAAe,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;KAEuB;IAC1E,KAAK,CAA2D,SAA2B,EAAE,MAAS,EAAA;AACrG,QAAA,OAAO,IAAI,UAAU,CAAU,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;KACvG;8GANW,iBAAiB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,OAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,QAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;kHAAjB,iBAAiB,EAAA,CAAA,CAAA,EAAA;;2FAAjB,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAD7B,UAAU;;;ACnDX,MACa,OAAO,CAAA;AADpB,IAAA,WAAA,GAAA;AAEW,QAAA,IAAA,CAAA,QAAQ,GAAG,MAAM,CAAC,oBAAoB,CAAC,CAAC;AACxC,QAAA,IAAA,CAAA,OAAO,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC;AAQ5C,KAAA;AANA,IAAA,IAAI,CAA+B,SAA2B,EAAE,OAAU,SAAS,EAAE,SAAiC,EAAE,EAAA;QACvH,MAAM,cAAc,GAAG,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,MAAM,EAAmB,CAAC;AACvE,QAAA,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAsB,SAAS,EAAE,cAAc,CAAC,CAAC;AAChF,QAAA,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACf,QAAA,OAAO,GAAG,CAAC;KACX;8GATW,OAAO,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA,EAAA;kHAAP,OAAO,EAAA,CAAA,CAAA,EAAA;;2FAAP,OAAO,EAAA,UAAA,EAAA,CAAA;kBADnB,UAAU;;;ACDX;;;AAGG;SACa,cAAc,GAAA;AAC7B,IAAA,OAAO,CAAC,OAAO,EAAE,EAAE,OAAO,EAAE,oBAAoB,EAAE,QAAQ,EAAE,iBAAiB,EAAE,CAAC,CAAC;AAClF,CAAC;AAED,MAIa,aAAa,CAAA;8GAAb,aAAa,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;AAAb,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,aAAa,YAHf,aAAa,CAAA,EAAA,CAAA,CAAA,EAAA;AAGX,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,aAAa,aAFd,CAAC,cAAc,EAAE,CAAC,YADnB,aAAa,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAGX,aAAa,EAAA,UAAA,EAAA,CAAA;kBAJzB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACT,OAAO,EAAE,CAAC,aAAa,CAAC;AACxB,oBAAA,SAAS,EAAE,CAAC,cAAc,EAAE,CAAC;AAC7B,iBAAA,CAAA;;;ACjBD;;AAEG;;;;"}
{"version":3,"file":"lucca-front-ng-input.mjs","sources":["../../../packages/ng/input/clearer/clearer.model.ts","../../../packages/ng/input/clearer/clearer.component.ts","../../../packages/ng/input/clearer/clearer.component.html","../../../packages/ng/input/clearer/clearer.module.ts","../../../packages/ng/input/displayer/input-displayer.model.ts","../../../packages/ng/input/displayer/input-displayer.directive.ts","../../../packages/ng/input/displayer/input-displayer.module.ts","../../../packages/ng/input/input.model.ts","../../../packages/ng/input/input.directive.ts","../../../packages/ng/input/input.module.ts","../../../packages/ng/input/lucca-front-ng-input.ts"],"sourcesContent":["import { Observable } from 'rxjs';\n\nexport interface ILuClearer<T> {\n\tonClear: Observable<T>;\n}\nexport abstract class ALuClearer<T> implements ILuClearer<T> {\n\tonClear: Observable<T>;\n}\n","import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, EventEmitter, forwardRef, Output } from '@angular/core';\nimport { ALuClearer, ILuClearer } from './clearer.model';\n\n@Component({\n\tselector: 'lu-input-clearer',\n\ttemplateUrl: './clearer.component.html',\n\tstyleUrls: ['./clearer.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\texportAs: 'luClearer',\n\tstandalone: true,\n\timports: [CommonModule],\n\tproviders: [\n\t\t{\n\t\t\tprovide: ALuClearer,\n\t\t\tuseExisting: forwardRef(() => LuInputClearerComponent),\n\t\t},\n\t],\n})\nexport class LuInputClearerComponent<T> extends ALuClearer<T> implements ILuClearer<T> {\n\t// eslint-disable-next-line @angular-eslint/no-output-on-prefix\n\t@Output() override onClear = new EventEmitter<T>();\n\tonClick($event: Event) {\n\t\tthis.onClear.emit();\n\t\t$event.preventDefault();\n\t\t$event.stopPropagation();\n\t}\n}\n","<a href=\"#\" role=\"button\" class=\"clear\" (click)=\"onClick($event)\">\n\t<span class=\"u-mask\">Clear</span>\n</a>\n","import { NgModule } from '@angular/core';\nimport { LuInputClearerComponent } from './clearer.component';\n\n@NgModule({\n\timports: [LuInputClearerComponent],\n\texports: [LuInputClearerComponent],\n})\nexport class LuInputClearerModule {}\n","import { ViewRef } from '@angular/core';\n\nexport interface ILuInputDisplayer<T> {\n\tmultiple: boolean;\n\tgetViewRef(value: T | T[]): ViewRef;\n}\nexport abstract class ALuInputDisplayer<T> implements ILuInputDisplayer<T> {\n\tmultiple = false;\n\tabstract getViewRef(value: T | T[]): ViewRef;\n}\n","import { Directive, forwardRef, Input, TemplateRef, ViewRef } from '@angular/core';\nimport { ALuInputDisplayer, ILuInputDisplayer } from './input-displayer.model';\n\n@Directive({\n\tselector: '[luDisplayer]',\n\tstandalone: true,\n\tproviders: [\n\t\t{\n\t\t\tprovide: ALuInputDisplayer,\n\t\t\tuseExisting: forwardRef(() => LuInputDisplayerDirective),\n\t\t\tmulti: true,\n\t\t},\n\t],\n})\nexport class LuInputDisplayerDirective<T> extends ALuInputDisplayer<T> implements ILuInputDisplayer<T> {\n\t@Input('luDisplayerMultiple') set argMultiple(m: boolean) {\n\t\tthis.multiple = !!m;\n\t}\n\t@Input('multiple') set inputMultiple(m: boolean | string) {\n\t\tif (m === '') {\n\t\t\t// allows to have multiple = true when writing\n\t\t\t// <ng-template luDisplayer multiple>\n\t\t\tthis.multiple = true;\n\t\t} else {\n\t\t\tthis.multiple = !!m;\n\t\t}\n\t}\n\tconstructor(protected template: TemplateRef<LuInputDisplayerContext<T>>) {\n\t\tsuper();\n\t}\n\tgetViewRef(value: T | T[]): ViewRef {\n\t\treturn this.template.createEmbeddedView({ $implicit: value });\n\t}\n}\n\nexport class LuInputDisplayerContext<T> {\n\tconstructor(public $implicit: T | T[]) {}\n}\n","import { NgModule } from '@angular/core';\nimport { LuInputDisplayerDirective } from './input-displayer.directive';\n\n@NgModule({\n\timports: [LuInputDisplayerDirective],\n\texports: [LuInputDisplayerDirective],\n})\nexport class LuInputDisplayerModule {}\n","import { ChangeDetectorRef, ElementRef, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\n\nexport type ILuInput = ControlValueAccessor;\n\nexport abstract class ALuInput<T, U extends HTMLElement = HTMLElement> implements ILuInput {\n\tprotected _placeholder: string;\n\tget placeholder() {\n\t\treturn this._placeholder;\n\t}\n\tprotected _value: T;\n\tconstructor(protected _changeDetectorRef: ChangeDetectorRef, protected _elementRef: ElementRef<U>, protected _renderer: Renderer2) {}\n\tsetValue(value: T) {\n\t\tthis.value = value;\n\t\tthis._cvaOnChange(value);\n\t\tthis._onTouched();\n\t}\n\tget value(): T {\n\t\treturn this._value;\n\t}\n\tset value(value: T) {\n\t\tthis._value = value;\n\t\tthis.render();\n\t\tthis.applyClasses();\n\t\tthis._changeDetectorRef.markForCheck();\n\t}\n\t// From ControlValueAccessor interface\n\twriteValue(value: T) {\n\t\tthis.value = value;\n\t}\n\t// From ControlValueAccessor interface\n\tprotected _cvaOnChange: (value: T) => void = () => {\n\t\treturn;\n\t};\n\tregisterOnChange(fn: (value: T) => void) {\n\t\tthis._cvaOnChange = fn;\n\t}\n\t// From ControlValueAccessor interface\n\tprotected _onTouched: () => void = () => {\n\t\treturn;\n\t};\n\tregisterOnTouched(fn: () => void) {\n\t\tthis._onTouched = fn;\n\t}\n\tprotected isEmpty() {\n\t\treturn this.value === null || this.value === undefined;\n\t}\n\tprotected applyClasses() {\n\t\tif (this.isEmpty()) {\n\t\t\tthis._renderer.removeClass(this._elementRef.nativeElement, 'is-filled');\n\t\t} else {\n\t\t\tthis._renderer.addClass(this._elementRef.nativeElement, 'is-filled');\n\t\t}\n\t}\n\n\tprotected abstract render(): void;\n}\n","import { Directive, ElementRef, OnInit, Renderer2 } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\n/**\n * adds class is-filled when model is empty\n */\n@Directive({\n\tselector: '[luInput]',\n\tstandalone: true,\n})\nexport class LuInputDirective implements OnInit {\n\tconstructor(protected _elementRef: ElementRef, protected _renderer: Renderer2, protected _ngControl: NgControl) {}\n\tprotected isEmpty(value) {\n\t\tif (typeof value === 'string') {\n\t\t\treturn value === '';\n\t\t}\n\t\treturn value === null || value === undefined;\n\t}\n\tprotected applyClasses(value) {\n\t\tif (this.isEmpty(value)) {\n\t\t\tthis._renderer.removeClass(this._elementRef.nativeElement, 'is-filled');\n\t\t} else {\n\t\t\tthis._renderer.addClass(this._elementRef.nativeElement, 'is-filled');\n\t\t}\n\t}\n\tngOnInit() {\n\t\tthis._ngControl.valueChanges.subscribe((v) => this.applyClasses(v));\n\t\tconst val: unknown = this._ngControl.value;\n\t\tthis.applyClasses(val);\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { LuInputClearerComponent } from './clearer/index';\nimport { LuInputDisplayerDirective } from './displayer/index';\nimport { LuInputDirective } from './input.directive';\n\n@NgModule({\n\timports: [LuInputDirective, LuInputDisplayerDirective, LuInputClearerComponent],\n\texports: [LuInputDirective, LuInputDisplayerDirective, LuInputClearerComponent],\n})\nexport class LuInputModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}
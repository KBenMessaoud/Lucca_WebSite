import * as i0 from '@angular/core';
import { InjectionToken, EventEmitter, booleanAttribute, Component, ChangeDetectionStrategy, Input, HostBinding, Output, ViewEncapsulation, inject, ViewContainerRef, ElementRef, numberAttribute, ViewChild } from '@angular/core';
import * as i1 from '@angular/common';
import { NgIf, CommonModule } from '@angular/common';
import * as i1$1 from '@lucca-front/ng/core';
import { getIntl, PortalDirective, NgClazz } from '@lucca-front/ng/core';
import { IconComponent } from '@lucca-front/ng/icon';
import { Overlay } from '@angular/cdk/overlay';
import { TemplatePortal } from '@angular/cdk/portal';
import { trigger, state, style, transition, animate } from '@angular/animations';
import { ButtonComponent } from '@lucca-front/ng/button';

const LU_CALLOUT_TRANSLATIONS = new InjectionToken('LuCalloutTranslations', {
    factory: () => luCalloutTranslations,
});
const luCalloutTranslations = {
    en: {
        close: 'Close',
    },
    fr: {
        close: 'Fermer',
    },
    es: {
        close: 'Cerrar',
    },
};

const CalloutStateMap = {
    success: {
        icon: 'signSuccess',
        palette: 'success',
    },
    warning: {
        icon: 'signWarning',
        palette: 'warning',
    },
    error: {
        icon: 'signError',
        palette: 'error',
    },
};

class CalloutComponent {
    constructor() {
        this.palette = 'none';
        this.removable = false;
        this.removed = false;
        this.removedChange = new EventEmitter();
        this.intl = getIntl(LU_CALLOUT_TRANSLATIONS);
    }
    set state(state) {
        const { icon, palette } = CalloutStateMap[state];
        if (this.palette === 'none') {
            this.palette = palette;
        }
        if (!this.icon) {
            this.icon = icon;
        }
    }
    get hiddenAttr() {
        return this.removed ? 'hidden' : null;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: CalloutComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.3", type: CalloutComponent, isStandalone: true, selector: "lu-callout", inputs: { heading: "heading", palette: "palette", size: "size", removable: ["removable", "removable", booleanAttribute], icon: "icon", state: "state", removed: ["removed", "removed", booleanAttribute] }, outputs: { removedChange: "removedChange" }, host: { properties: { "attr.hidden": "this.hiddenAttr" } }, ngImport: i0, template: "<div class=\"callout palette-{{palette}} mod-{{size}}\" *ngIf=\"!removed\">\n\t<div class=\"callout-icon\" *ngIf=\"icon\">\n\t\t<span aria-hidden=\"true\" class=\"lucca-icon icon-{{icon}}\"></span>\n\t</div>\n\t<div class=\"callout-content\">\n\t\t<strong class=\"callout-content-title\" *ngIf=\"heading\">\n\t\t\t<ng-container *luPortal=\"heading\"></ng-container>\n\t\t</strong>\n\t\t<div class=\"callout-content-description\">\n\t\t\t<ng-content></ng-content>\n\t\t</div>\n\t</div>\n\t<button *ngIf=\"removable\" type=\"button\" class=\"callout-kill\" (click)=\"removed = true; removedChange.emit(true)\">\n\t\t<span class=\"u-mask\">{{ intl.close }}</span>\n\t</button>\n</div>\n", styles: [".callout{align-items:flex-start;border-radius:var(--commons-borderRadius-L);background-color:var(--palettes-50, var(--palettes-grey-50));color:var(--palettes-grey-800);border-color:var(--palettes-300, var(--palettes-grey-300));border-style:solid;border-width:var(--commons-divider-width);gap:.75rem;padding:var(--spacings-XS) .75rem;position:relative}.callout:not([hidden]){display:flex}.callout a,.callout .link{--commons-text-link-color: var(--palettes-grey-800);--commons-text-link-hover: var(--palettes-grey-700)}.callout-content{flex:1;display:flex;flex-direction:column;gap:var(--spacings-XXS)}.callout-content-title{font-weight:600}.callout-icon{display:inline-flex;color:var(--palettes-700, var(--palettes-grey-700))}.callout-icon .lucca-icon{font-size:var(--sizes-M-lineHeight)}.callout-kill{padding:0;border:0;width:100%;background-color:transparent;color:inherit;text-align:left;display:block;font:inherit;cursor:pointer;color:currentColor;transition-duration:var(--commons-animations-durations-fast);transition-property:background-color;width:auto}.callout-kill:focus-visible{outline:2px solid var(--palettes-primary-700);outline-offset:2px;border-radius:var(--commons-borderRadius-M)}.callout-kill:before{display:inline-block;vertical-align:text-bottom;font-style:normal;font-family:Lucca icons;font-size:var(--sizes-S-lineHeight)}@supports (content: \"*\"/\"\"){.callout-kill:before{content:\"\\e9bf\"/\"\"}}@supports not (content: \"*\"/\"\"){.callout-kill:before{content:\"\\e9bf\"}}.callout.mod-S{font-size:var(--sizes-S-fontSize);line-height:var(--sizes-S-lineHeight);gap:.75rem}.callout.mod-S .callout-icon{line-height:var(--sizes-S-lineHeight)}.callout.mod-S .callout-icon .lucca-icon{font-size:var(--sizes-S-lineHeight)}.callout.mod-tiny{display:inline-flex;gap:.375rem;padding:var(--spacings-XS)}\n"], dependencies: [{ kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: PortalDirective, selector: "[luPortal]", inputs: ["luPortal"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: CalloutComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lu-callout', standalone: true, imports: [NgIf, PortalDirective], changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"callout palette-{{palette}} mod-{{size}}\" *ngIf=\"!removed\">\n\t<div class=\"callout-icon\" *ngIf=\"icon\">\n\t\t<span aria-hidden=\"true\" class=\"lucca-icon icon-{{icon}}\"></span>\n\t</div>\n\t<div class=\"callout-content\">\n\t\t<strong class=\"callout-content-title\" *ngIf=\"heading\">\n\t\t\t<ng-container *luPortal=\"heading\"></ng-container>\n\t\t</strong>\n\t\t<div class=\"callout-content-description\">\n\t\t\t<ng-content></ng-content>\n\t\t</div>\n\t</div>\n\t<button *ngIf=\"removable\" type=\"button\" class=\"callout-kill\" (click)=\"removed = true; removedChange.emit(true)\">\n\t\t<span class=\"u-mask\">{{ intl.close }}</span>\n\t</button>\n</div>\n", styles: [".callout{align-items:flex-start;border-radius:var(--commons-borderRadius-L);background-color:var(--palettes-50, var(--palettes-grey-50));color:var(--palettes-grey-800);border-color:var(--palettes-300, var(--palettes-grey-300));border-style:solid;border-width:var(--commons-divider-width);gap:.75rem;padding:var(--spacings-XS) .75rem;position:relative}.callout:not([hidden]){display:flex}.callout a,.callout .link{--commons-text-link-color: var(--palettes-grey-800);--commons-text-link-hover: var(--palettes-grey-700)}.callout-content{flex:1;display:flex;flex-direction:column;gap:var(--spacings-XXS)}.callout-content-title{font-weight:600}.callout-icon{display:inline-flex;color:var(--palettes-700, var(--palettes-grey-700))}.callout-icon .lucca-icon{font-size:var(--sizes-M-lineHeight)}.callout-kill{padding:0;border:0;width:100%;background-color:transparent;color:inherit;text-align:left;display:block;font:inherit;cursor:pointer;color:currentColor;transition-duration:var(--commons-animations-durations-fast);transition-property:background-color;width:auto}.callout-kill:focus-visible{outline:2px solid var(--palettes-primary-700);outline-offset:2px;border-radius:var(--commons-borderRadius-M)}.callout-kill:before{display:inline-block;vertical-align:text-bottom;font-style:normal;font-family:Lucca icons;font-size:var(--sizes-S-lineHeight)}@supports (content: \"*\"/\"\"){.callout-kill:before{content:\"\\e9bf\"/\"\"}}@supports not (content: \"*\"/\"\"){.callout-kill:before{content:\"\\e9bf\"}}.callout.mod-S{font-size:var(--sizes-S-fontSize);line-height:var(--sizes-S-lineHeight);gap:.75rem}.callout.mod-S .callout-icon{line-height:var(--sizes-S-lineHeight)}.callout.mod-S .callout-icon .lucca-icon{font-size:var(--sizes-S-lineHeight)}.callout.mod-tiny{display:inline-flex;gap:.375rem;padding:var(--spacings-XS)}\n"] }]
        }], propDecorators: { 
        /**
         * The title of the callout
         */
        heading: [{
                type: Input
            }], 
        /**
         * Which palette should be used for the entire callout.
         * Defaults to none (inherits parent palette)
         */
        palette: [{
                type: Input
            }], 
        /**
         * Which size should the callout be? Defaults to medium
         */
        size: [{
                type: Input
            }], 
        /**
         * Should we display the remove icon?
         */
        removable: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], 
        /**
         * Which icon should we display in the callout if any?
         * Defaults to no icon.
         */
        icon: [{
                type: Input
            }], state: [{
                type: Input
            }], 
        /**
         * Is the callout removed? Works with two way binding too.
         */
        removed: [{
                type: Input,
                args: [{ transform: booleanAttribute }]
            }], hiddenAttr: [{
                type: HostBinding,
                args: ['attr.hidden']
            }], removedChange: [{
                type: Output
            }] } });

class CalloutDisclosureComponent {
    constructor() {
        this.palette = 'none';
        this.size = 'M';
    }
    set state(state) {
        const { icon, palette } = CalloutStateMap[state];
        if (this.palette === 'none') {
            this.palette = palette;
        }
        if (!this.icon) {
            this.icon = icon;
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: CalloutDisclosureComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.3", type: CalloutDisclosureComponent, isStandalone: true, selector: "lu-callout-disclosure", inputs: { icon: "icon", heading: "heading", palette: "palette", size: "size", state: "state" }, ngImport: i0, template: "<details class=\"calloutDisclosure palette-{{palette}} mod-{{size}}\" [class.mod-iconless]=\"!icon\">\n\t<summary class=\"calloutDisclosure-summary\">\n\t\t<lu-icon class=\"calloutDisclosure-summary-icon\" *ngIf=\"icon\" [icon]=\"icon\"></lu-icon>\n\t\t<span class=\"calloutDisclosure-summary-title\">\n\t\t\t<ng-container *luPortal=\"heading\"></ng-container>\n\t\t</span>\n\t\t<lu-icon class=\"calloutDisclosure-summary-chevron\" icon=\"arrowChevronBottom\"></lu-icon>\n\t</summary>\n\t<div class=\"calloutDisclosure-details\">\n\t\t<ng-content></ng-content>\n\t</div>\n</details>\n", styles: [".calloutDisclosure{--components-calloutDisclosure-paddingHorizontal: .75rem;border-radius:var(--commons-borderRadius-L);background-color:var(--palettes-50, var(--palettes-grey-50));color:var(--palettes-grey-800);border-color:var(--palettes-300, var(--palettes-grey-300));border-style:solid;border-width:var(--commons-divider-width)}.calloutDisclosure a,.calloutDisclosure .link{--commons-text-link-color: var(--palettes-grey-800);--commons-text-link-hover: var(--palettes-grey-700)}.calloutDisclosure-summary{display:flex;gap:.75rem;padding:var(--spacings-XS) var(--components-calloutDisclosure-paddingHorizontal);border-radius:var(--commons-borderRadius-L);transition:background-color var(--commons-animations-durations-fast) ease;cursor:pointer;z-index:1;position:relative}.calloutDisclosure-summary:hover{background-color:var(--palettes-100, var(--palettes-grey-100))}.calloutDisclosure-summary:focus-visible{outline:2px solid var(--palettes-primary-700);outline-offset:3px;border-radius:6px}.calloutDisclosure-summary:focus-visible~.calloutDisclosure-details{box-shadow:none}.calloutDisclosure-summary-icon{--icon-size: 1.5rem;color:var(--palettes-700, var(--palettes-grey-700))}.calloutDisclosure-summary-title{font-weight:600}.calloutDisclosure-summary-chevron{--icon-size: 1.5rem;color:var(--palettes-grey-700);margin-left:auto;transition:transform var(--commons-animations-durations-standard) ease}.calloutDisclosure-details{margin:0 calc(var(--components-calloutDisclosure-paddingHorizontal) + 2.25rem);padding:var(--spacings-XS) 0 var(--spacings-S);box-shadow:0 -1px 0 0 var(--palettes-200, var(--palettes-grey-200))}.calloutDisclosure[open] .calloutDisclosure-summary-chevron{transform:rotate(-180deg)}.calloutDisclosure.mod-S .calloutDisclosure-summary-title{font-size:var(--sizes-S-fontSize);line-height:var(--sizes-S-lineHeight)}.calloutDisclosure.mod-S .calloutDisclosure-summary-icon,.calloutDisclosure.mod-S .calloutDisclosure-summary-chevron{--icon-size: 1.25rem}.calloutDisclosure.mod-S .calloutDisclosure-details{margin-left:calc(var(--components-calloutDisclosure-paddingHorizontal) + 2rem)}.calloutDisclosure.mod-S .calloutFeedbackList{font-size:var(--sizes-S-fontSize);line-height:var(--sizes-S-lineHeight)}.calloutDisclosure.mod-S .calloutFeedbackList .button{--components-button-font-size: var(--sizes-XS-fontSize);--components-button-line-height: var(--sizes-XS-lineHeight);--components-button-padding: var(--spacings-XXS) var(--spacings-XS);--components-button-gap: var(--spacings-XXS);--icon-size: 1rem}.calloutDisclosure.mod-S .calloutFeedbackList .button .numericBadge{--components-numericBadge-size: 1rem;--components-numericBadge-borderRadius: var(--commons-borderRadius-M);--components-numericBadge-fontSize: var(--sizes-XS-fontSize);--components-numericBadge-lineHeight: var(--sizes-XS-lineHeight)}.calloutDisclosure.mod-iconless .calloutDisclosure-summary-icon{display:none}.calloutDisclosure.mod-iconless .calloutDisclosure-details{margin-left:var(--components-calloutDisclosure-paddingHorizontal)}:host{display:block}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: IconComponent, selector: "lu-icon", inputs: ["icon", "alt", "size", "color"] }, { kind: "directive", type: PortalDirective, selector: "[luPortal]", inputs: ["luPortal"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: CalloutDisclosureComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lu-callout-disclosure', standalone: true, imports: [CommonModule, IconComponent, PortalDirective], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: "<details class=\"calloutDisclosure palette-{{palette}} mod-{{size}}\" [class.mod-iconless]=\"!icon\">\n\t<summary class=\"calloutDisclosure-summary\">\n\t\t<lu-icon class=\"calloutDisclosure-summary-icon\" *ngIf=\"icon\" [icon]=\"icon\"></lu-icon>\n\t\t<span class=\"calloutDisclosure-summary-title\">\n\t\t\t<ng-container *luPortal=\"heading\"></ng-container>\n\t\t</span>\n\t\t<lu-icon class=\"calloutDisclosure-summary-chevron\" icon=\"arrowChevronBottom\"></lu-icon>\n\t</summary>\n\t<div class=\"calloutDisclosure-details\">\n\t\t<ng-content></ng-content>\n\t</div>\n</details>\n", styles: [".calloutDisclosure{--components-calloutDisclosure-paddingHorizontal: .75rem;border-radius:var(--commons-borderRadius-L);background-color:var(--palettes-50, var(--palettes-grey-50));color:var(--palettes-grey-800);border-color:var(--palettes-300, var(--palettes-grey-300));border-style:solid;border-width:var(--commons-divider-width)}.calloutDisclosure a,.calloutDisclosure .link{--commons-text-link-color: var(--palettes-grey-800);--commons-text-link-hover: var(--palettes-grey-700)}.calloutDisclosure-summary{display:flex;gap:.75rem;padding:var(--spacings-XS) var(--components-calloutDisclosure-paddingHorizontal);border-radius:var(--commons-borderRadius-L);transition:background-color var(--commons-animations-durations-fast) ease;cursor:pointer;z-index:1;position:relative}.calloutDisclosure-summary:hover{background-color:var(--palettes-100, var(--palettes-grey-100))}.calloutDisclosure-summary:focus-visible{outline:2px solid var(--palettes-primary-700);outline-offset:3px;border-radius:6px}.calloutDisclosure-summary:focus-visible~.calloutDisclosure-details{box-shadow:none}.calloutDisclosure-summary-icon{--icon-size: 1.5rem;color:var(--palettes-700, var(--palettes-grey-700))}.calloutDisclosure-summary-title{font-weight:600}.calloutDisclosure-summary-chevron{--icon-size: 1.5rem;color:var(--palettes-grey-700);margin-left:auto;transition:transform var(--commons-animations-durations-standard) ease}.calloutDisclosure-details{margin:0 calc(var(--components-calloutDisclosure-paddingHorizontal) + 2.25rem);padding:var(--spacings-XS) 0 var(--spacings-S);box-shadow:0 -1px 0 0 var(--palettes-200, var(--palettes-grey-200))}.calloutDisclosure[open] .calloutDisclosure-summary-chevron{transform:rotate(-180deg)}.calloutDisclosure.mod-S .calloutDisclosure-summary-title{font-size:var(--sizes-S-fontSize);line-height:var(--sizes-S-lineHeight)}.calloutDisclosure.mod-S .calloutDisclosure-summary-icon,.calloutDisclosure.mod-S .calloutDisclosure-summary-chevron{--icon-size: 1.25rem}.calloutDisclosure.mod-S .calloutDisclosure-details{margin-left:calc(var(--components-calloutDisclosure-paddingHorizontal) + 2rem)}.calloutDisclosure.mod-S .calloutFeedbackList{font-size:var(--sizes-S-fontSize);line-height:var(--sizes-S-lineHeight)}.calloutDisclosure.mod-S .calloutFeedbackList .button{--components-button-font-size: var(--sizes-XS-fontSize);--components-button-line-height: var(--sizes-XS-lineHeight);--components-button-padding: var(--spacings-XXS) var(--spacings-XS);--components-button-gap: var(--spacings-XXS);--icon-size: 1rem}.calloutDisclosure.mod-S .calloutFeedbackList .button .numericBadge{--components-numericBadge-size: 1rem;--components-numericBadge-borderRadius: var(--commons-borderRadius-M);--components-numericBadge-fontSize: var(--sizes-XS-fontSize);--components-numericBadge-lineHeight: var(--sizes-XS-lineHeight)}.calloutDisclosure.mod-iconless .calloutDisclosure-summary-icon{display:none}.calloutDisclosure.mod-iconless .calloutDisclosure-details{margin-left:var(--components-calloutDisclosure-paddingHorizontal)}:host{display:block}\n"] }]
        }], propDecorators: { icon: [{
                type: Input
            }], heading: [{
                type: Input,
                args: [{ required: true }]
            }], palette: [{
                type: Input
            }], size: [{
                type: Input
            }], state: [{
                type: Input
            }] } });

class CalloutPopoverComponent {
    constructor() {
        this.#overlay = inject(Overlay);
        this.#viewContainerRef = inject(ViewContainerRef);
        this.#elementRef = inject(ElementRef);
        /**
         * Debounce for the popover to open (mouse will have to be on the element fox openDelay milliseconds for popover to show)
         */
        this.openDelay = 50;
        /**
         * Debounce for the popover to close (mouse will have to be out of both popover and trigger for closeDelay milliseconds for it to close)
         */
        this.closeDelay = 500;
        /**
         * Palette for both the button and the popover content
         */
        this.palette = 'none';
    }
    #overlay;
    #viewContainerRef;
    #elementRef;
    #overlayRef;
    set state(state) {
        const { icon, palette } = CalloutStateMap[state];
        if (this.palette === 'none') {
            this.palette = palette;
        }
        if (!this.icon) {
            this.icon = icon;
        }
    }
    get contentSize() {
        if (this.size === 'XS') {
            return 'S';
        }
        return this.size;
    }
    showContent() {
        clearTimeout(this._hideDelayId);
        // Don't open if we still have one opened
        if (this._showDelayId) {
            return;
        }
        this._showDelayId = setTimeout(() => {
            this.createPanelContent();
            delete this._hideDelayId;
        }, this.openDelay);
    }
    createPanelContent() {
        const positionStrategy = this.#overlay
            .position()
            .flexibleConnectedTo(this.overlayOrigin)
            .withPositions([
            {
                originX: 'center',
                originY: 'top',
                overlayX: 'center',
                overlayY: 'bottom',
            },
            {
                originX: 'center',
                originY: 'bottom',
                overlayX: 'center',
                overlayY: 'top',
            },
        ]);
        this.#overlayRef = this.#overlay.create({
            positionStrategy,
        });
        const portal = new TemplatePortal(this.overlayContent, this.#viewContainerRef);
        this.#overlayRef.attach(portal);
    }
    hideContent(event) {
        clearTimeout(this._showDelayId);
        this._hideDelayId = setTimeout(() => {
            const newTarget = event?.relatedTarget;
            // This is to prevent tooltip closing when user puts cursor on tooltip, thus leaving the origin trigger
            if (!newTarget || !(this.#overlayRef?.overlayElement?.contains(newTarget) || this.#elementRef?.nativeElement?.contains(newTarget))) {
                // Remove the tooltip if needed.
                if (this.#overlayRef) {
                    this.#overlayRef.dispose();
                    delete this._showDelayId;
                    delete this._hideDelayId;
                }
            }
        }, this.closeDelay);
    }
    ngOnDestroy() {
        this.hideContent(null);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: CalloutPopoverComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.3", type: CalloutPopoverComponent, isStandalone: true, selector: "lu-callout-popover", inputs: { openDelay: ["openDelay", "openDelay", numberAttribute], closeDelay: ["closeDelay", "closeDelay", numberAttribute], buttonLabel: "buttonLabel", palette: "palette", size: "size", icon: "icon", state: "state", heading: "heading" }, viewQueries: [{ propertyName: "overlayOrigin", first: true, predicate: ["overlayOriginRef"], descendants: true }, { propertyName: "overlayContent", first: true, predicate: ["overlayContentRef"], descendants: true }], ngImport: i0, template: "<button\n\ttype=\"button\"\n\tclass=\"calloutPopover palette-{{palette}} mod-{{size}}\"\n\t#overlayOriginRef\n\t(mouseenter)=\"showContent()\"\n\t(focus)=\"showContent()\"\n\t(mouseleave)=\"hideContent($event)\"\n\t(blur)=\"hideContent(null)\"\n>\n\t<lu-icon class=\"calloutPopover-icon\" [icon]=\"icon\"></lu-icon>\n\t{{buttonLabel}}\n</button>\n<ng-template #overlayContentRef>\n\t<div\n\t\t[@tooltip]=\"'open'\"\n\t\tclass=\"lu-popover-content calloutPopover-overlay mod-{{contentSize}}\"\n\t\t(mouseenter)=\"showContent()\"\n\t\t(mouseleave)=\"hideContent($event)\"\n\t>\n\t\t<div class=\"calloutPopover-overlay-head\">\n\t\t\t<lu-icon class=\"calloutPopover-overlay-head-icon palette-{{palette}}\" [icon]=\"icon\"></lu-icon>\n\t\t\t<strong class=\"calloutPopover-overlay-head-title\">\n\t\t\t\t<ng-container *luPortal=\"heading\"></ng-container>\n\t\t\t</strong>\n\t\t</div>\n\t\t<div class=\"calloutPopover-overlay-content\">\n\t\t\t<ng-content></ng-content>\n\t\t</div>\n\t</div>\n</ng-template>\n", styles: [".calloutPopover{display:inline-flex;gap:.375rem;align-items:center;padding:var(--spacings-XS);border-radius:var(--commons-borderRadius-L);background-color:var(--palettes-50, var(--palettes-grey-50));border-color:var(--palettes-300, var(--palettes-grey-300));border-style:solid;border-width:var(--commons-divider-width);cursor:pointer}:root{--components-calloutPopover-width: 30rem;--components-calloutPopover-content-margin: 2rem}.calloutPopover:hover{background-color:var(--palettes-100, var(--palettes-grey-100))}.calloutPopover:focus-visible{outline:2px solid var(--palettes-primary-700);outline-offset:2px}.calloutPopover-icon{--icon-size: 1.5rem;color:var(--palettes-700, var(--palettes-grey-700))}.calloutPopover-overlay{width:var(--components-calloutPopover-width);max-width:100vw}.calloutPopover-overlay-head{display:flex;gap:var(--spacings-XS)}.calloutPopover-overlay-head-title{margin-top:0;color:var(--palettes-grey-900);margin-bottom:var(--spacings-S);text-rendering:geometricPrecision;text-wrap:balance;font-weight:var(--components-title-weight, 600);font-size:var(--sizes-fontSize);line-height:var(--sizes-lineHeight);padding-top:var(--sizes-verticalPadding);padding-bottom:var(--sizes-verticalPadding);--sizes-verticalPadding: var(--sizes-M-verticalPadding);--sizes-fontSize: var(--sizes-M-fontSize);--sizes-lineHeight: var(--sizes-M-lineHeight);--components-title-weight: 600;margin:0;padding:0}.calloutPopover-overlay-head-icon{--icon-size: 1.5rem;color:var(--palettes-700, var(--palettes-grey-700))}.calloutPopover-overlay-content{margin:var(--spacings-XS) .75rem var(--spacings-XS) var(--components-calloutPopover-content-margin);padding-top:var(--spacings-XS);border-top:var(--commons-divider-width) solid var(--palettes-grey-200)}.calloutPopover.mod-S{font-size:var(--sizes-S-fontSize);line-height:var(--sizes-S-lineHeight);padding:.375rem}.calloutPopover.mod-S .calloutPopover-icon{--icon-size: 1.25rem}.calloutPopover.mod-XS{font-size:var(--sizes-XS-fontSize);line-height:var(--sizes-XS-lineHeight);padding:.125rem var(--spacings-XXS);gap:var(--spacings-XXS)}.calloutPopover.mod-XS .calloutPopover-icon{--icon-size: .75rem}.calloutPopover-overlay.mod-S{--components-calloutPopover-width: 20rem;--components-calloutPopover-content-margin: 1.75rem}.calloutPopover-overlay.mod-S .calloutPopover-overlay-head-icon{--icon-size: 1.25rem}.calloutPopover-overlay.mod-S .calloutPopover-overlay-head-title{--sizes-verticalPadding: var(--sizes-S-verticalPadding);--sizes-fontSize: var(--sizes-S-fontSize);--sizes-lineHeight: var(--sizes-S-lineHeight);--components-title-weight: 600}.calloutPopover-overlay.mod-S .calloutFeedbackList{font-size:var(--sizes-S-fontSize);line-height:var(--sizes-S-lineHeight)}.calloutPopover-overlay.mod-S .calloutFeedbackList .button{--components-button-font-size: var(--sizes-XS-fontSize);--components-button-line-height: var(--sizes-XS-lineHeight);--components-button-padding: var(--spacings-XXS) var(--spacings-XS);--components-button-gap: var(--spacings-XXS);--icon-size: 1rem}.calloutPopover-overlay.mod-S .calloutFeedbackList .button .numericBadge{--components-numericBadge-size: 1rem;--components-numericBadge-borderRadius: var(--commons-borderRadius-M);--components-numericBadge-fontSize: var(--sizes-XS-fontSize);--components-numericBadge-lineHeight: var(--sizes-XS-lineHeight)}.calloutPopover-overlay.mod-iconless{--components-calloutPopover-content-margin: 0}.calloutPopover-overlay.mod-iconless .calloutPopover-overlay-head-icon{display:none}:host{display:inline-flex}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "component", type: IconComponent, selector: "lu-icon", inputs: ["icon", "alt", "size", "color"] }, { kind: "directive", type: PortalDirective, selector: "[luPortal]", inputs: ["luPortal"] }], animations: [
            trigger('tooltip', [
                state('enter', style({
                    opacity: 1,
                    transform: `scale(1)`,
                })),
                transition('void => *', [
                    style({
                        opacity: 0,
                        transform: `scale(0)`,
                    }),
                    animate(`150ms cubic-bezier(0.25, 0.8, 0.25, 1)`),
                ]),
                transition('* => void', [animate('50ms 100ms linear', style({ opacity: 0 }))]),
            ]),
        ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: CalloutPopoverComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lu-callout-popover', standalone: true, imports: [CommonModule, IconComponent, ButtonComponent, PortalDirective], animations: [
                        trigger('tooltip', [
                            state('enter', style({
                                opacity: 1,
                                transform: `scale(1)`,
                            })),
                            transition('void => *', [
                                style({
                                    opacity: 0,
                                    transform: `scale(0)`,
                                }),
                                animate(`150ms cubic-bezier(0.25, 0.8, 0.25, 1)`),
                            ]),
                            transition('* => void', [animate('50ms 100ms linear', style({ opacity: 0 }))]),
                        ]),
                    ], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: "<button\n\ttype=\"button\"\n\tclass=\"calloutPopover palette-{{palette}} mod-{{size}}\"\n\t#overlayOriginRef\n\t(mouseenter)=\"showContent()\"\n\t(focus)=\"showContent()\"\n\t(mouseleave)=\"hideContent($event)\"\n\t(blur)=\"hideContent(null)\"\n>\n\t<lu-icon class=\"calloutPopover-icon\" [icon]=\"icon\"></lu-icon>\n\t{{buttonLabel}}\n</button>\n<ng-template #overlayContentRef>\n\t<div\n\t\t[@tooltip]=\"'open'\"\n\t\tclass=\"lu-popover-content calloutPopover-overlay mod-{{contentSize}}\"\n\t\t(mouseenter)=\"showContent()\"\n\t\t(mouseleave)=\"hideContent($event)\"\n\t>\n\t\t<div class=\"calloutPopover-overlay-head\">\n\t\t\t<lu-icon class=\"calloutPopover-overlay-head-icon palette-{{palette}}\" [icon]=\"icon\"></lu-icon>\n\t\t\t<strong class=\"calloutPopover-overlay-head-title\">\n\t\t\t\t<ng-container *luPortal=\"heading\"></ng-container>\n\t\t\t</strong>\n\t\t</div>\n\t\t<div class=\"calloutPopover-overlay-content\">\n\t\t\t<ng-content></ng-content>\n\t\t</div>\n\t</div>\n</ng-template>\n", styles: [".calloutPopover{display:inline-flex;gap:.375rem;align-items:center;padding:var(--spacings-XS);border-radius:var(--commons-borderRadius-L);background-color:var(--palettes-50, var(--palettes-grey-50));border-color:var(--palettes-300, var(--palettes-grey-300));border-style:solid;border-width:var(--commons-divider-width);cursor:pointer}:root{--components-calloutPopover-width: 30rem;--components-calloutPopover-content-margin: 2rem}.calloutPopover:hover{background-color:var(--palettes-100, var(--palettes-grey-100))}.calloutPopover:focus-visible{outline:2px solid var(--palettes-primary-700);outline-offset:2px}.calloutPopover-icon{--icon-size: 1.5rem;color:var(--palettes-700, var(--palettes-grey-700))}.calloutPopover-overlay{width:var(--components-calloutPopover-width);max-width:100vw}.calloutPopover-overlay-head{display:flex;gap:var(--spacings-XS)}.calloutPopover-overlay-head-title{margin-top:0;color:var(--palettes-grey-900);margin-bottom:var(--spacings-S);text-rendering:geometricPrecision;text-wrap:balance;font-weight:var(--components-title-weight, 600);font-size:var(--sizes-fontSize);line-height:var(--sizes-lineHeight);padding-top:var(--sizes-verticalPadding);padding-bottom:var(--sizes-verticalPadding);--sizes-verticalPadding: var(--sizes-M-verticalPadding);--sizes-fontSize: var(--sizes-M-fontSize);--sizes-lineHeight: var(--sizes-M-lineHeight);--components-title-weight: 600;margin:0;padding:0}.calloutPopover-overlay-head-icon{--icon-size: 1.5rem;color:var(--palettes-700, var(--palettes-grey-700))}.calloutPopover-overlay-content{margin:var(--spacings-XS) .75rem var(--spacings-XS) var(--components-calloutPopover-content-margin);padding-top:var(--spacings-XS);border-top:var(--commons-divider-width) solid var(--palettes-grey-200)}.calloutPopover.mod-S{font-size:var(--sizes-S-fontSize);line-height:var(--sizes-S-lineHeight);padding:.375rem}.calloutPopover.mod-S .calloutPopover-icon{--icon-size: 1.25rem}.calloutPopover.mod-XS{font-size:var(--sizes-XS-fontSize);line-height:var(--sizes-XS-lineHeight);padding:.125rem var(--spacings-XXS);gap:var(--spacings-XXS)}.calloutPopover.mod-XS .calloutPopover-icon{--icon-size: .75rem}.calloutPopover-overlay.mod-S{--components-calloutPopover-width: 20rem;--components-calloutPopover-content-margin: 1.75rem}.calloutPopover-overlay.mod-S .calloutPopover-overlay-head-icon{--icon-size: 1.25rem}.calloutPopover-overlay.mod-S .calloutPopover-overlay-head-title{--sizes-verticalPadding: var(--sizes-S-verticalPadding);--sizes-fontSize: var(--sizes-S-fontSize);--sizes-lineHeight: var(--sizes-S-lineHeight);--components-title-weight: 600}.calloutPopover-overlay.mod-S .calloutFeedbackList{font-size:var(--sizes-S-fontSize);line-height:var(--sizes-S-lineHeight)}.calloutPopover-overlay.mod-S .calloutFeedbackList .button{--components-button-font-size: var(--sizes-XS-fontSize);--components-button-line-height: var(--sizes-XS-lineHeight);--components-button-padding: var(--spacings-XXS) var(--spacings-XS);--components-button-gap: var(--spacings-XXS);--icon-size: 1rem}.calloutPopover-overlay.mod-S .calloutFeedbackList .button .numericBadge{--components-numericBadge-size: 1rem;--components-numericBadge-borderRadius: var(--commons-borderRadius-M);--components-numericBadge-fontSize: var(--sizes-XS-fontSize);--components-numericBadge-lineHeight: var(--sizes-XS-lineHeight)}.calloutPopover-overlay.mod-iconless{--components-calloutPopover-content-margin: 0}.calloutPopover-overlay.mod-iconless .calloutPopover-overlay-head-icon{display:none}:host{display:inline-flex}\n"] }]
        }], propDecorators: { overlayOrigin: [{
                type: ViewChild,
                args: ['overlayOriginRef']
            }], overlayContent: [{
                type: ViewChild,
                args: ['overlayContentRef']
            }], openDelay: [{
                type: Input,
                args: [{ transform: numberAttribute }]
            }], closeDelay: [{
                type: Input,
                args: [{ transform: numberAttribute }]
            }], buttonLabel: [{
                type: Input
            }], palette: [{
                type: Input
            }], size: [{
                type: Input
            }], icon: [{
                type: Input
            }], state: [{
                type: Input
            }], heading: [{
                type: Input,
                args: [{ required: true }]
            }] } });

class CalloutFeedbackItemComponent {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: CalloutFeedbackItemComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.3", type: CalloutFeedbackItemComponent, isStandalone: true, selector: "li[lu-callout-feedback-item]", host: { classAttribute: "calloutFeedbackList-item" }, ngImport: i0, template: "<span class=\"calloutFeedbackList-item-description\">\n\t<ng-content select=\"lu-feedback-item-description\"></ng-content>\n</span>\n<div class=\"calloutFeedbackList-item-actions\">\n\t<ng-content select=\"[lu-feedback-item-action]\"></ng-content>\n</div>\n", styles: [".calloutFeedbackList{margin:0;padding:0;list-style-type:none;display:flex;flex-direction:column;gap:var(--spacings-S)}.calloutFeedbackList-item{display:flex;flex-direction:column;gap:var(--spacings-XS)}.calloutFeedbackList-item-actions{display:inline-flex;gap:var(--spacings-XS)}.calloutFeedbackList-item-actions .button{--components-button-font-size: var(--sizes-S-fontSize);--components-button-line-height: var(--sizes-S-lineHeight);--components-button-padding: .375rem .75rem;--components-button-gap: .375rem;--icon-size: 1.25rem;margin:0}.calloutFeedbackList-item-actions .button .numericBadge{--components-numericBadge-size: 1.25rem;--components-numericBadge-borderRadius: 6px;--components-numericBadge-fontSize: var(--sizes-XS-fontSize);--components-numericBadge-lineHeight: var(--sizes-XS-lineHeight)}.calloutFeedbackList.mod-S{font-size:var(--sizes-S-fontSize);line-height:var(--sizes-S-lineHeight)}.calloutFeedbackList.mod-S .button{--components-button-font-size: var(--sizes-XS-fontSize);--components-button-line-height: var(--sizes-XS-lineHeight);--components-button-padding: var(--spacings-XXS) var(--spacings-XS);--components-button-gap: var(--spacings-XXS);--icon-size: 1rem}.calloutFeedbackList.mod-S .button .numericBadge{--components-numericBadge-size: 1rem;--components-numericBadge-borderRadius: var(--commons-borderRadius-M);--components-numericBadge-fontSize: var(--sizes-XS-fontSize);--components-numericBadge-lineHeight: var(--sizes-XS-lineHeight)}\n"], encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: CalloutFeedbackItemComponent, decorators: [{
            type: Component,
            args: [{ selector: 'li[lu-callout-feedback-item]', standalone: true, imports: [], host: {
                        class: 'calloutFeedbackList-item',
                    }, encapsulation: ViewEncapsulation.None, template: "<span class=\"calloutFeedbackList-item-description\">\n\t<ng-content select=\"lu-feedback-item-description\"></ng-content>\n</span>\n<div class=\"calloutFeedbackList-item-actions\">\n\t<ng-content select=\"[lu-feedback-item-action]\"></ng-content>\n</div>\n", styles: [".calloutFeedbackList{margin:0;padding:0;list-style-type:none;display:flex;flex-direction:column;gap:var(--spacings-S)}.calloutFeedbackList-item{display:flex;flex-direction:column;gap:var(--spacings-XS)}.calloutFeedbackList-item-actions{display:inline-flex;gap:var(--spacings-XS)}.calloutFeedbackList-item-actions .button{--components-button-font-size: var(--sizes-S-fontSize);--components-button-line-height: var(--sizes-S-lineHeight);--components-button-padding: .375rem .75rem;--components-button-gap: .375rem;--icon-size: 1.25rem;margin:0}.calloutFeedbackList-item-actions .button .numericBadge{--components-numericBadge-size: 1.25rem;--components-numericBadge-borderRadius: 6px;--components-numericBadge-fontSize: var(--sizes-XS-fontSize);--components-numericBadge-lineHeight: var(--sizes-XS-lineHeight)}.calloutFeedbackList.mod-S{font-size:var(--sizes-S-fontSize);line-height:var(--sizes-S-lineHeight)}.calloutFeedbackList.mod-S .button{--components-button-font-size: var(--sizes-XS-fontSize);--components-button-line-height: var(--sizes-XS-lineHeight);--components-button-padding: var(--spacings-XXS) var(--spacings-XS);--components-button-gap: var(--spacings-XXS);--icon-size: 1rem}.calloutFeedbackList.mod-S .button .numericBadge{--components-numericBadge-size: 1rem;--components-numericBadge-borderRadius: var(--commons-borderRadius-M);--components-numericBadge-fontSize: var(--sizes-XS-fontSize);--components-numericBadge-lineHeight: var(--sizes-XS-lineHeight)}\n"] }]
        }] });

class CalloutFeedbackListComponent {
    #ngClass = inject(NgClazz);
    ngOnChanges() {
        this.#ngClass.ngClass = [`palette-${this.palette}`, `mod-${this.size}`];
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: CalloutFeedbackListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.3", type: CalloutFeedbackListComponent, isStandalone: true, selector: "ul[lu-callout-feedback-list]", inputs: { palette: "palette", size: "size" }, host: { classAttribute: "calloutFeedbackList" }, usesOnChanges: true, hostDirectives: [{ directive: i1$1.NgClazz }], ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [".calloutFeedbackList{margin:0;padding:0;list-style-type:none;display:flex;flex-direction:column;gap:var(--spacings-S)}.calloutFeedbackList-item{display:flex;flex-direction:column;gap:var(--spacings-XS)}.calloutFeedbackList-item-actions{display:inline-flex;gap:var(--spacings-XS)}.calloutFeedbackList-item-actions .button{--components-button-font-size: var(--sizes-S-fontSize);--components-button-line-height: var(--sizes-S-lineHeight);--components-button-padding: .375rem .75rem;--components-button-gap: .375rem;--icon-size: 1.25rem;margin:0}.calloutFeedbackList-item-actions .button .numericBadge{--components-numericBadge-size: 1.25rem;--components-numericBadge-borderRadius: 6px;--components-numericBadge-fontSize: var(--sizes-XS-fontSize);--components-numericBadge-lineHeight: var(--sizes-XS-lineHeight)}.calloutFeedbackList.mod-S{font-size:var(--sizes-S-fontSize);line-height:var(--sizes-S-lineHeight)}.calloutFeedbackList.mod-S .button{--components-button-font-size: var(--sizes-XS-fontSize);--components-button-line-height: var(--sizes-XS-lineHeight);--components-button-padding: var(--spacings-XXS) var(--spacings-XS);--components-button-gap: var(--spacings-XXS);--icon-size: 1rem}.calloutFeedbackList.mod-S .button .numericBadge{--components-numericBadge-size: 1rem;--components-numericBadge-borderRadius: var(--commons-borderRadius-M);--components-numericBadge-fontSize: var(--sizes-XS-fontSize);--components-numericBadge-lineHeight: var(--sizes-XS-lineHeight)}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.3", ngImport: i0, type: CalloutFeedbackListComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ul[lu-callout-feedback-list]', standalone: true, template: '<ng-content></ng-content>', changeDetection: ChangeDetectionStrategy.OnPush, host: {
                        class: 'calloutFeedbackList',
                    }, hostDirectives: [NgClazz], encapsulation: ViewEncapsulation.None, styles: [".calloutFeedbackList{margin:0;padding:0;list-style-type:none;display:flex;flex-direction:column;gap:var(--spacings-S)}.calloutFeedbackList-item{display:flex;flex-direction:column;gap:var(--spacings-XS)}.calloutFeedbackList-item-actions{display:inline-flex;gap:var(--spacings-XS)}.calloutFeedbackList-item-actions .button{--components-button-font-size: var(--sizes-S-fontSize);--components-button-line-height: var(--sizes-S-lineHeight);--components-button-padding: .375rem .75rem;--components-button-gap: .375rem;--icon-size: 1.25rem;margin:0}.calloutFeedbackList-item-actions .button .numericBadge{--components-numericBadge-size: 1.25rem;--components-numericBadge-borderRadius: 6px;--components-numericBadge-fontSize: var(--sizes-XS-fontSize);--components-numericBadge-lineHeight: var(--sizes-XS-lineHeight)}.calloutFeedbackList.mod-S{font-size:var(--sizes-S-fontSize);line-height:var(--sizes-S-lineHeight)}.calloutFeedbackList.mod-S .button{--components-button-font-size: var(--sizes-XS-fontSize);--components-button-line-height: var(--sizes-XS-lineHeight);--components-button-padding: var(--spacings-XXS) var(--spacings-XS);--components-button-gap: var(--spacings-XXS);--icon-size: 1rem}.calloutFeedbackList.mod-S .button .numericBadge{--components-numericBadge-size: 1rem;--components-numericBadge-borderRadius: var(--commons-borderRadius-M);--components-numericBadge-fontSize: var(--sizes-XS-fontSize);--components-numericBadge-lineHeight: var(--sizes-XS-lineHeight)}\n"] }]
        }], propDecorators: { palette: [{
                type: Input
            }], size: [{
                type: Input
            }] } });

/**
 * Generated bundle index. Do not edit.
 */

export { CalloutComponent, CalloutDisclosureComponent, CalloutFeedbackItemComponent, CalloutFeedbackListComponent, CalloutPopoverComponent, LU_CALLOUT_TRANSLATIONS, luCalloutTranslations };
//# sourceMappingURL=lucca-front-ng-callout.mjs.map

{"version":3,"file":"lucca-front-ng-qualification.mjs","sources":["../../../packages/ng/qualification/select/input/qualification-select-input.translate.ts","../../../packages/ng/qualification/select/input/qualification-select-input.component.ts","../../../packages/ng/qualification/select/input/qualification-select-input.component.html","../../../packages/ng/qualification/select/input/qualification-select-input.module.ts","../../../packages/ng/qualification/select/qualification-select.module.ts","../../../packages/ng/qualification/qualification.module.ts","../../../packages/ng/qualification/lucca-front-ng-qualification.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { ILuTranslation } from '@lucca-front/ng/core';\n\nexport const LU_QUALIFICATION_SELECT_INPUT_TRANSLATIONS = new InjectionToken('LuQualificationSelectTranslations', {\n\tfactory: () => luQualificationSelectInputTranslations,\n});\n\nexport interface ILuQualificationSelectInputLabel {\n\tqualifications: string;\n}\n\nexport const luQualificationSelectInputTranslations: ILuTranslation<ILuQualificationSelectInputLabel> = {\n\ten: {\n\t\tqualifications: 'qualifications',\n\t},\n\tfr: {\n\t\tqualifications: 'qualifications',\n\t},\n\tes: {\n\t\tqualifications: 'calificaciones',\n\t},\n};\n","import { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, forwardRef, Input, Renderer2, ViewContainerRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { LuApiPagedSearcherComponent } from '@lucca-front/ng/api';\nimport { getIntl } from '@lucca-front/ng/core';\nimport { LuInputClearerComponent, LuInputDisplayerDirective } from '@lucca-front/ng/input';\nimport { ILuOptionPickerPanel, LuForGroupsDirective, LuOptionComparer, LuOptionItemComponent, LuOptionPickerAdvancedComponent } from '@lucca-front/ng/option';\nimport { ILuInputWithPicker } from '@lucca-front/ng/picker';\nimport { ALuSelectInputComponent } from '@lucca-front/ng/select';\nimport { ILuQualification } from '../../qualification.model';\nimport { LU_QUALIFICATION_SELECT_INPUT_TRANSLATIONS } from './qualification-select-input.translate';\n\n@Component({\n\tselector: 'lu-qualification-select',\n\ttemplateUrl: './qualification-select-input.component.html',\n\tstyleUrls: ['./qualification-select-input.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n\tstandalone: true,\n\timports: [CommonModule, OverlayModule, LuInputClearerComponent, LuOptionPickerAdvancedComponent, LuApiPagedSearcherComponent, LuOptionItemComponent, LuForGroupsDirective, LuInputDisplayerDirective],\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tuseExisting: forwardRef(() => LuQualificationSelectInputComponent),\n\t\t\tmulti: true,\n\t\t},\n\t],\n})\nexport class LuQualificationSelectInputComponent<\n\t\tD extends import('../../qualification.model').ILuQualification = import('../../qualification.model').ILuQualification,\n\t\tP extends ILuOptionPickerPanel<D> = ILuOptionPickerPanel<D>,\n\t>\n\textends ALuSelectInputComponent<D, P>\n\timplements ControlValueAccessor, ILuInputWithPicker<D>, AfterViewInit\n{\n\tbyId: LuOptionComparer<D> = (option1: D, option2: D) => option1 && option2 && option1.id === option2.id;\n\n\t@Input() filters: string[];\n\n\tisSearching = false;\n\n\tpublic intl = getIntl(LU_QUALIFICATION_SELECT_INPUT_TRANSLATIONS);\n\n\tconstructor(\n\t\tprotected override _changeDetectorRef: ChangeDetectorRef,\n\t\tprotected override _overlay: Overlay,\n\t\tprotected override _elementRef: ElementRef<HTMLElement>,\n\t\tprotected override _viewContainerRef: ViewContainerRef,\n\t\tprotected override _renderer: Renderer2,\n\t) {\n\t\tsuper(_changeDetectorRef, _overlay, _elementRef, _viewContainerRef, _renderer);\n\t}\n\n\tonIsSearchingChanged(isSearching: boolean) {\n\t\tthis.isSearching = isSearching;\n\t\tthis._changeDetectorRef.detectChanges();\n\t}\n\n\ttrackById(_: number, item: ILuQualification): number {\n\t\treturn item.id;\n\t}\n\n\tgroupByJobName(qualification: ILuQualification): string {\n\t\treturn qualification.job.name;\n\t}\n}\n","<div class=\"lu-select-placeholder\">{{ placeholder }}</div>\n<div class=\"lu-select-value\">\n\t<div class=\"lu-select-display-wrapper\">\n\t\t<ng-container #display></ng-container>\n\t</div>\n</div>\n<div class=\"lu-select-suffix\">\n\t<lu-input-clearer></lu-input-clearer>\n</div>\n\n<ng-template luDisplayer [luDisplayerMultiple]=\"true\" let-values>\n\t<span *ngIf=\"multiple && values?.length > 1; else singleView\"\n\t\t><span class=\"numericBadge\">{{ values.length }}</span> {{ intl.qualifications }}</span\n\t>\n\t<ng-template #singleView>{{ (values[0] || values).name }}</ng-template>\n</ng-template>\n\n<lu-option-picker-advanced [option-comparer]=\"byId\">\n\t<lu-api-paged-searcher\n\t\tapi=\"/organization/structure/api/job-qualifications\"\n\t\tstandard=\"v4\"\n\t\t[filters]=\"filters\"\n\t\tsort=\"job.name,level.position\"\n\t></lu-api-paged-searcher>\n\t<ng-template luForGroups let-group [luForGroupsGroupBy]=\"groupByJobName\">\n\t\t<h4 class=\"optionItem-groupKey\">{{ group.key }}</h4>\n\t\t<lu-option *ngFor=\"let qualification of group.items; trackBy: trackById\" [value]=\"qualification\"> {{ qualification.name }} </lu-option>\n\t</ng-template>\n</lu-option-picker-advanced>\n","import { NgModule } from '@angular/core';\nimport { LuQualificationSelectInputComponent } from './qualification-select-input.component';\n\n@NgModule({\n\timports: [LuQualificationSelectInputComponent],\n\texports: [LuQualificationSelectInputComponent],\n})\nexport class LuQualificationSelectInputModule {}\n","import { NgModule } from '@angular/core';\nimport { LuQualificationSelectInputModule } from './input/index';\n\n@NgModule({\n\timports: [LuQualificationSelectInputModule],\n\texports: [LuQualificationSelectInputModule],\n})\nexport class LuQualificationSelectModule {}\n","import { NgModule } from '@angular/core';\nimport { LuQualificationSelectModule } from './select/qualification-select.module';\n\n@NgModule({\n\timports: [LuQualificationSelectModule],\n\texports: [LuQualificationSelectModule],\n})\nexport class LuQualificationModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}
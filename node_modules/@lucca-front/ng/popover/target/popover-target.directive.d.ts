import { ElementRef } from '@angular/core';
import { ALuPopoverTarget, LuPopoverAlignment, LuPopoverPosition } from './popover-target.model';
import * as i0 from "@angular/core";
export declare class LuPopoverTargetDirective extends ALuPopoverTarget {
    constructor(ref: ElementRef);
    /** how you want to position the panel relative to the target, allowed values: above, below, before, after */
    set inputPosition(pos: LuPopoverPosition);
    /** how the panel will be align with the target, allowed values: top, bottom, left, right */
    set inputAlignment(al: LuPopoverAlignment);
    /** set to true if you want the panel to appear on top of the target */
    set inputOverlap(ov: boolean);
    set inputOffsetX(ox: number);
    set inputOffsetY(oy: number);
    static ɵfac: i0.ɵɵFactoryDeclaration<LuPopoverTargetDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<LuPopoverTargetDirective, "[luPopoverTarget]", ["LuPopoverTarget"], { "inputPosition": { "alias": "luPopoverPosition"; "required": false; }; "inputAlignment": { "alias": "luPopoverAlignment"; "required": false; }; "inputOverlap": { "alias": "luPopoverOverlap"; "required": false; }; "inputOffsetX": { "alias": "luPopoverOffsetX"; "required": false; }; "inputOffsetY": { "alias": "luPopoverOffsetY"; "required": false; }; }, {}, never, never, true, never>;
}

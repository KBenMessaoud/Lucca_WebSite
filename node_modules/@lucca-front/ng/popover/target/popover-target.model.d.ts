import { ElementRef } from '@angular/core';
export type LuPopoverPosition = 'above' | 'below' | 'before' | 'after';
export type LuPopoverAlignment = 'top' | 'bottom' | 'left' | 'right' | 'center';
/**
 * anchor for a popover panel
 */
export interface ILuPopoverTarget {
    /** how the panel will be align with the target, allowed values: top, bottom, left, right */
    alignment: LuPopoverAlignment;
    /** the element used to position the panel */
    elementRef: ElementRef;
    overlap: boolean;
    /** how you want to position the panel relative to the target, allowed values: above, below, before, after */
    position: LuPopoverPosition;
    offsetX: number;
    offsetY: number;
}
export declare abstract class ALuPopoverTarget implements ILuPopoverTarget {
    protected _elementRef: ElementRef;
    /** the element used to position the panel */
    get elementRef(): ElementRef;
    set elementRef(ref: ElementRef);
    protected _position: LuPopoverPosition;
    /** how you want to position the panel relative to the target, allowed values: above, below, before, after */
    get position(): LuPopoverPosition;
    set position(position: LuPopoverPosition | string);
    protected _alignment: LuPopoverAlignment;
    /** how the panel will be align with the target, allowed values: top, bottom, left, right */
    get alignment(): LuPopoverAlignment;
    set alignment(alignment: LuPopoverAlignment | string);
    protected _overlap: boolean;
    /** set to true if you want the panel to appear on top of the target */
    get overlap(): boolean;
    set overlap(ot: boolean);
    protected _offsetX: number;
    get offsetX(): number;
    set offsetX(ox: number);
    protected _offsetY: number;
    get offsetY(): number;
    set offsetY(oy: number);
}
export declare class LuPopoverTarget extends ALuPopoverTarget {
    constructor();
}

import { EventEmitter, OnDestroy, TemplateRef } from '@angular/core';
import { ALuPopoverPanel, ILuPopoverPanel, LuPopoverScrollStrategy } from './popover-panel.model';
import * as i0 from "@angular/core";
export declare class LuPopoverPanelComponent extends ALuPopoverPanel implements ILuPopoverPanel, OnDestroy {
    protected _template: TemplateRef<unknown>;
    protected _templateContext: unknown;
    /** Template to Use for the popover */
    get template(): TemplateRef<unknown>;
    set template(value: TemplateRef<unknown>);
    /** Template context to use for the popover when created using a template */
    get templateContext(): unknown;
    set templateContext(value: unknown);
    /**
     * Popover container close on click
     * default: false
     */
    set inputCloseOnClick(v: boolean);
    /**
     * Popover focus trap using cdkTrapFocus
     * default: false
     */
    set inputTrapFocus(v: boolean);
    /**
     * Popover scrollStrategy
     * default: reposition
     */
    set inputScrollStrategy(v: LuPopoverScrollStrategy);
    /**
     * This method takes classes set on the host lu-popover element and applies them on the
     * popover template that displays in the overlay container.  Otherwise, it's difficult
     * to style the containing popover from outside the component.
     * @param classes list of class names
     */
    set inputPanelClasses(classes: string);
    /**
     * This method takes classes set on the host lu-popover element and applies them on the
     * popover template that displays in the overlay container. Otherwise, it's difficult
     * to style the containing popover from outside the component.
     * @param classes list of class names
     */
    set inputContentClasses(classes: string);
    /** Event emitted when the popover is closed. */
    close: EventEmitter<void>;
    open: EventEmitter<void>;
    hovered: EventEmitter<boolean>;
    set vcTemplateRef(tr: TemplateRef<unknown>);
    constructor();
    ngOnDestroy(): void;
    _emitCloseEvent(): void;
    _emitOpenEvent(): void;
    _emitHoveredEvent(hovered: boolean): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<LuPopoverPanelComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<LuPopoverPanelComponent, "lu-popover", ["LuPopoverPanel"], { "template": { "alias": "template"; "required": false; }; "templateContext": { "alias": "template-context"; "required": false; }; "inputCloseOnClick": { "alias": "close-on-click"; "required": false; }; "inputTrapFocus": { "alias": "trap-focus"; "required": false; }; "inputScrollStrategy": { "alias": "scroll-strategy"; "required": false; }; "inputPanelClasses": { "alias": "panel-classes"; "required": false; }; "inputContentClasses": { "alias": "content-classes"; "required": false; }; }, { "close": "close"; "open": "open"; "hovered": "hovered"; }, never, ["*"], true, never>;
}

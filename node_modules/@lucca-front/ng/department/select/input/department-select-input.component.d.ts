import { Overlay } from '@angular/cdk/overlay';
import { AfterViewInit, ChangeDetectorRef, ElementRef, Renderer2, ViewContainerRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { ILuTreeOptionPickerPanel, LuOptionComparer } from '@lucca-front/ng/option';
import { ILuInputWithPicker } from '@lucca-front/ng/picker';
import { ALuSelectInputComponent } from '@lucca-front/ng/select';
import * as i0 from "@angular/core";
export declare class LuDepartmentSelectInputComponent<D extends import('../../department.model').ILuDepartment = import('../../department.model').ILuDepartment, P extends ILuTreeOptionPickerPanel<D> = ILuTreeOptionPickerPanel<D>> extends ALuSelectInputComponent<D, P> implements ControlValueAccessor, ILuInputWithPicker<D>, AfterViewInit {
    protected _changeDetectorRef: ChangeDetectorRef;
    protected _overlay: Overlay;
    protected _elementRef: ElementRef<HTMLElement>;
    protected _viewContainerRef: ViewContainerRef;
    protected _renderer: Renderer2;
    byId: LuOptionComparer<D>;
    appInstanceId: number | string;
    operations: number[];
    filters: string[];
    intl: import("./department-select-input.translate").ILuDepartmentSelectInputLabel;
    constructor(_changeDetectorRef: ChangeDetectorRef, _overlay: Overlay, _elementRef: ElementRef<HTMLElement>, _viewContainerRef: ViewContainerRef, _renderer: Renderer2);
    searchFn(o: D, c: string): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<LuDepartmentSelectInputComponent<any, any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<LuDepartmentSelectInputComponent<any, any>, "lu-department-select", never, { "appInstanceId": { "alias": "appInstanceId"; "required": false; }; "operations": { "alias": "operations"; "required": false; }; "filters": { "alias": "filters"; "required": false; }; }, {}, never, never, true, never>;
}

import { ILuOnOpenSubscriber, ILuTree } from '@lucca-front/ng/core';
import { ALuTreeOptionOperator, ILuTreeOptionOperator } from '@lucca-front/ng/option';
import { Observable, Subject } from 'rxjs';
import { ILuDepartment } from '../../department.model';
import { LuDepartmentV3Service } from '../../service/index';
import * as i0 from "@angular/core";
export declare class LuDepartmentFeederComponent extends ALuTreeOptionOperator<ILuDepartment> implements ILuTreeOptionOperator<ILuDepartment>, ILuOnOpenSubscriber {
    inOptions$: Observable<ILuTree<ILuDepartment>[]>;
    outOptions$: Observable<ILuTree<ILuDepartment>[]>;
    protected _out$: Subject<ILuTree<ILuDepartment>[]>;
    protected _service: LuDepartmentV3Service;
    set appInstanceId(appInstanceId: number | string);
    set operations(operations: number[]);
    set filters(filters: string[]);
    constructor(hostService: LuDepartmentV3Service, selfService: LuDepartmentV3Service);
    onOpen(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<LuDepartmentFeederComponent, [{ optional: true; skipSelf: true; }, { self: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<LuDepartmentFeederComponent, "lu-department-feeder", never, { "appInstanceId": { "alias": "appInstanceId"; "required": false; }; "operations": { "alias": "operations"; "required": false; }; "filters": { "alias": "filters"; "required": false; }; }, {}, never, never, true, never>;
}
